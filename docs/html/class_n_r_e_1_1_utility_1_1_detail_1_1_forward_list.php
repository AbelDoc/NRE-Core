<!-- HTML header for doxygen 1.8.8-->
<!DOCTYPE html>
<html>
    <head>
        <meta http-equiv="X-UA-Compatible" content="IE=edge">
        <!-- For Mobile Devices -->
        <meta name="viewport" content="width=device-width, initial-scale=1">
        <meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
        <meta name="generator" content="Doxygen 1.8.11"/>
        <script type="text/javascript" src="../../js/jquery-2.1.1.min.js"></script>
        <title>NRE-Utility: NRE::Utility::Detail::ForwardList&lt; T, Allocator &gt; Class Template Reference</title>
        <!--<link href="tabs.css" rel="stylesheet" type="text/css"/>-->
        <script type="text/javascript" src="dynsections.js"></script>
        <link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
        <link href="doxygen.css" rel="stylesheet" type="text/css" />
        <link href="style.css" rel="stylesheet" type="text/css"/>
        <link href='https://fonts.googleapis.com/css?family=Roboto+Slab' rel='stylesheet' type='text/css'>
        <?php
            include '../../php/navigation.php';
            if (!isset($_COOKIE["theme"]) || $_COOKIE["theme"] == "dark") {
                echo '<link href="../../css/dark/bootstrap.css" rel="stylesheet">';
            } else {
                echo '<link href="../../css/light/bootstrap.css" rel="stylesheet">';
            }
        ?>
        <script src="../../js/bootstrap.min.js"></script>
        <script type="text/javascript" src="doxy-boot.js"></script>
    </head>
    <body>
        <div class="container-fluid">
            <header class="page-header">
                <a href="../../../index.php">
                    <img src="../../img/Logo.png" class="logo img-responsive"/>
                </a>
            </header>
            <?php addNavigationBarInl(false); ?>
            <div id="top" class="row"><!-- do not remove this div, it is closed by doxygen! -->
                <div class="col-lg-12">
                    <div class="panel panel-default">
                        <div class="panel-body">
<!-- end header part -->
<!-- Generated by Doxygen 1.8.11 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.php"><span>Main&#160;Page</span></a></li>
      <li><a href="namespaces.php"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.php"><span>Classes</span></a></li>
      <li><a href="files.php"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.php"><span>Class&#160;List</span></a></li>
      <li><a href="classes.php"><span>Class&#160;Index</span></a></li>
      <li><a href="hierarchy.php"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.php"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespace_n_r_e.php">NRE</a></li><li class="navelem"><b>Utility</b></li><li class="navelem"><b>Detail</b></li><li class="navelem"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php">ForwardList</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-types">Public Types</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list-members.php">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">NRE::Utility::Detail::ForwardList&lt; T, Allocator &gt; Class Template Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>A simple linked list.  
 <a href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="_detail_2_forward_list_2_n_r_e___forward_list_8hpp_source.php">NRE_ForwardList.hpp</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for NRE::Utility::Detail::ForwardList&lt; T, Allocator &gt;:</div>
<div class="dyncontent">
 <div class="center">
  <img src="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.png" usemap="#NRE::Utility::Detail::ForwardList_3C_20T_2C_20Allocator_20_3E_map" alt=""/>
  <map id="NRE::Utility::Detail::ForwardList_3C_20T_2C_20Allocator_20_3E_map" name="NRE::Utility::Detail::ForwardList&lt; T, Allocator &gt;_map">
<area href="class_n_r_e_1_1_utility_1_1_stringable.php" alt="NRE::Utility::Stringable&lt; ForwardList&lt; T, Allocator &gt; &gt;" shape="rect" coords="0,56,423,80"/>
<area href="class_n_r_e_1_1_utility_1_1_static_interface.php" title="Describe an object using CRTP to create static interface (static polymorphism) " alt="NRE::Utility::StaticInterface&lt; T &gt;" shape="rect" coords="0,0,423,24"/>
</map>
 </div></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-types"></a>
Public Types</h2></td></tr>
<tr class="memitem:a94a9c6feab3ff50ed41e9615ab58347e"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#a94a9c6feab3ff50ed41e9615ab58347e">ValueType</a> = T</td></tr>
<tr class="separator:a94a9c6feab3ff50ed41e9615ab58347e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a98742f9cf6e329c4dc8a09ac3df5e78d"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#a98742f9cf6e329c4dc8a09ac3df5e78d">AllocatorType</a> = typename Allocator::template Rebind&lt; <a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list_inner_1_1_node.php">ForwardListInner::Node</a>&lt; T &gt;&gt;</td></tr>
<tr class="separator:a98742f9cf6e329c4dc8a09ac3df5e78d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a524d70a90fa07880b66be7c38dd76bdd"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#a524d70a90fa07880b66be7c38dd76bdd">SizeType</a> = std::size_t</td></tr>
<tr class="separator:a524d70a90fa07880b66be7c38dd76bdd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a14094a5ddb958303676457767d87c1b8"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#a14094a5ddb958303676457767d87c1b8">DifferenceType</a> = std::ptrdiff_t</td></tr>
<tr class="separator:a14094a5ddb958303676457767d87c1b8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a97b01e49e848ea33bd86878c241a23e2"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#a97b01e49e848ea33bd86878c241a23e2">Reference</a> = <a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#a94a9c6feab3ff50ed41e9615ab58347e">ValueType</a> &amp;</td></tr>
<tr class="separator:a97b01e49e848ea33bd86878c241a23e2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8a481ed9f3f91a70e55fe802a3ff30cf"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#a8a481ed9f3f91a70e55fe802a3ff30cf">ConstReference</a> = <a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#a94a9c6feab3ff50ed41e9615ab58347e">ValueType</a> const &amp;</td></tr>
<tr class="separator:a8a481ed9f3f91a70e55fe802a3ff30cf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a91db4246bb362ee07b4b86be64aa9f3b"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#a91db4246bb362ee07b4b86be64aa9f3b">Pointer</a> = typename AllocatorType::Pointer</td></tr>
<tr class="separator:a91db4246bb362ee07b4b86be64aa9f3b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae3bcabef535ece5747e5e423bd97e8b0"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#ae3bcabef535ece5747e5e423bd97e8b0">ConstPointer</a> = typename AllocatorType::ConstPointer</td></tr>
<tr class="separator:ae3bcabef535ece5747e5e423bd97e8b0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a157f3a9eae9f08b87687defaf033b6ee"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#a157f3a9eae9f08b87687defaf033b6ee">Iterator</a> = <a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list_inner_1_1_forward_iterator.php">ForwardListInner::ForwardIterator</a>&lt; <a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#a94a9c6feab3ff50ed41e9615ab58347e">ValueType</a>, <a class="el" href="struct_n_r_e_1_1_utility_1_1_in_out_forward_iterator.php">InOutForwardIterator</a> &gt;</td></tr>
<tr class="separator:a157f3a9eae9f08b87687defaf033b6ee"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa8034d1555a12e97536a5fc11584a0ff"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#aa8034d1555a12e97536a5fc11584a0ff">ConstIterator</a> = <a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list_inner_1_1_forward_iterator.php">ForwardListInner::ForwardIterator</a>&lt; <a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#a94a9c6feab3ff50ed41e9615ab58347e">ValueType</a>, <a class="el" href="struct_n_r_e_1_1_utility_1_1_forward_iterator.php">Utility::ForwardIterator</a> &gt;</td></tr>
<tr class="separator:aa8034d1555a12e97536a5fc11584a0ff"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae83d059e5734227abe6bd9c97d7aa545"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#ae83d059e5734227abe6bd9c97d7aa545">value_type</a> = <a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#a94a9c6feab3ff50ed41e9615ab58347e">ValueType</a></td></tr>
<tr class="separator:ae83d059e5734227abe6bd9c97d7aa545"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a081f9d38f4c1e3f11a247564831e7e9d"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#a081f9d38f4c1e3f11a247564831e7e9d">allocator_type</a> = <a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#a98742f9cf6e329c4dc8a09ac3df5e78d">AllocatorType</a></td></tr>
<tr class="separator:a081f9d38f4c1e3f11a247564831e7e9d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0ef96b9c3a2f659376e481ab4af3b839"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#a0ef96b9c3a2f659376e481ab4af3b839">size_type</a> = <a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#a524d70a90fa07880b66be7c38dd76bdd">SizeType</a></td></tr>
<tr class="separator:a0ef96b9c3a2f659376e481ab4af3b839"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab9f5c9a09c70b74cc73688503f91950c"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#ab9f5c9a09c70b74cc73688503f91950c">difference_type</a> = <a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#a14094a5ddb958303676457767d87c1b8">DifferenceType</a></td></tr>
<tr class="separator:ab9f5c9a09c70b74cc73688503f91950c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a88d757425005beea0b4a08bc3c6d2084"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#a88d757425005beea0b4a08bc3c6d2084">reference</a> = <a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#a97b01e49e848ea33bd86878c241a23e2">Reference</a></td></tr>
<tr class="separator:a88d757425005beea0b4a08bc3c6d2084"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0cfe1130c1a0d4acbe5fe746734c8089"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#a0cfe1130c1a0d4acbe5fe746734c8089">const_reference</a> = <a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#a8a481ed9f3f91a70e55fe802a3ff30cf">ConstReference</a></td></tr>
<tr class="separator:a0cfe1130c1a0d4acbe5fe746734c8089"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a139479f5d470f6701c09b865bfde3a32"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#a139479f5d470f6701c09b865bfde3a32">pointer</a> = <a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#a91db4246bb362ee07b4b86be64aa9f3b">Pointer</a></td></tr>
<tr class="separator:a139479f5d470f6701c09b865bfde3a32"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a53ba11da5cc9990911f0865adf16fec3"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#a53ba11da5cc9990911f0865adf16fec3">const_pointer</a> = <a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#ae3bcabef535ece5747e5e423bd97e8b0">ConstPointer</a></td></tr>
<tr class="separator:a53ba11da5cc9990911f0865adf16fec3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3fb7e300c394766fb6193354f56b29c9"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#a3fb7e300c394766fb6193354f56b29c9">iterator</a> = <a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#a157f3a9eae9f08b87687defaf033b6ee">Iterator</a></td></tr>
<tr class="separator:a3fb7e300c394766fb6193354f56b29c9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0f5017b688f9a976049c4fb495080f1d"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#a0f5017b688f9a976049c4fb495080f1d">const_iterator</a> = <a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#aa8034d1555a12e97536a5fc11584a0ff">ConstIterator</a></td></tr>
<tr class="separator:a0f5017b688f9a976049c4fb495080f1d"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a5de21179722c066b9e3bcb136a5ddf3c"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#a5de21179722c066b9e3bcb136a5ddf3c">ForwardList</a> (Allocator const &amp;alloc=Allocator())</td></tr>
<tr class="separator:a5de21179722c066b9e3bcb136a5ddf3c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afc9aa694740792da4b5e88c83c7f88f3"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#afc9aa694740792da4b5e88c83c7f88f3">ForwardList</a> (<a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#a524d70a90fa07880b66be7c38dd76bdd">SizeType</a> count, <a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#a8a481ed9f3f91a70e55fe802a3ff30cf">ConstReference</a> value=<a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#a94a9c6feab3ff50ed41e9615ab58347e">ValueType</a>(), Allocator const &amp;alloc=Allocator())</td></tr>
<tr class="separator:afc9aa694740792da4b5e88c83c7f88f3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a74fcdf8b073af67f5bdbe86ca01ea256"><td class="memTemplParams" colspan="2">template&lt;class InputIterator &gt; </td></tr>
<tr class="memitem:a74fcdf8b073af67f5bdbe86ca01ea256"><td class="memTemplItemLeft" align="right" valign="top">&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#a74fcdf8b073af67f5bdbe86ca01ea256">ForwardList</a> (<a class="el" href="struct_n_r_e_1_1_utility_1_1_input_iterator.php">InputIterator</a> <a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#ac29a6bd2e4709acf17dd00d77f876cf1">begin</a>, <a class="el" href="struct_n_r_e_1_1_utility_1_1_input_iterator.php">InputIterator</a> <a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#a8c4dea70121345a48362b2df83fcd9ca">end</a>, Allocator const &amp;alloc=Allocator())</td></tr>
<tr class="separator:a74fcdf8b073af67f5bdbe86ca01ea256"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5996e06becaae69c993311f19fcbafb0"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#a5996e06becaae69c993311f19fcbafb0">ForwardList</a> (std::initializer_list&lt; <a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#a94a9c6feab3ff50ed41e9615ab58347e">ValueType</a> &gt; list, Allocator const &amp;alloc=Allocator())</td></tr>
<tr class="separator:a5996e06becaae69c993311f19fcbafb0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a39ded200a16418bfe230b24a904288ec"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#a39ded200a16418bfe230b24a904288ec">ForwardList</a> (<a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php">ForwardList</a> const &amp;list)</td></tr>
<tr class="separator:a39ded200a16418bfe230b24a904288ec"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa8c81f26e08791f68492accbf9dc2cf6"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#aa8c81f26e08791f68492accbf9dc2cf6">ForwardList</a> (<a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php">ForwardList</a> const &amp;list, Allocator const &amp;alloc)</td></tr>
<tr class="separator:aa8c81f26e08791f68492accbf9dc2cf6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1631f7718ce5e3268bfccc1ff02c9609"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#a1631f7718ce5e3268bfccc1ff02c9609">ForwardList</a> (<a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php">ForwardList</a> &amp;&amp;list)</td></tr>
<tr class="separator:a1631f7718ce5e3268bfccc1ff02c9609"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a86bbd6a81bffd9569ab35667f0f16b11"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#a86bbd6a81bffd9569ab35667f0f16b11">ForwardList</a> (<a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php">ForwardList</a> &amp;&amp;list, Allocator const &amp;alloc)</td></tr>
<tr class="separator:a86bbd6a81bffd9569ab35667f0f16b11"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6a9df6d52236f0b703b457a327528995"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#a6a9df6d52236f0b703b457a327528995">~ForwardList</a> ()</td></tr>
<tr class="separator:a6a9df6d52236f0b703b457a327528995"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ada1869b9184ea61223fde97e80dba3e6"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#a97b01e49e848ea33bd86878c241a23e2">Reference</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#ada1869b9184ea61223fde97e80dba3e6">getFront</a> ()</td></tr>
<tr class="separator:ada1869b9184ea61223fde97e80dba3e6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0d671990508f95692165bec88eeb7100"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#a8a481ed9f3f91a70e55fe802a3ff30cf">ConstReference</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#a0d671990508f95692165bec88eeb7100">getFront</a> () const </td></tr>
<tr class="separator:a0d671990508f95692165bec88eeb7100"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a85246b78975f494e2f2b617342b1cd6e"><td class="memItemLeft" align="right" valign="top">constexpr <a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#a524d70a90fa07880b66be7c38dd76bdd">SizeType</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#a85246b78975f494e2f2b617342b1cd6e">getMaxSize</a> () const </td></tr>
<tr class="separator:a85246b78975f494e2f2b617342b1cd6e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab01cf668a4f0172ae129385ba0a9aec2"><td class="memItemLeft" align="right" valign="top">Allocator&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#ab01cf668a4f0172ae129385ba0a9aec2">getAllocator</a> () const </td></tr>
<tr class="separator:ab01cf668a4f0172ae129385ba0a9aec2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a03cab33281281548f822f522d0857d54"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#a524d70a90fa07880b66be7c38dd76bdd">SizeType</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#a03cab33281281548f822f522d0857d54">getSize</a> () const </td></tr>
<tr class="separator:a03cab33281281548f822f522d0857d54"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a39b0e5e75e0a71477e9bf5366edc46a4"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#a39b0e5e75e0a71477e9bf5366edc46a4">isEmpty</a> () const </td></tr>
<tr class="separator:a39b0e5e75e0a71477e9bf5366edc46a4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a579eb48b0c0bcd298733dc0169ac1e5b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#a157f3a9eae9f08b87687defaf033b6ee">Iterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#a579eb48b0c0bcd298733dc0169ac1e5b">beforeBegin</a> ()</td></tr>
<tr class="separator:a579eb48b0c0bcd298733dc0169ac1e5b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a79e953ce700ee4e7c5a19d6345947067"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#aa8034d1555a12e97536a5fc11584a0ff">ConstIterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#a79e953ce700ee4e7c5a19d6345947067">beforeBegin</a> () const </td></tr>
<tr class="separator:a79e953ce700ee4e7c5a19d6345947067"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3e7d6668ec4252183a843732e0f7a4a8"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#aa8034d1555a12e97536a5fc11584a0ff">ConstIterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#a3e7d6668ec4252183a843732e0f7a4a8">cbeforeBegin</a> () const </td></tr>
<tr class="separator:a3e7d6668ec4252183a843732e0f7a4a8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac29a6bd2e4709acf17dd00d77f876cf1"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#a157f3a9eae9f08b87687defaf033b6ee">Iterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#ac29a6bd2e4709acf17dd00d77f876cf1">begin</a> ()</td></tr>
<tr class="separator:ac29a6bd2e4709acf17dd00d77f876cf1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a15dc25ea23feecac337775e380a7279f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#aa8034d1555a12e97536a5fc11584a0ff">ConstIterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#a15dc25ea23feecac337775e380a7279f">begin</a> () const </td></tr>
<tr class="separator:a15dc25ea23feecac337775e380a7279f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7b954b4d7a53a0cac83975d5307c644f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#aa8034d1555a12e97536a5fc11584a0ff">ConstIterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#a7b954b4d7a53a0cac83975d5307c644f">cbegin</a> () const </td></tr>
<tr class="separator:a7b954b4d7a53a0cac83975d5307c644f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8c4dea70121345a48362b2df83fcd9ca"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#a157f3a9eae9f08b87687defaf033b6ee">Iterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#a8c4dea70121345a48362b2df83fcd9ca">end</a> ()</td></tr>
<tr class="separator:a8c4dea70121345a48362b2df83fcd9ca"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8139088c474bb6567f3b17d1ff12a3fb"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#aa8034d1555a12e97536a5fc11584a0ff">ConstIterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#a8139088c474bb6567f3b17d1ff12a3fb">end</a> () const </td></tr>
<tr class="separator:a8139088c474bb6567f3b17d1ff12a3fb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2ad3a7796da3fdf332bc731792ee73f9"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#aa8034d1555a12e97536a5fc11584a0ff">ConstIterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#a2ad3a7796da3fdf332bc731792ee73f9">cend</a> () const </td></tr>
<tr class="separator:a2ad3a7796da3fdf332bc731792ee73f9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af67c4e40c88ae453b9f76e1ad8ef8dfd"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#af67c4e40c88ae453b9f76e1ad8ef8dfd">assign</a> (<a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#a524d70a90fa07880b66be7c38dd76bdd">SizeType</a> count, <a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#a8a481ed9f3f91a70e55fe802a3ff30cf">ConstReference</a> value)</td></tr>
<tr class="separator:af67c4e40c88ae453b9f76e1ad8ef8dfd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afc5f7c78c1cdeb5ee8df7f095490aa49"><td class="memTemplParams" colspan="2">template&lt;class InputIterator &gt; </td></tr>
<tr class="memitem:afc5f7c78c1cdeb5ee8df7f095490aa49"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#afc5f7c78c1cdeb5ee8df7f095490aa49">assign</a> (<a class="el" href="struct_n_r_e_1_1_utility_1_1_input_iterator.php">InputIterator</a> <a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#ac29a6bd2e4709acf17dd00d77f876cf1">begin</a>, <a class="el" href="struct_n_r_e_1_1_utility_1_1_input_iterator.php">InputIterator</a> <a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#a8c4dea70121345a48362b2df83fcd9ca">end</a>)</td></tr>
<tr class="separator:afc5f7c78c1cdeb5ee8df7f095490aa49"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0ced65cce539270887332ec239b7cd16"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#a0ced65cce539270887332ec239b7cd16">clear</a> ()</td></tr>
<tr class="separator:a0ced65cce539270887332ec239b7cd16"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a002fd310eeb154d415beca8189812367"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#a157f3a9eae9f08b87687defaf033b6ee">Iterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#a002fd310eeb154d415beca8189812367">insertAfter</a> (<a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#aa8034d1555a12e97536a5fc11584a0ff">ConstIterator</a> pos, <a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#a8a481ed9f3f91a70e55fe802a3ff30cf">ConstReference</a> value)</td></tr>
<tr class="separator:a002fd310eeb154d415beca8189812367"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a32d12d98ea142845e1d58ccb4e032a41"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#a157f3a9eae9f08b87687defaf033b6ee">Iterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#a32d12d98ea142845e1d58ccb4e032a41">insertAfter</a> (<a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#aa8034d1555a12e97536a5fc11584a0ff">ConstIterator</a> pos, <a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#a94a9c6feab3ff50ed41e9615ab58347e">ValueType</a> &amp;&amp;value)</td></tr>
<tr class="separator:a32d12d98ea142845e1d58ccb4e032a41"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af9f316a98e88ce292613031981ef687e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#a157f3a9eae9f08b87687defaf033b6ee">Iterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#af9f316a98e88ce292613031981ef687e">insertAfter</a> (<a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#aa8034d1555a12e97536a5fc11584a0ff">ConstIterator</a> pos, <a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#a524d70a90fa07880b66be7c38dd76bdd">SizeType</a> count, <a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#a8a481ed9f3f91a70e55fe802a3ff30cf">ConstReference</a> value)</td></tr>
<tr class="separator:af9f316a98e88ce292613031981ef687e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abe3ce51e68cf5bd074c7ddb7bacde4ec"><td class="memTemplParams" colspan="2">template&lt;class InputIterator &gt; </td></tr>
<tr class="memitem:abe3ce51e68cf5bd074c7ddb7bacde4ec"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#a157f3a9eae9f08b87687defaf033b6ee">Iterator</a>&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#abe3ce51e68cf5bd074c7ddb7bacde4ec">insertAfter</a> (<a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#aa8034d1555a12e97536a5fc11584a0ff">ConstIterator</a> pos, <a class="el" href="struct_n_r_e_1_1_utility_1_1_input_iterator.php">InputIterator</a> <a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#ac29a6bd2e4709acf17dd00d77f876cf1">begin</a>, <a class="el" href="struct_n_r_e_1_1_utility_1_1_input_iterator.php">InputIterator</a> <a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#a8c4dea70121345a48362b2df83fcd9ca">end</a>)</td></tr>
<tr class="separator:abe3ce51e68cf5bd074c7ddb7bacde4ec"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a14bcf0a43ddfd1bdf3e3313d53072132"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#a157f3a9eae9f08b87687defaf033b6ee">Iterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#a14bcf0a43ddfd1bdf3e3313d53072132">insertAfter</a> (<a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#aa8034d1555a12e97536a5fc11584a0ff">ConstIterator</a> pos, std::initializer_list&lt; <a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#a94a9c6feab3ff50ed41e9615ab58347e">ValueType</a> &gt; list)</td></tr>
<tr class="separator:a14bcf0a43ddfd1bdf3e3313d53072132"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2a736c06f7e063a2e949cc2665264ea4"><td class="memTemplParams" colspan="2">template&lt;class... Args&gt; </td></tr>
<tr class="memitem:a2a736c06f7e063a2e949cc2665264ea4"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#a157f3a9eae9f08b87687defaf033b6ee">Iterator</a>&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#a2a736c06f7e063a2e949cc2665264ea4">emplaceAfter</a> (<a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#aa8034d1555a12e97536a5fc11584a0ff">ConstIterator</a> pos, Args &amp;&amp;...args)</td></tr>
<tr class="separator:a2a736c06f7e063a2e949cc2665264ea4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae565fdd3d37c98bcea612121cc4a53d4"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#a157f3a9eae9f08b87687defaf033b6ee">Iterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#ae565fdd3d37c98bcea612121cc4a53d4">eraseAfter</a> (<a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#aa8034d1555a12e97536a5fc11584a0ff">ConstIterator</a> pos)</td></tr>
<tr class="separator:ae565fdd3d37c98bcea612121cc4a53d4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a16955b85b668a200c7eb5f22c036f66c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#a157f3a9eae9f08b87687defaf033b6ee">Iterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#a16955b85b668a200c7eb5f22c036f66c">eraseAfter</a> (<a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#aa8034d1555a12e97536a5fc11584a0ff">ConstIterator</a> <a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#ac29a6bd2e4709acf17dd00d77f876cf1">begin</a>, <a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#aa8034d1555a12e97536a5fc11584a0ff">ConstIterator</a> <a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#a8c4dea70121345a48362b2df83fcd9ca">end</a>)</td></tr>
<tr class="separator:a16955b85b668a200c7eb5f22c036f66c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac8d6ae175701ed3bd59ece3a871763f4"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#ac8d6ae175701ed3bd59ece3a871763f4">pushFront</a> (<a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#a8a481ed9f3f91a70e55fe802a3ff30cf">ConstReference</a> value)</td></tr>
<tr class="separator:ac8d6ae175701ed3bd59ece3a871763f4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a47d3a65b61872657d62f085d2f8e7641"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#a47d3a65b61872657d62f085d2f8e7641">pushFront</a> (<a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#a94a9c6feab3ff50ed41e9615ab58347e">ValueType</a> &amp;&amp;value)</td></tr>
<tr class="separator:a47d3a65b61872657d62f085d2f8e7641"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a040cba4649e47a2f038b59c5e42aed01"><td class="memTemplParams" colspan="2">template&lt;class... Args&gt; </td></tr>
<tr class="memitem:a040cba4649e47a2f038b59c5e42aed01"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#a040cba4649e47a2f038b59c5e42aed01">emplaceFront</a> (Args &amp;&amp;...args)</td></tr>
<tr class="separator:a040cba4649e47a2f038b59c5e42aed01"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af715030e77cd1887848662888b506204"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#af715030e77cd1887848662888b506204">popFront</a> ()</td></tr>
<tr class="separator:af715030e77cd1887848662888b506204"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af6bd0caa51a6674c6bddea0e95a434c6"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#af6bd0caa51a6674c6bddea0e95a434c6">resize</a> (<a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#a524d70a90fa07880b66be7c38dd76bdd">SizeType</a> count)</td></tr>
<tr class="separator:af6bd0caa51a6674c6bddea0e95a434c6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a091475d50020cb09a85692e1df4915eb"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#a091475d50020cb09a85692e1df4915eb">resize</a> (<a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#a524d70a90fa07880b66be7c38dd76bdd">SizeType</a> count, <a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#a8a481ed9f3f91a70e55fe802a3ff30cf">ConstReference</a> value)</td></tr>
<tr class="separator:a091475d50020cb09a85692e1df4915eb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac9c98f9a4efab0f165a73091f79a0c55"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#ac9c98f9a4efab0f165a73091f79a0c55">swap</a> (<a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php">ForwardList</a> &amp;list)</td></tr>
<tr class="separator:ac9c98f9a4efab0f165a73091f79a0c55"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8cfa3208d57a1c9afd388ad8f54e5c82"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#a8cfa3208d57a1c9afd388ad8f54e5c82">merge</a> (<a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php">ForwardList</a> &amp;list)</td></tr>
<tr class="separator:a8cfa3208d57a1c9afd388ad8f54e5c82"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a02d41f27ba9b2a1f70243ec24046a258"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#a02d41f27ba9b2a1f70243ec24046a258">merge</a> (<a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php">ForwardList</a> &amp;&amp;list)</td></tr>
<tr class="separator:a02d41f27ba9b2a1f70243ec24046a258"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7b48993cf5c2a755452a040650254c21"><td class="memTemplParams" colspan="2">template&lt;class Comparator &gt; </td></tr>
<tr class="memitem:a7b48993cf5c2a755452a040650254c21"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#a7b48993cf5c2a755452a040650254c21">merge</a> (<a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php">ForwardList</a> &amp;list, Comparator comp)</td></tr>
<tr class="separator:a7b48993cf5c2a755452a040650254c21"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a024ccfdd24d3de8f09536c0e977eef46"><td class="memTemplParams" colspan="2">template&lt;class Comparator &gt; </td></tr>
<tr class="memitem:a024ccfdd24d3de8f09536c0e977eef46"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#a024ccfdd24d3de8f09536c0e977eef46">merge</a> (<a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php">ForwardList</a> &amp;&amp;list, Comparator comp)</td></tr>
<tr class="separator:a024ccfdd24d3de8f09536c0e977eef46"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa03c36b2de7bdaf4a976d1a05674b522"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#aa03c36b2de7bdaf4a976d1a05674b522">spliceAfter</a> (<a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#aa8034d1555a12e97536a5fc11584a0ff">ConstIterator</a> pos, <a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php">ForwardList</a> &amp;list)</td></tr>
<tr class="separator:aa03c36b2de7bdaf4a976d1a05674b522"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac08a6b2e3e062a82aedc41f50a5019df"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#ac08a6b2e3e062a82aedc41f50a5019df">spliceAfter</a> (<a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#aa8034d1555a12e97536a5fc11584a0ff">ConstIterator</a> pos, <a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php">ForwardList</a> &amp;&amp;list)</td></tr>
<tr class="separator:ac08a6b2e3e062a82aedc41f50a5019df"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1b33703707d73d8e7bf86de9f8237289"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#a1b33703707d73d8e7bf86de9f8237289">spliceAfter</a> (<a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#aa8034d1555a12e97536a5fc11584a0ff">ConstIterator</a> pos, <a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php">ForwardList</a> &amp;list, <a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#aa8034d1555a12e97536a5fc11584a0ff">ConstIterator</a> it)</td></tr>
<tr class="separator:a1b33703707d73d8e7bf86de9f8237289"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad799ebe6bde93ab25bde53686e704d46"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#ad799ebe6bde93ab25bde53686e704d46">spliceAfter</a> (<a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#aa8034d1555a12e97536a5fc11584a0ff">ConstIterator</a> pos, <a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php">ForwardList</a> &amp;&amp;list, <a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#aa8034d1555a12e97536a5fc11584a0ff">ConstIterator</a> it)</td></tr>
<tr class="separator:ad799ebe6bde93ab25bde53686e704d46"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4aaffad462c7b294f498e1e715412b11"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#a4aaffad462c7b294f498e1e715412b11">spliceAfter</a> (<a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#aa8034d1555a12e97536a5fc11584a0ff">ConstIterator</a> pos, <a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php">ForwardList</a> &amp;list, <a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#aa8034d1555a12e97536a5fc11584a0ff">ConstIterator</a> <a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#ac29a6bd2e4709acf17dd00d77f876cf1">begin</a>, <a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#aa8034d1555a12e97536a5fc11584a0ff">ConstIterator</a> <a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#a8c4dea70121345a48362b2df83fcd9ca">end</a>)</td></tr>
<tr class="separator:a4aaffad462c7b294f498e1e715412b11"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a966b0c57a69963aeb103a3f407b4efc5"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#a966b0c57a69963aeb103a3f407b4efc5">spliceAfter</a> (<a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#aa8034d1555a12e97536a5fc11584a0ff">ConstIterator</a> pos, <a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php">ForwardList</a> &amp;&amp;list, <a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#aa8034d1555a12e97536a5fc11584a0ff">ConstIterator</a> <a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#ac29a6bd2e4709acf17dd00d77f876cf1">begin</a>, <a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#aa8034d1555a12e97536a5fc11584a0ff">ConstIterator</a> <a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#a8c4dea70121345a48362b2df83fcd9ca">end</a>)</td></tr>
<tr class="separator:a966b0c57a69963aeb103a3f407b4efc5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a15d8bcb6f8a77248c1ba7ee70c3a65f0"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#a15d8bcb6f8a77248c1ba7ee70c3a65f0">remove</a> (<a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#a8a481ed9f3f91a70e55fe802a3ff30cf">ConstReference</a> value)</td></tr>
<tr class="separator:a15d8bcb6f8a77248c1ba7ee70c3a65f0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a800fdb8a95e3c9eea82c35cb20e140e0"><td class="memTemplParams" colspan="2">template&lt;class UnaryPredicate &gt; </td></tr>
<tr class="memitem:a800fdb8a95e3c9eea82c35cb20e140e0"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#a800fdb8a95e3c9eea82c35cb20e140e0">removeIf</a> (UnaryPredicate p)</td></tr>
<tr class="separator:a800fdb8a95e3c9eea82c35cb20e140e0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac8ad0da3abfb66859d9a2d6e1d7a1d12"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#ac8ad0da3abfb66859d9a2d6e1d7a1d12">reverse</a> ()</td></tr>
<tr class="separator:ac8ad0da3abfb66859d9a2d6e1d7a1d12"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa45af044d9b7b0db414bdaa2e82324cc"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#aa45af044d9b7b0db414bdaa2e82324cc">unique</a> ()</td></tr>
<tr class="separator:aa45af044d9b7b0db414bdaa2e82324cc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:addf1451ed88db9313876d7f586d21352"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php">ForwardList</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#addf1451ed88db9313876d7f586d21352">operator=</a> (<a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php">ForwardList</a> const &amp;list)</td></tr>
<tr class="separator:addf1451ed88db9313876d7f586d21352"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a19e9d9710f9aa61103624b414a633ad4"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php">ForwardList</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#a19e9d9710f9aa61103624b414a633ad4">operator=</a> (<a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php">ForwardList</a> &amp;&amp;list)</td></tr>
<tr class="separator:a19e9d9710f9aa61103624b414a633ad4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a61c427ca03e0cd4e5cbdad7b0179ddc3"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#a61c427ca03e0cd4e5cbdad7b0179ddc3">operator==</a> (<a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php">ForwardList</a> const &amp;list) const </td></tr>
<tr class="separator:a61c427ca03e0cd4e5cbdad7b0179ddc3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abcdf906e8f5ab3a97eefc94cef204d88"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#abcdf906e8f5ab3a97eefc94cef204d88">operator!=</a> (<a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php">ForwardList</a> const &amp;list) const </td></tr>
<tr class="separator:abcdf906e8f5ab3a97eefc94cef204d88"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6432f5a1bcec5d7eb30939e0d12e62bb"><td class="memItemLeft" align="right" valign="top"><a class="el" href="_n_r_e___string_8hpp.php#a20410cefd428aefdf41f418a1e489d66">String</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#a6432f5a1bcec5d7eb30939e0d12e62bb">toString</a> () const </td></tr>
<tr class="separator:a6432f5a1bcec5d7eb30939e0d12e62bb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_class_n_r_e_1_1_utility_1_1_stringable"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_class_n_r_e_1_1_utility_1_1_stringable')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="class_n_r_e_1_1_utility_1_1_stringable.php">NRE::Utility::Stringable&lt; ForwardList&lt; T, Allocator &gt; &gt;</a></td></tr>
<tr class="memitem:a858907f8126e9c210854ddb659dd17ee inherit pub_methods_class_n_r_e_1_1_utility_1_1_stringable"><td class="memItemLeft" align="right" valign="top"><a class="el" href="_n_r_e___string_8hpp.php#a20410cefd428aefdf41f418a1e489d66">String</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_stringable.php#a858907f8126e9c210854ddb659dd17ee">toString</a> () const</td></tr>
<tr class="separator:a858907f8126e9c210854ddb659dd17ee inherit pub_methods_class_n_r_e_1_1_utility_1_1_stringable"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><h3>template&lt;class T, class Allocator&gt;<br />
class NRE::Utility::Detail::ForwardList&lt; T, Allocator &gt;</h3>

<p>A simple linked list. </p>
</div><h2 class="groupheader">Member Typedef Documentation</h2>
<a class="anchor" id="a081f9d38f4c1e3f11a247564831e7e9d"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T , class Allocator &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php">NRE::Utility::Detail::ForwardList</a>&lt; T, Allocator &gt;::<a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#a081f9d38f4c1e3f11a247564831e7e9d">allocator_type</a> =  <a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#a98742f9cf6e329c4dc8a09ac3df5e78d">AllocatorType</a></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>STL compatibility </p>

</div>
</div>
<a class="anchor" id="a98742f9cf6e329c4dc8a09ac3df5e78d"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T , class Allocator &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php">NRE::Utility::Detail::ForwardList</a>&lt; T, Allocator &gt;::<a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#a98742f9cf6e329c4dc8a09ac3df5e78d">AllocatorType</a> =  typename Allocator::template Rebind&lt;<a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list_inner_1_1_node.php">ForwardListInner::Node</a>&lt;T&gt;&gt;</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>The container's allocator </p>

</div>
</div>
<a class="anchor" id="a0f5017b688f9a976049c4fb495080f1d"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T , class Allocator &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php">NRE::Utility::Detail::ForwardList</a>&lt; T, Allocator &gt;::<a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#a0f5017b688f9a976049c4fb495080f1d">const_iterator</a> =  <a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#aa8034d1555a12e97536a5fc11584a0ff">ConstIterator</a></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>STL compatibility </p>

</div>
</div>
<a class="anchor" id="a53ba11da5cc9990911f0865adf16fec3"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T , class Allocator &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php">NRE::Utility::Detail::ForwardList</a>&lt; T, Allocator &gt;::<a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#a53ba11da5cc9990911f0865adf16fec3">const_pointer</a> =  <a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#ae3bcabef535ece5747e5e423bd97e8b0">ConstPointer</a></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>STL compatibility </p>

</div>
</div>
<a class="anchor" id="a0cfe1130c1a0d4acbe5fe746734c8089"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T , class Allocator &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php">NRE::Utility::Detail::ForwardList</a>&lt; T, Allocator &gt;::<a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#a0cfe1130c1a0d4acbe5fe746734c8089">const_reference</a> =  <a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#a8a481ed9f3f91a70e55fe802a3ff30cf">ConstReference</a></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>STL compatibility </p>

</div>
</div>
<a class="anchor" id="aa8034d1555a12e97536a5fc11584a0ff"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T , class Allocator &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php">NRE::Utility::Detail::ForwardList</a>&lt; T, Allocator &gt;::<a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#aa8034d1555a12e97536a5fc11584a0ff">ConstIterator</a> =  <a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list_inner_1_1_forward_iterator.php">ForwardListInner::ForwardIterator</a>&lt;<a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#a94a9c6feab3ff50ed41e9615ab58347e">ValueType</a>, <a class="el" href="struct_n_r_e_1_1_utility_1_1_forward_iterator.php">Utility::ForwardIterator</a>&gt;</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Immuable forward access iterator </p>

</div>
</div>
<a class="anchor" id="ae3bcabef535ece5747e5e423bd97e8b0"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T , class Allocator &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php">NRE::Utility::Detail::ForwardList</a>&lt; T, Allocator &gt;::<a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#ae3bcabef535ece5747e5e423bd97e8b0">ConstPointer</a> =  typename AllocatorType::ConstPointer</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>The allocated type const pointer </p>

</div>
</div>
<a class="anchor" id="a8a481ed9f3f91a70e55fe802a3ff30cf"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T , class Allocator &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php">NRE::Utility::Detail::ForwardList</a>&lt; T, Allocator &gt;::<a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#a8a481ed9f3f91a70e55fe802a3ff30cf">ConstReference</a> =  <a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#a94a9c6feab3ff50ed41e9615ab58347e">ValueType</a> const&amp;</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>The allocated type const reference </p>

</div>
</div>
<a class="anchor" id="ab9f5c9a09c70b74cc73688503f91950c"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T , class Allocator &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php">NRE::Utility::Detail::ForwardList</a>&lt; T, Allocator &gt;::<a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#ab9f5c9a09c70b74cc73688503f91950c">difference_type</a> =  <a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#a14094a5ddb958303676457767d87c1b8">DifferenceType</a></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>STL compatibility </p>

</div>
</div>
<a class="anchor" id="a14094a5ddb958303676457767d87c1b8"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T , class Allocator &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php">NRE::Utility::Detail::ForwardList</a>&lt; T, Allocator &gt;::<a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#a14094a5ddb958303676457767d87c1b8">DifferenceType</a> =  std::ptrdiff_t</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>The object's difference type </p>

</div>
</div>
<a class="anchor" id="a157f3a9eae9f08b87687defaf033b6ee"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T , class Allocator &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php">NRE::Utility::Detail::ForwardList</a>&lt; T, Allocator &gt;::<a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#a157f3a9eae9f08b87687defaf033b6ee">Iterator</a> =  <a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list_inner_1_1_forward_iterator.php">ForwardListInner::ForwardIterator</a>&lt;<a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#a94a9c6feab3ff50ed41e9615ab58347e">ValueType</a>, <a class="el" href="struct_n_r_e_1_1_utility_1_1_in_out_forward_iterator.php">InOutForwardIterator</a>&gt;</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Mutable forward access iterator </p>

</div>
</div>
<a class="anchor" id="a3fb7e300c394766fb6193354f56b29c9"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T , class Allocator &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php">NRE::Utility::Detail::ForwardList</a>&lt; T, Allocator &gt;::<a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#a3fb7e300c394766fb6193354f56b29c9">iterator</a> =  <a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#a157f3a9eae9f08b87687defaf033b6ee">Iterator</a></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>STL compatibility </p>

</div>
</div>
<a class="anchor" id="a91db4246bb362ee07b4b86be64aa9f3b"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T , class Allocator &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php">NRE::Utility::Detail::ForwardList</a>&lt; T, Allocator &gt;::<a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#a91db4246bb362ee07b4b86be64aa9f3b">Pointer</a> =  typename AllocatorType::Pointer</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>The allocated type pointer </p>

</div>
</div>
<a class="anchor" id="a139479f5d470f6701c09b865bfde3a32"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T , class Allocator &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php">NRE::Utility::Detail::ForwardList</a>&lt; T, Allocator &gt;::<a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#a139479f5d470f6701c09b865bfde3a32">pointer</a> =  <a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#a91db4246bb362ee07b4b86be64aa9f3b">Pointer</a></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>STL compatibility </p>

</div>
</div>
<a class="anchor" id="a97b01e49e848ea33bd86878c241a23e2"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T , class Allocator &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php">NRE::Utility::Detail::ForwardList</a>&lt; T, Allocator &gt;::<a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#a97b01e49e848ea33bd86878c241a23e2">Reference</a> =  <a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#a94a9c6feab3ff50ed41e9615ab58347e">ValueType</a>&amp;</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>The allocated type reference </p>

</div>
</div>
<a class="anchor" id="a88d757425005beea0b4a08bc3c6d2084"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T , class Allocator &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php">NRE::Utility::Detail::ForwardList</a>&lt; T, Allocator &gt;::<a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#a88d757425005beea0b4a08bc3c6d2084">reference</a> =  <a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#a97b01e49e848ea33bd86878c241a23e2">Reference</a></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>STL compatibility </p>

</div>
</div>
<a class="anchor" id="a0ef96b9c3a2f659376e481ab4af3b839"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T , class Allocator &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php">NRE::Utility::Detail::ForwardList</a>&lt; T, Allocator &gt;::<a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#a0ef96b9c3a2f659376e481ab4af3b839">size_type</a> =  <a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#a524d70a90fa07880b66be7c38dd76bdd">SizeType</a></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>STL compatibility </p>

</div>
</div>
<a class="anchor" id="a524d70a90fa07880b66be7c38dd76bdd"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T , class Allocator &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php">NRE::Utility::Detail::ForwardList</a>&lt; T, Allocator &gt;::<a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#a524d70a90fa07880b66be7c38dd76bdd">SizeType</a> =  std::size_t</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>The object's size type </p>

</div>
</div>
<a class="anchor" id="ae83d059e5734227abe6bd9c97d7aa545"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T , class Allocator &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php">NRE::Utility::Detail::ForwardList</a>&lt; T, Allocator &gt;::<a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#ae83d059e5734227abe6bd9c97d7aa545">value_type</a> =  <a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#a94a9c6feab3ff50ed41e9615ab58347e">ValueType</a></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>STL compatibility </p>

</div>
</div>
<a class="anchor" id="a94a9c6feab3ff50ed41e9615ab58347e"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T , class Allocator &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php">NRE::Utility::Detail::ForwardList</a>&lt; T, Allocator &gt;::<a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#a94a9c6feab3ff50ed41e9615ab58347e">ValueType</a> =  T</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Check if the given AllocatorType inherit from NRE::Memory::AllocatorTraits Make sure the allocator is set for the container inner type The container's allocated type </p>

</div>
</div>
<h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="a5de21179722c066b9e3bcb136a5ddf3c"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T , class Allocator &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php">NRE::Utility::Detail::ForwardList</a>&lt; T, Allocator &gt;::<a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php">ForwardList</a> </td>
          <td>(</td>
          <td class="paramtype">Allocator const &amp;&#160;</td>
          <td class="paramname"><em>alloc</em> = <code>Allocator()</code></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Construct an empty list </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">alloc</td><td>the list's memory allocator </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="afc9aa694740792da4b5e88c83c7f88f3"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T , class Allocator &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php">NRE::Utility::Detail::ForwardList</a>&lt; T, Allocator &gt;::<a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php">ForwardList</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#a524d70a90fa07880b66be7c38dd76bdd">SizeType</a>&#160;</td>
          <td class="paramname"><em>count</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#a8a481ed9f3f91a70e55fe802a3ff30cf">ConstReference</a>&#160;</td>
          <td class="paramname"><em>value</em> = <code><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#a94a9c6feab3ff50ed41e9615ab58347e">ValueType</a>()</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">Allocator const &amp;&#160;</td>
          <td class="paramname"><em>alloc</em> = <code>Allocator()</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Construct a list with count copy of value </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">count</td><td>the number of copy </td></tr>
    <tr><td class="paramname">value</td><td>the value to use for copy </td></tr>
    <tr><td class="paramname">alloc</td><td>the list's memory allocator </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a74fcdf8b073af67f5bdbe86ca01ea256"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T , class Allocator &gt; </div>
<div class="memtemplate">
template&lt;class InputIterator &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php">NRE::Utility::Detail::ForwardList</a>&lt; T, Allocator &gt;::<a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php">ForwardList</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_n_r_e_1_1_utility_1_1_input_iterator.php">InputIterator</a>&#160;</td>
          <td class="paramname"><em>begin</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="struct_n_r_e_1_1_utility_1_1_input_iterator.php">InputIterator</a>&#160;</td>
          <td class="paramname"><em>end</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">Allocator const &amp;&#160;</td>
          <td class="paramname"><em>alloc</em> = <code>Allocator()</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Construct a list using elements in the given range </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">begin</td><td>the iterator on the first element </td></tr>
    <tr><td class="paramname">end</td><td>the iterator after the last element </td></tr>
    <tr><td class="paramname">alloc</td><td>the list's memory allocator </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a5996e06becaae69c993311f19fcbafb0"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T , class Allocator &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php">NRE::Utility::Detail::ForwardList</a>&lt; T, Allocator &gt;::<a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php">ForwardList</a> </td>
          <td>(</td>
          <td class="paramtype">std::initializer_list&lt; <a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#a94a9c6feab3ff50ed41e9615ab58347e">ValueType</a> &gt;&#160;</td>
          <td class="paramname"><em>list</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">Allocator const &amp;&#160;</td>
          <td class="paramname"><em>alloc</em> = <code>Allocator()</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Construct a list using elements in the given list </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">list</td><td>the initializer list </td></tr>
    <tr><td class="paramname">alloc</td><td>the list's memory allocator </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a39ded200a16418bfe230b24a904288ec"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T , class Allocator &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php">NRE::Utility::Detail::ForwardList</a>&lt; T, Allocator &gt;::<a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php">ForwardList</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php">ForwardList</a>&lt; T, Allocator &gt; const &amp;&#160;</td>
          <td class="paramname"><em>list</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Copy list into this </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">list</td><td>the list to copy </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="aa8c81f26e08791f68492accbf9dc2cf6"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T , class Allocator &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php">NRE::Utility::Detail::ForwardList</a>&lt; T, Allocator &gt;::<a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php">ForwardList</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php">ForwardList</a>&lt; T, Allocator &gt; const &amp;&#160;</td>
          <td class="paramname"><em>list</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">Allocator const &amp;&#160;</td>
          <td class="paramname"><em>alloc</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Copy list into this </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">list</td><td>the list to copy </td></tr>
    <tr><td class="paramname">alloc</td><td>the list's memory allocator </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a1631f7718ce5e3268bfccc1ff02c9609"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T , class Allocator &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php">NRE::Utility::Detail::ForwardList</a>&lt; T, Allocator &gt;::<a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php">ForwardList</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php">ForwardList</a>&lt; T, Allocator &gt; &amp;&amp;&#160;</td>
          <td class="paramname"><em>list</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Move list into this </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">list</td><td>the list to move </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a86bbd6a81bffd9569ab35667f0f16b11"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T , class Allocator &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php">NRE::Utility::Detail::ForwardList</a>&lt; T, Allocator &gt;::<a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php">ForwardList</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php">ForwardList</a>&lt; T, Allocator &gt; &amp;&amp;&#160;</td>
          <td class="paramname"><em>list</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">Allocator const &amp;&#160;</td>
          <td class="paramname"><em>alloc</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Move list into this </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">list</td><td>the list to move </td></tr>
    <tr><td class="paramname">alloc</td><td>the list's memory allocator </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a6a9df6d52236f0b703b457a327528995"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T , class Allocator &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php">NRE::Utility::Detail::ForwardList</a>&lt; T, Allocator &gt;::~<a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php">ForwardList</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php" title="A simple linked list. ">ForwardList</a> Deconstructor </p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a class="anchor" id="af67c4e40c88ae453b9f76e1ad8ef8dfd"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T , class Allocator &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php">NRE::Utility::Detail::ForwardList</a>&lt; T, Allocator &gt;::assign </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#a524d70a90fa07880b66be7c38dd76bdd">SizeType</a>&#160;</td>
          <td class="paramname"><em>count</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#a8a481ed9f3f91a70e55fe802a3ff30cf">ConstReference</a>&#160;</td>
          <td class="paramname"><em>value</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Assign count copy of value in the list </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">count</td><td>the number of copy </td></tr>
    <tr><td class="paramname">value</td><td>the value to use for copy </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="afc5f7c78c1cdeb5ee8df7f095490aa49"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T , class Allocator &gt; </div>
<div class="memtemplate">
template&lt;class InputIterator &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php">NRE::Utility::Detail::ForwardList</a>&lt; T, Allocator &gt;::assign </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_n_r_e_1_1_utility_1_1_input_iterator.php">InputIterator</a>&#160;</td>
          <td class="paramname"><em>begin</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="struct_n_r_e_1_1_utility_1_1_input_iterator.php">InputIterator</a>&#160;</td>
          <td class="paramname"><em>end</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Assign the list with element in the given range </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">begin</td><td>the iterator on the first element </td></tr>
    <tr><td class="paramname">end</td><td>the iterator after the last element </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a579eb48b0c0bcd298733dc0169ac1e5b"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T , class Allocator &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#a157f3a9eae9f08b87687defaf033b6ee">Iterator</a> <a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php">NRE::Utility::Detail::ForwardList</a>&lt; T, Allocator &gt;::beforeBegin </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>an iterator on the element before the first element </dd></dl>

</div>
</div>
<a class="anchor" id="a79e953ce700ee4e7c5a19d6345947067"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T , class Allocator &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#aa8034d1555a12e97536a5fc11584a0ff">ConstIterator</a> <a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php">NRE::Utility::Detail::ForwardList</a>&lt; T, Allocator &gt;::beforeBegin </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>a const iterator on the element before the first element </dd></dl>

</div>
</div>
<a class="anchor" id="ac29a6bd2e4709acf17dd00d77f876cf1"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T , class Allocator &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#a157f3a9eae9f08b87687defaf033b6ee">Iterator</a> <a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php">NRE::Utility::Detail::ForwardList</a>&lt; T, Allocator &gt;::begin </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>an iterator on the first element </dd></dl>

</div>
</div>
<a class="anchor" id="a15dc25ea23feecac337775e380a7279f"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T , class Allocator &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#aa8034d1555a12e97536a5fc11584a0ff">ConstIterator</a> <a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php">NRE::Utility::Detail::ForwardList</a>&lt; T, Allocator &gt;::begin </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>a const iterator on the first element </dd></dl>

</div>
</div>
<a class="anchor" id="a3e7d6668ec4252183a843732e0f7a4a8"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T , class Allocator &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#aa8034d1555a12e97536a5fc11584a0ff">ConstIterator</a> <a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php">NRE::Utility::Detail::ForwardList</a>&lt; T, Allocator &gt;::cbeforeBegin </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>a const iterator on the element before the first element </dd></dl>

</div>
</div>
<a class="anchor" id="a7b954b4d7a53a0cac83975d5307c644f"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T , class Allocator &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#aa8034d1555a12e97536a5fc11584a0ff">ConstIterator</a> <a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php">NRE::Utility::Detail::ForwardList</a>&lt; T, Allocator &gt;::cbegin </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>a const iterator on the first element </dd></dl>

</div>
</div>
<a class="anchor" id="a2ad3a7796da3fdf332bc731792ee73f9"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T , class Allocator &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#aa8034d1555a12e97536a5fc11584a0ff">ConstIterator</a> <a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php">NRE::Utility::Detail::ForwardList</a>&lt; T, Allocator &gt;::cend </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>a const iterator on the end of the container </dd></dl>

</div>
</div>
<a class="anchor" id="a0ced65cce539270887332ec239b7cd16"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T , class Allocator &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php">NRE::Utility::Detail::ForwardList</a>&lt; T, Allocator &gt;::clear </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Clear all objects in the list </p>

</div>
</div>
<a class="anchor" id="a2a736c06f7e063a2e949cc2665264ea4"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T , class Allocator &gt; </div>
<div class="memtemplate">
template&lt;class... Args&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#a157f3a9eae9f08b87687defaf033b6ee">Iterator</a> <a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php">NRE::Utility::Detail::ForwardList</a>&lt; T, Allocator &gt;::emplaceAfter </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#aa8034d1555a12e97536a5fc11584a0ff">ConstIterator</a>&#160;</td>
          <td class="paramname"><em>pos</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">Args &amp;&amp;...&#160;</td>
          <td class="paramname"><em>args</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Emplace an element after the given position </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pos</td><td>the position to insert after </td></tr>
    <tr><td class="paramname">args</td><td>the parameters pack used to create the element </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an interator on the inserted element </dd></dl>

</div>
</div>
<a class="anchor" id="a040cba4649e47a2f038b59c5e42aed01"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T , class Allocator &gt; </div>
<div class="memtemplate">
template&lt;class... Args&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php">NRE::Utility::Detail::ForwardList</a>&lt; T, Allocator &gt;::emplaceFront </td>
          <td>(</td>
          <td class="paramtype">Args &amp;&amp;...&#160;</td>
          <td class="paramname"><em>args</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Emplace an element to the the front of the list </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">args</td><td>the parameters pack used to create the element </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a8c4dea70121345a48362b2df83fcd9ca"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T , class Allocator &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#a157f3a9eae9f08b87687defaf033b6ee">Iterator</a> <a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php">NRE::Utility::Detail::ForwardList</a>&lt; T, Allocator &gt;::end </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>an iterator on the end of the container </dd></dl>

</div>
</div>
<a class="anchor" id="a8139088c474bb6567f3b17d1ff12a3fb"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T , class Allocator &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#aa8034d1555a12e97536a5fc11584a0ff">ConstIterator</a> <a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php">NRE::Utility::Detail::ForwardList</a>&lt; T, Allocator &gt;::end </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>a const iterator on the end of the container </dd></dl>

</div>
</div>
<a class="anchor" id="ae565fdd3d37c98bcea612121cc4a53d4"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T , class Allocator &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#a157f3a9eae9f08b87687defaf033b6ee">Iterator</a> <a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php">NRE::Utility::Detail::ForwardList</a>&lt; T, Allocator &gt;::eraseAfter </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#aa8034d1555a12e97536a5fc11584a0ff">ConstIterator</a>&#160;</td>
          <td class="paramname"><em>pos</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Erase the element after the given position </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pos</td><td>the position to erase after </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the iterator on the element after the erased element </dd></dl>

</div>
</div>
<a class="anchor" id="a16955b85b668a200c7eb5f22c036f66c"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T , class Allocator &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#a157f3a9eae9f08b87687defaf033b6ee">Iterator</a> <a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php">NRE::Utility::Detail::ForwardList</a>&lt; T, Allocator &gt;::eraseAfter </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#aa8034d1555a12e97536a5fc11584a0ff">ConstIterator</a>&#160;</td>
          <td class="paramname"><em>begin</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#aa8034d1555a12e97536a5fc11584a0ff">ConstIterator</a>&#160;</td>
          <td class="paramname"><em>end</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Erase all element in the given range except the begin and end </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">begin</td><td>the begin position to erase after </td></tr>
    <tr><td class="paramname">end</td><td>the end iterator </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the end iterator </dd></dl>

</div>
</div>
<a class="anchor" id="ab01cf668a4f0172ae129385ba0a9aec2"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T , class Allocator &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">Allocator <a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php">NRE::Utility::Detail::ForwardList</a>&lt; T, Allocator &gt;::getAllocator </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>the list's memory allocator </dd></dl>

</div>
</div>
<a class="anchor" id="ada1869b9184ea61223fde97e80dba3e6"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T , class Allocator &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#a97b01e49e848ea33bd86878c241a23e2">Reference</a> <a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php">NRE::Utility::Detail::ForwardList</a>&lt; T, Allocator &gt;::getFront </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>the list head </dd></dl>

</div>
</div>
<a class="anchor" id="a0d671990508f95692165bec88eeb7100"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T , class Allocator &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#a8a481ed9f3f91a70e55fe802a3ff30cf">ConstReference</a> <a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php">NRE::Utility::Detail::ForwardList</a>&lt; T, Allocator &gt;::getFront </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>the list head </dd></dl>

</div>
</div>
<a class="anchor" id="a85246b78975f494e2f2b617342b1cd6e"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T , class Allocator &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">constexpr <a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#a524d70a90fa07880b66be7c38dd76bdd">SizeType</a> <a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php">NRE::Utility::Detail::ForwardList</a>&lt; T, Allocator &gt;::getMaxSize </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>the maximum list size </dd></dl>

</div>
</div>
<a class="anchor" id="a03cab33281281548f822f522d0857d54"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T , class Allocator &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#a524d70a90fa07880b66be7c38dd76bdd">SizeType</a> <a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php">NRE::Utility::Detail::ForwardList</a>&lt; T, Allocator &gt;::getSize </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>the list size </dd></dl>

</div>
</div>
<a class="anchor" id="a002fd310eeb154d415beca8189812367"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T , class Allocator &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#a157f3a9eae9f08b87687defaf033b6ee">Iterator</a> <a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php">NRE::Utility::Detail::ForwardList</a>&lt; T, Allocator &gt;::insertAfter </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#aa8034d1555a12e97536a5fc11584a0ff">ConstIterator</a>&#160;</td>
          <td class="paramname"><em>pos</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#a8a481ed9f3f91a70e55fe802a3ff30cf">ConstReference</a>&#160;</td>
          <td class="paramname"><em>value</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Insert a copy of the given element after the given position </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pos</td><td>the position to insert after </td></tr>
    <tr><td class="paramname">value</td><td>the element to insert </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an iterator on the inserted element </dd></dl>

</div>
</div>
<a class="anchor" id="a32d12d98ea142845e1d58ccb4e032a41"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T , class Allocator &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#a157f3a9eae9f08b87687defaf033b6ee">Iterator</a> <a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php">NRE::Utility::Detail::ForwardList</a>&lt; T, Allocator &gt;::insertAfter </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#aa8034d1555a12e97536a5fc11584a0ff">ConstIterator</a>&#160;</td>
          <td class="paramname"><em>pos</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#a94a9c6feab3ff50ed41e9615ab58347e">ValueType</a> &amp;&amp;&#160;</td>
          <td class="paramname"><em>value</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Insert the given element after the given position </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pos</td><td>the position to insert after </td></tr>
    <tr><td class="paramname">value</td><td>the element to insert </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an iterator on the inserted element </dd></dl>

</div>
</div>
<a class="anchor" id="af9f316a98e88ce292613031981ef687e"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T , class Allocator &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#a157f3a9eae9f08b87687defaf033b6ee">Iterator</a> <a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php">NRE::Utility::Detail::ForwardList</a>&lt; T, Allocator &gt;::insertAfter </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#aa8034d1555a12e97536a5fc11584a0ff">ConstIterator</a>&#160;</td>
          <td class="paramname"><em>pos</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#a524d70a90fa07880b66be7c38dd76bdd">SizeType</a>&#160;</td>
          <td class="paramname"><em>count</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#a8a481ed9f3f91a70e55fe802a3ff30cf">ConstReference</a>&#160;</td>
          <td class="paramname"><em>value</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Insert count copy of the given element after the given position </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pos</td><td>the position to insert after </td></tr>
    <tr><td class="paramname">count</td><td>the number of copy to insert </td></tr>
    <tr><td class="paramname">value</td><td>the element to insert </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an iterator on the last copy </dd></dl>

</div>
</div>
<a class="anchor" id="abe3ce51e68cf5bd074c7ddb7bacde4ec"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T , class Allocator &gt; </div>
<div class="memtemplate">
template&lt;class InputIterator &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#a157f3a9eae9f08b87687defaf033b6ee">Iterator</a> <a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php">NRE::Utility::Detail::ForwardList</a>&lt; T, Allocator &gt;::insertAfter </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#aa8034d1555a12e97536a5fc11584a0ff">ConstIterator</a>&#160;</td>
          <td class="paramname"><em>pos</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="struct_n_r_e_1_1_utility_1_1_input_iterator.php">InputIterator</a>&#160;</td>
          <td class="paramname"><em>begin</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="struct_n_r_e_1_1_utility_1_1_input_iterator.php">InputIterator</a>&#160;</td>
          <td class="paramname"><em>end</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Insert copy of elements in the given range after the given position </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pos</td><td>the position to insert after </td></tr>
    <tr><td class="paramname">begin</td><td>the iterator on the first element </td></tr>
    <tr><td class="paramname">end</td><td>the iterator after the last element </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an iterator on the last inserted element </dd></dl>

</div>
</div>
<a class="anchor" id="a14bcf0a43ddfd1bdf3e3313d53072132"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T , class Allocator &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#a157f3a9eae9f08b87687defaf033b6ee">Iterator</a> <a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php">NRE::Utility::Detail::ForwardList</a>&lt; T, Allocator &gt;::insertAfter </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#aa8034d1555a12e97536a5fc11584a0ff">ConstIterator</a>&#160;</td>
          <td class="paramname"><em>pos</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::initializer_list&lt; <a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#a94a9c6feab3ff50ed41e9615ab58347e">ValueType</a> &gt;&#160;</td>
          <td class="paramname"><em>list</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Insert copy of elements in the given list after the given position </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pos</td><td>the position to insert after </td></tr>
    <tr><td class="paramname">list</td><td>the list containing elements </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an iterator on the last inserted element </dd></dl>

</div>
</div>
<a class="anchor" id="a39b0e5e75e0a71477e9bf5366edc46a4"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T , class Allocator &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">bool <a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php">NRE::Utility::Detail::ForwardList</a>&lt; T, Allocator &gt;::isEmpty </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>if the list is empty </dd></dl>

</div>
</div>
<a class="anchor" id="a8cfa3208d57a1c9afd388ad8f54e5c82"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T , class Allocator &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php">NRE::Utility::Detail::ForwardList</a>&lt; T, Allocator &gt;::merge </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php">ForwardList</a>&lt; T, Allocator &gt; &amp;&#160;</td>
          <td class="paramname"><em>list</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Merge this with list, both need to be sorted, list becomes empty </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">list</td><td>the other list to merge with this </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a02d41f27ba9b2a1f70243ec24046a258"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T , class Allocator &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php">NRE::Utility::Detail::ForwardList</a>&lt; T, Allocator &gt;::merge </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php">ForwardList</a>&lt; T, Allocator &gt; &amp;&amp;&#160;</td>
          <td class="paramname"><em>list</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Merge this with list, both need to be sorted, list becomes empty </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">list</td><td>the other list to merge with this </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a7b48993cf5c2a755452a040650254c21"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T , class Allocator &gt; </div>
<div class="memtemplate">
template&lt;class Comparator &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php">NRE::Utility::Detail::ForwardList</a>&lt; T, Allocator &gt;::merge </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php">ForwardList</a>&lt; T, Allocator &gt; &amp;&#160;</td>
          <td class="paramname"><em>list</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">Comparator&#160;</td>
          <td class="paramname"><em>comp</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Merge this with list, both need to be sorted, list becomes empty </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">list</td><td>the other list to merge with this </td></tr>
    <tr><td class="paramname">comp</td><td>function which returns ​true if the first argument is less than the second </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a024ccfdd24d3de8f09536c0e977eef46"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T , class Allocator &gt; </div>
<div class="memtemplate">
template&lt;class Comparator &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php">NRE::Utility::Detail::ForwardList</a>&lt; T, Allocator &gt;::merge </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php">ForwardList</a>&lt; T, Allocator &gt; &amp;&amp;&#160;</td>
          <td class="paramname"><em>list</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">Comparator&#160;</td>
          <td class="paramname"><em>comp</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Merge this with list, both need to be sorted, list becomes empty </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">list</td><td>the other list to merge with this </td></tr>
    <tr><td class="paramname">comp</td><td>function which returns ​true if the first argument is less than the second </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="abcdf906e8f5ab3a97eefc94cef204d88"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T , class Allocator &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">bool <a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php">NRE::Utility::Detail::ForwardList</a>&lt; T, Allocator &gt;::operator!= </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php">ForwardList</a>&lt; T, Allocator &gt; const &amp;&#160;</td>
          <td class="paramname"><em>list</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Inequality test between this and list </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">list</td><td>the other list to compare with this </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the test result </dd></dl>

</div>
</div>
<a class="anchor" id="addf1451ed88db9313876d7f586d21352"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T , class Allocator &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php">ForwardList</a>&amp; <a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php">NRE::Utility::Detail::ForwardList</a>&lt; T, Allocator &gt;::operator= </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php">ForwardList</a>&lt; T, Allocator &gt; const &amp;&#160;</td>
          <td class="paramname"><em>list</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Copy list into this </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">list</td><td>the list to copy into this </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the reference of himself </dd></dl>

</div>
</div>
<a class="anchor" id="a19e9d9710f9aa61103624b414a633ad4"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T , class Allocator &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php">ForwardList</a>&amp; <a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php">NRE::Utility::Detail::ForwardList</a>&lt; T, Allocator &gt;::operator= </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php">ForwardList</a>&lt; T, Allocator &gt; &amp;&amp;&#160;</td>
          <td class="paramname"><em>list</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Move list into this </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">list</td><td>the list to move into this </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the reference of himself </dd></dl>

</div>
</div>
<a class="anchor" id="a61c427ca03e0cd4e5cbdad7b0179ddc3"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T , class Allocator &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">bool <a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php">NRE::Utility::Detail::ForwardList</a>&lt; T, Allocator &gt;::operator== </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php">ForwardList</a>&lt; T, Allocator &gt; const &amp;&#160;</td>
          <td class="paramname"><em>list</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Equality test between this and list </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">list</td><td>the other list to compare with this </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the test result </dd></dl>

</div>
</div>
<a class="anchor" id="af715030e77cd1887848662888b506204"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T , class Allocator &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php">NRE::Utility::Detail::ForwardList</a>&lt; T, Allocator &gt;::popFront </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Pop the front of the list </p>

</div>
</div>
<a class="anchor" id="ac8d6ae175701ed3bd59ece3a871763f4"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T , class Allocator &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php">NRE::Utility::Detail::ForwardList</a>&lt; T, Allocator &gt;::pushFront </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#a8a481ed9f3f91a70e55fe802a3ff30cf">ConstReference</a>&#160;</td>
          <td class="paramname"><em>value</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Insert a copy of the given element to the front of the list </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">value</td><td>the value to insert </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a47d3a65b61872657d62f085d2f8e7641"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T , class Allocator &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php">NRE::Utility::Detail::ForwardList</a>&lt; T, Allocator &gt;::pushFront </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#a94a9c6feab3ff50ed41e9615ab58347e">ValueType</a> &amp;&amp;&#160;</td>
          <td class="paramname"><em>value</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Insert the given element to the front of the list </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">value</td><td>the value to insert </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a15d8bcb6f8a77248c1ba7ee70c3a65f0"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T , class Allocator &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php">NRE::Utility::Detail::ForwardList</a>&lt; T, Allocator &gt;::remove </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#a8a481ed9f3f91a70e55fe802a3ff30cf">ConstReference</a>&#160;</td>
          <td class="paramname"><em>value</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Remove all elements in the list equals to the given value </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">value</td><td>the value to erase </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a800fdb8a95e3c9eea82c35cb20e140e0"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T , class Allocator &gt; </div>
<div class="memtemplate">
template&lt;class UnaryPredicate &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php">NRE::Utility::Detail::ForwardList</a>&lt; T, Allocator &gt;::removeIf </td>
          <td>(</td>
          <td class="paramtype">UnaryPredicate&#160;</td>
          <td class="paramname"><em>p</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Remove all elements in the list where p return true </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">p</td><td>the predicate used to remove </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="af6bd0caa51a6674c6bddea0e95a434c6"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T , class Allocator &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php">NRE::Utility::Detail::ForwardList</a>&lt; T, Allocator &gt;::resize </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#a524d70a90fa07880b66be7c38dd76bdd">SizeType</a>&#160;</td>
          <td class="paramname"><em>count</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Resize the container up the given size, insert value if needed </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">count</td><td>the new capacity </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a091475d50020cb09a85692e1df4915eb"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T , class Allocator &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php">NRE::Utility::Detail::ForwardList</a>&lt; T, Allocator &gt;::resize </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#a524d70a90fa07880b66be7c38dd76bdd">SizeType</a>&#160;</td>
          <td class="paramname"><em>count</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#a8a481ed9f3f91a70e55fe802a3ff30cf">ConstReference</a>&#160;</td>
          <td class="paramname"><em>value</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Resize the container up the given size, insert value if needed </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">count</td><td>the new capacity </td></tr>
    <tr><td class="paramname">value</td><td>the value used when inserting </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="ac8ad0da3abfb66859d9a2d6e1d7a1d12"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T , class Allocator &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php">NRE::Utility::Detail::ForwardList</a>&lt; T, Allocator &gt;::reverse </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Reverse the list </p>

</div>
</div>
<a class="anchor" id="aa03c36b2de7bdaf4a976d1a05674b522"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T , class Allocator &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php">NRE::Utility::Detail::ForwardList</a>&lt; T, Allocator &gt;::spliceAfter </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#aa8034d1555a12e97536a5fc11584a0ff">ConstIterator</a>&#160;</td>
          <td class="paramname"><em>pos</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php">ForwardList</a>&lt; T, Allocator &gt; &amp;&#160;</td>
          <td class="paramname"><em>list</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Move elements from list into this, insertion start after pos </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pos</td><td>the position to insert after </td></tr>
    <tr><td class="paramname">list</td><td>the list to empty </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="ac08a6b2e3e062a82aedc41f50a5019df"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T , class Allocator &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php">NRE::Utility::Detail::ForwardList</a>&lt; T, Allocator &gt;::spliceAfter </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#aa8034d1555a12e97536a5fc11584a0ff">ConstIterator</a>&#160;</td>
          <td class="paramname"><em>pos</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php">ForwardList</a>&lt; T, Allocator &gt; &amp;&amp;&#160;</td>
          <td class="paramname"><em>list</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Move elements from list into this, insertion start after pos </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pos</td><td>the position to insert after </td></tr>
    <tr><td class="paramname">list</td><td>the list to empty </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a1b33703707d73d8e7bf86de9f8237289"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T , class Allocator &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php">NRE::Utility::Detail::ForwardList</a>&lt; T, Allocator &gt;::spliceAfter </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#aa8034d1555a12e97536a5fc11584a0ff">ConstIterator</a>&#160;</td>
          <td class="paramname"><em>pos</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php">ForwardList</a>&lt; T, Allocator &gt; &amp;&#160;</td>
          <td class="paramname"><em>list</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#aa8034d1555a12e97536a5fc11584a0ff">ConstIterator</a>&#160;</td>
          <td class="paramname"><em>it</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Move the element pointed by it from list into this, insertion start after pos </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pos</td><td>the position to insert after </td></tr>
    <tr><td class="paramname">list</td><td>the list to empty </td></tr>
    <tr><td class="paramname">it</td><td>the element to move </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="ad799ebe6bde93ab25bde53686e704d46"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T , class Allocator &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php">NRE::Utility::Detail::ForwardList</a>&lt; T, Allocator &gt;::spliceAfter </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#aa8034d1555a12e97536a5fc11584a0ff">ConstIterator</a>&#160;</td>
          <td class="paramname"><em>pos</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php">ForwardList</a>&lt; T, Allocator &gt; &amp;&amp;&#160;</td>
          <td class="paramname"><em>list</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#aa8034d1555a12e97536a5fc11584a0ff">ConstIterator</a>&#160;</td>
          <td class="paramname"><em>it</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Move the element pointed by it from list into this, insertion start after pos </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pos</td><td>the position to insert after </td></tr>
    <tr><td class="paramname">list</td><td>the list to empty </td></tr>
    <tr><td class="paramname">it</td><td>the element to move </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a4aaffad462c7b294f498e1e715412b11"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T , class Allocator &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php">NRE::Utility::Detail::ForwardList</a>&lt; T, Allocator &gt;::spliceAfter </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#aa8034d1555a12e97536a5fc11584a0ff">ConstIterator</a>&#160;</td>
          <td class="paramname"><em>pos</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php">ForwardList</a>&lt; T, Allocator &gt; &amp;&#160;</td>
          <td class="paramname"><em>list</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#aa8034d1555a12e97536a5fc11584a0ff">ConstIterator</a>&#160;</td>
          <td class="paramname"><em>begin</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#aa8034d1555a12e97536a5fc11584a0ff">ConstIterator</a>&#160;</td>
          <td class="paramname"><em>end</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Move elements in the given range (begin, end) from list into this, insertion start after pos </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pos</td><td>the position to insert after </td></tr>
    <tr><td class="paramname">list</td><td>the list to empty </td></tr>
    <tr><td class="paramname">begin</td><td>the range start to take elements from </td></tr>
    <tr><td class="paramname">end</td><td>the range end to take elements from </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a966b0c57a69963aeb103a3f407b4efc5"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T , class Allocator &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php">NRE::Utility::Detail::ForwardList</a>&lt; T, Allocator &gt;::spliceAfter </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#aa8034d1555a12e97536a5fc11584a0ff">ConstIterator</a>&#160;</td>
          <td class="paramname"><em>pos</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php">ForwardList</a>&lt; T, Allocator &gt; &amp;&amp;&#160;</td>
          <td class="paramname"><em>list</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#aa8034d1555a12e97536a5fc11584a0ff">ConstIterator</a>&#160;</td>
          <td class="paramname"><em>begin</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php#aa8034d1555a12e97536a5fc11584a0ff">ConstIterator</a>&#160;</td>
          <td class="paramname"><em>end</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Move elements in the given range (begin, end) from list into this, insertion start after pos </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pos</td><td>the position to insert after </td></tr>
    <tr><td class="paramname">list</td><td>the list to empty </td></tr>
    <tr><td class="paramname">begin</td><td>the range start to take elements from </td></tr>
    <tr><td class="paramname">end</td><td>the range end to take elements from </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="ac9c98f9a4efab0f165a73091f79a0c55"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T , class Allocator &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php">NRE::Utility::Detail::ForwardList</a>&lt; T, Allocator &gt;::swap </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php">ForwardList</a>&lt; T, Allocator &gt; &amp;&#160;</td>
          <td class="paramname"><em>list</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Swap the content of the given list with this </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">list</td><td>the other list </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a6432f5a1bcec5d7eb30939e0d12e62bb"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T , class Allocator &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="_n_r_e___string_8hpp.php#a20410cefd428aefdf41f418a1e489d66">String</a> <a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php">NRE::Utility::Detail::ForwardList</a>&lt; T, Allocator &gt;::toString </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Convert the object into a string representation </p><dl class="section return"><dt>Returns</dt><dd>the converted object </dd></dl>

</div>
</div>
<a class="anchor" id="aa45af044d9b7b0db414bdaa2e82324cc"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T , class Allocator &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_forward_list.php">NRE::Utility::Detail::ForwardList</a>&lt; T, Allocator &gt;::unique </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Remove successive redondants elements </p>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>/mnt/c/Users/abell/Documents/GitHub/NRE-Utility/src/Utility/Detail/ForwardList/<a class="el" href="_detail_2_forward_list_2_n_r_e___forward_list_8hpp_source.php">NRE_ForwardList.hpp</a></li>
</ul>
</div><!-- contents -->
<!-- HTML footer for doxygen 1.8.8-->
<!-- start footer part -->
</div>
</div>
</div>
</div>
</body>
</html>
