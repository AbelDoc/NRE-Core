<!-- HTML header for doxygen 1.8.8-->
<!DOCTYPE html>
<html>
    <head>
        <meta http-equiv="X-UA-Compatible" content="IE=edge">
        <!-- For Mobile Devices -->
        <meta name="viewport" content="width=device-width, initial-scale=1">
        <meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
        <meta name="generator" content="Doxygen 1.8.11"/>
        <script type="text/javascript" src="../../js/jquery-2.1.1.min.js"></script>
        <title>NRE-Utility: NRE::Utility::BasicString&lt; T &gt; Class Template Reference</title>
        <!--<link href="tabs.css" rel="stylesheet" type="text/css"/>-->
        <script type="text/javascript" src="dynsections.js"></script>
        <link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
        <link href="doxygen.css" rel="stylesheet" type="text/css" />
        <link href="style.css" rel="stylesheet" type="text/css"/>
        <link href='https://fonts.googleapis.com/css?family=Roboto+Slab' rel='stylesheet' type='text/css'>
        <?php
            include '../../php/navigation.php';
            if (!isset($_COOKIE["theme"]) || $_COOKIE["theme"] == "dark") {
                echo '<link href="../../css/dark/bootstrap.css" rel="stylesheet">';
            } else {
                echo '<link href="../../css/light/bootstrap.css" rel="stylesheet">';
            }
        ?>
        <script src="../../js/bootstrap.min.js"></script>
        <script type="text/javascript" src="doxy-boot.js"></script>
    </head>
    <body>
        <div class="container-fluid">
            <header class="page-header">
                <a href="../../../index.php">
                    <img src="../../img/Logo.png" class="logo img-responsive"/>
                </a>
            </header>
            <?php addNavigationBarInl(false); ?>
            <div id="top" class="row"><!-- do not remove this div, it is closed by doxygen! -->
                <div class="col-lg-12">
                    <div class="panel panel-default">
                        <div class="panel-body">
<!-- end header part -->
<!-- Generated by Doxygen 1.8.11 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.php"><span>Main&#160;Page</span></a></li>
      <li><a href="namespaces.php"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.php"><span>Classes</span></a></li>
      <li><a href="files.php"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.php"><span>Class&#160;List</span></a></li>
      <li><a href="classes.php"><span>Class&#160;Index</span></a></li>
      <li><a href="hierarchy.php"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.php"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespace_n_r_e.php">NRE</a></li><li class="navelem"><b>Utility</b></li><li class="navelem"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">BasicString</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-types">Public Types</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-static-attribs">Static Public Attributes</a> &#124;
<a href="class_n_r_e_1_1_utility_1_1_basic_string-members.php">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">NRE::Utility::BasicString&lt; T &gt; Class Template Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>A basic template string, with dynamic size, guarantee to be in contiguous memory.  
 <a href="class_n_r_e_1_1_utility_1_1_basic_string.php#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="_n_r_e___string_8hpp_source.php">NRE_String.hpp</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-types"></a>
Public Types</h2></td></tr>
<tr class="memitem:ad05eef994fea38c5d1c5e5dda05d4806"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#ad05eef994fea38c5d1c5e5dda05d4806">ValueType</a> = T</td></tr>
<tr class="separator:ad05eef994fea38c5d1c5e5dda05d4806"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8fc26180f68e827e77bce464afa03255"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a> = std::size_t</td></tr>
<tr class="separator:a8fc26180f68e827e77bce464afa03255"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4a112de487adde9aec102fb6a5e3d562"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a4a112de487adde9aec102fb6a5e3d562">DifferenceType</a> = std::ptrdiff_t</td></tr>
<tr class="separator:a4a112de487adde9aec102fb6a5e3d562"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1ebb9b56406afd8fd5dae7cb88d4e8fb"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a1ebb9b56406afd8fd5dae7cb88d4e8fb">Reference</a> = <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#ad05eef994fea38c5d1c5e5dda05d4806">ValueType</a> &amp;</td></tr>
<tr class="separator:a1ebb9b56406afd8fd5dae7cb88d4e8fb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac5b0fd9d01870016e685c23c456b7f13"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#ac5b0fd9d01870016e685c23c456b7f13">ConstReference</a> = <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#ad05eef994fea38c5d1c5e5dda05d4806">ValueType</a> const &amp;</td></tr>
<tr class="separator:ac5b0fd9d01870016e685c23c456b7f13"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2c5b4cad76f901a56920ba93bb57366c"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a2c5b4cad76f901a56920ba93bb57366c">Pointer</a> = <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#ad05eef994fea38c5d1c5e5dda05d4806">ValueType</a> *</td></tr>
<tr class="separator:a2c5b4cad76f901a56920ba93bb57366c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a856da4ed7172faf22930edef2b3de7eb"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a856da4ed7172faf22930edef2b3de7eb">ConstPointer</a> = const <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#ad05eef994fea38c5d1c5e5dda05d4806">ValueType</a> *</td></tr>
<tr class="separator:a856da4ed7172faf22930edef2b3de7eb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6060a89f1bd8f3b40a53e76157f6f091"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a6060a89f1bd8f3b40a53e76157f6f091">Iterator</a> = <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a2c5b4cad76f901a56920ba93bb57366c">Pointer</a></td></tr>
<tr class="separator:a6060a89f1bd8f3b40a53e76157f6f091"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a121c89664b8182e62334547e032e25a9"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a121c89664b8182e62334547e032e25a9">ConstIterator</a> = <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a856da4ed7172faf22930edef2b3de7eb">ConstPointer</a></td></tr>
<tr class="separator:a121c89664b8182e62334547e032e25a9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a417f6581726a0ad98b930909606d1212"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a417f6581726a0ad98b930909606d1212">ReverseIterator</a> = std::reverse_iterator&lt; <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a6060a89f1bd8f3b40a53e76157f6f091">Iterator</a> &gt;</td></tr>
<tr class="separator:a417f6581726a0ad98b930909606d1212"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0e037d86eff7538a37db0bae2ae97db1"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a0e037d86eff7538a37db0bae2ae97db1">ConstReverseIterator</a> = std::reverse_iterator&lt; <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a121c89664b8182e62334547e032e25a9">ConstIterator</a> &gt;</td></tr>
<tr class="separator:a0e037d86eff7538a37db0bae2ae97db1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af27e966c6ccb0d67b7e9e1e097557c7d"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#af27e966c6ccb0d67b7e9e1e097557c7d">value_type</a> = <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#ad05eef994fea38c5d1c5e5dda05d4806">ValueType</a></td></tr>
<tr class="separator:af27e966c6ccb0d67b7e9e1e097557c7d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa4b85c563aaf6faa1c7f077e69419eb1"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#aa4b85c563aaf6faa1c7f077e69419eb1">size_type</a> = <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a></td></tr>
<tr class="separator:aa4b85c563aaf6faa1c7f077e69419eb1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac06dc72c93d7c347a776ede452eae018"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#ac06dc72c93d7c347a776ede452eae018">difference_type</a> = <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a4a112de487adde9aec102fb6a5e3d562">DifferenceType</a></td></tr>
<tr class="separator:ac06dc72c93d7c347a776ede452eae018"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ababffd6bcfcbd5c7f3a612af2b71453a"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#ababffd6bcfcbd5c7f3a612af2b71453a">reference</a> = <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a1ebb9b56406afd8fd5dae7cb88d4e8fb">Reference</a></td></tr>
<tr class="separator:ababffd6bcfcbd5c7f3a612af2b71453a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abfaac45fb451dc8006a19caf33e7b942"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#abfaac45fb451dc8006a19caf33e7b942">const_reference</a> = <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#ac5b0fd9d01870016e685c23c456b7f13">ConstReference</a></td></tr>
<tr class="separator:abfaac45fb451dc8006a19caf33e7b942"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af7b448ec42d7514c7c2c7c22c93d4cac"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#af7b448ec42d7514c7c2c7c22c93d4cac">pointer</a> = <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a2c5b4cad76f901a56920ba93bb57366c">Pointer</a></td></tr>
<tr class="separator:af7b448ec42d7514c7c2c7c22c93d4cac"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0be03e2ca9f4c8721a1b1fd7887f0501"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a0be03e2ca9f4c8721a1b1fd7887f0501">const_pointer</a> = <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a856da4ed7172faf22930edef2b3de7eb">ConstPointer</a></td></tr>
<tr class="separator:a0be03e2ca9f4c8721a1b1fd7887f0501"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac96f8d4660963b2997db6fd31bdd871a"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#ac96f8d4660963b2997db6fd31bdd871a">iterator</a> = <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a6060a89f1bd8f3b40a53e76157f6f091">Iterator</a></td></tr>
<tr class="separator:ac96f8d4660963b2997db6fd31bdd871a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3bfd5738ba0f33e562e8476a4fc3170a"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a3bfd5738ba0f33e562e8476a4fc3170a">const_iterator</a> = <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a121c89664b8182e62334547e032e25a9">ConstIterator</a></td></tr>
<tr class="separator:a3bfd5738ba0f33e562e8476a4fc3170a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4d9854c18ec08c4b445906f32c063aee"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a4d9854c18ec08c4b445906f32c063aee">reverse_iterator</a> = <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a417f6581726a0ad98b930909606d1212">ReverseIterator</a></td></tr>
<tr class="separator:a4d9854c18ec08c4b445906f32c063aee"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af8884e7c5fd53e304c23c4dbe731537c"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#af8884e7c5fd53e304c23c4dbe731537c">const_reverse_iterator</a> = <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a0e037d86eff7538a37db0bae2ae97db1">ConstReverseIterator</a></td></tr>
<tr class="separator:af8884e7c5fd53e304c23c4dbe731537c"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a9a3f02658ae8cb4aefeaebfd72b92020"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a9a3f02658ae8cb4aefeaebfd72b92020">BasicString</a> ()</td></tr>
<tr class="separator:a9a3f02658ae8cb4aefeaebfd72b92020"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a67061d547a418102349a519e29d331f2"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a67061d547a418102349a519e29d331f2">BasicString</a> (<a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a> count, <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#ad05eef994fea38c5d1c5e5dda05d4806">ValueType</a> value)</td></tr>
<tr class="separator:a67061d547a418102349a519e29d331f2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8717d6cd3a66e5418bb21e3f93358046"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8717d6cd3a66e5418bb21e3f93358046">BasicString</a> (<a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a> pos, <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a> count, <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">BasicString</a> const &amp;str)</td></tr>
<tr class="separator:a8717d6cd3a66e5418bb21e3f93358046"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3a0bd1cc9d643306d75b9068d142bb3b"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a3a0bd1cc9d643306d75b9068d142bb3b">BasicString</a> (<a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a> count, <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a856da4ed7172faf22930edef2b3de7eb">ConstPointer</a> str)</td></tr>
<tr class="separator:a3a0bd1cc9d643306d75b9068d142bb3b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a49009d5cee0d62077866b33192081c40"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a49009d5cee0d62077866b33192081c40">BasicString</a> (<a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a856da4ed7172faf22930edef2b3de7eb">ConstPointer</a> str)</td></tr>
<tr class="separator:a49009d5cee0d62077866b33192081c40"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6917a729f68384e412f0702a57da5abd"><td class="memTemplParams" colspan="2">template&lt;class InputIterator &gt; </td></tr>
<tr class="memitem:a6917a729f68384e412f0702a57da5abd"><td class="memTemplItemLeft" align="right" valign="top">&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a6917a729f68384e412f0702a57da5abd">BasicString</a> (<a class="el" href="struct_n_r_e_1_1_utility_1_1_input_iterator.php">InputIterator</a> <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a87336e1c57b46a945b6edf733b0a926d">begin</a>, <a class="el" href="struct_n_r_e_1_1_utility_1_1_input_iterator.php">InputIterator</a> <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a40d0473b2964f19ba6f4a98696cc91b2">end</a>)</td></tr>
<tr class="separator:a6917a729f68384e412f0702a57da5abd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2c4f5cf3fea12096e51c6e5f55c35629"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a2c4f5cf3fea12096e51c6e5f55c35629">BasicString</a> (std::initializer_list&lt; T &gt; init)</td></tr>
<tr class="separator:a2c4f5cf3fea12096e51c6e5f55c35629"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a86b62ef1ead351c7cd9e8868d1bdf4fd"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a86b62ef1ead351c7cd9e8868d1bdf4fd">BasicString</a> (<a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">BasicString</a> const &amp;str)</td></tr>
<tr class="separator:a86b62ef1ead351c7cd9e8868d1bdf4fd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af2e21d830517beb02a3cb3a1310fcd9c"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#af2e21d830517beb02a3cb3a1310fcd9c">BasicString</a> (<a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">BasicString</a> &amp;&amp;str)</td></tr>
<tr class="separator:af2e21d830517beb02a3cb3a1310fcd9c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4767aa21ed166bbcbba3346e20063c81"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a4767aa21ed166bbcbba3346e20063c81">~BasicString</a> ()</td></tr>
<tr class="separator:a4767aa21ed166bbcbba3346e20063c81"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae2d2828bb7916521c07326818b4916fe"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a1ebb9b56406afd8fd5dae7cb88d4e8fb">Reference</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#ae2d2828bb7916521c07326818b4916fe">get</a> (<a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a> index)</td></tr>
<tr class="separator:ae2d2828bb7916521c07326818b4916fe"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3bcc61953c6f5cf55b3634256a101934"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#ac5b0fd9d01870016e685c23c456b7f13">ConstReference</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a3bcc61953c6f5cf55b3634256a101934">get</a> (<a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a> index) const </td></tr>
<tr class="separator:a3bcc61953c6f5cf55b3634256a101934"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab82653ee746eb017750672e68ab57966"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a856da4ed7172faf22930edef2b3de7eb">ConstPointer</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#ab82653ee746eb017750672e68ab57966">getData</a> () const </td></tr>
<tr class="separator:ab82653ee746eb017750672e68ab57966"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab546b026ad9dfb4b6a189df9f4f5c088"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a856da4ed7172faf22930edef2b3de7eb">ConstPointer</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#ab546b026ad9dfb4b6a189df9f4f5c088">getCData</a> () const </td></tr>
<tr class="separator:ab546b026ad9dfb4b6a189df9f4f5c088"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0049a28371f2d7c99e76355524d686aa"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a1ebb9b56406afd8fd5dae7cb88d4e8fb">Reference</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a0049a28371f2d7c99e76355524d686aa">getFront</a> ()</td></tr>
<tr class="separator:a0049a28371f2d7c99e76355524d686aa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7a81213ea7b8dbe06bb7d19b8b00cd0b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#ac5b0fd9d01870016e685c23c456b7f13">ConstReference</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a7a81213ea7b8dbe06bb7d19b8b00cd0b">getFront</a> () const </td></tr>
<tr class="separator:a7a81213ea7b8dbe06bb7d19b8b00cd0b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af0527b734b72a1b70565eb73a55cb1db"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a1ebb9b56406afd8fd5dae7cb88d4e8fb">Reference</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#af0527b734b72a1b70565eb73a55cb1db">getLast</a> ()</td></tr>
<tr class="separator:af0527b734b72a1b70565eb73a55cb1db"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a95355100d0742d24cca22d9f0541e595"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#ac5b0fd9d01870016e685c23c456b7f13">ConstReference</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a95355100d0742d24cca22d9f0541e595">getLast</a> () const </td></tr>
<tr class="separator:a95355100d0742d24cca22d9f0541e595"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acf451864206f81c8b321ff26406f1b00"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#acf451864206f81c8b321ff26406f1b00">getSize</a> () const </td></tr>
<tr class="separator:acf451864206f81c8b321ff26406f1b00"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a66ec3113b5f283b77cc33f0e8a74924e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a66ec3113b5f283b77cc33f0e8a74924e">getLength</a> () const </td></tr>
<tr class="separator:a66ec3113b5f283b77cc33f0e8a74924e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4ef0431f31869ef81f7e33dec6c46b51"><td class="memItemLeft" align="right" valign="top">constexpr <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a4ef0431f31869ef81f7e33dec6c46b51">getMaxSize</a> () const </td></tr>
<tr class="separator:a4ef0431f31869ef81f7e33dec6c46b51"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5b45a5b50afd3ad39e09b95c4f1330ec"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a5b45a5b50afd3ad39e09b95c4f1330ec">getCapacity</a> () const </td></tr>
<tr class="separator:a5b45a5b50afd3ad39e09b95c4f1330ec"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a20203ddad7a07bb0bdfb23260d7585f2"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a20203ddad7a07bb0bdfb23260d7585f2">isEmpty</a> () const </td></tr>
<tr class="separator:a20203ddad7a07bb0bdfb23260d7585f2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a87336e1c57b46a945b6edf733b0a926d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a6060a89f1bd8f3b40a53e76157f6f091">Iterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a87336e1c57b46a945b6edf733b0a926d">begin</a> ()</td></tr>
<tr class="separator:a87336e1c57b46a945b6edf733b0a926d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5bdd1cd2ef63b3fd7fd48e0e92e96d07"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a121c89664b8182e62334547e032e25a9">ConstIterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a5bdd1cd2ef63b3fd7fd48e0e92e96d07">begin</a> () const </td></tr>
<tr class="separator:a5bdd1cd2ef63b3fd7fd48e0e92e96d07"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4fbaa10da05afb1e38f01550f089ec3b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a121c89664b8182e62334547e032e25a9">ConstIterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a4fbaa10da05afb1e38f01550f089ec3b">cbegin</a> () const </td></tr>
<tr class="separator:a4fbaa10da05afb1e38f01550f089ec3b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a40d0473b2964f19ba6f4a98696cc91b2"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a6060a89f1bd8f3b40a53e76157f6f091">Iterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a40d0473b2964f19ba6f4a98696cc91b2">end</a> ()</td></tr>
<tr class="separator:a40d0473b2964f19ba6f4a98696cc91b2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:add891802026c21f0982402995b25fe43"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a121c89664b8182e62334547e032e25a9">ConstIterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#add891802026c21f0982402995b25fe43">end</a> () const </td></tr>
<tr class="separator:add891802026c21f0982402995b25fe43"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa620f4b3a6a6e8783fdb343b919e0ef6"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a121c89664b8182e62334547e032e25a9">ConstIterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#aa620f4b3a6a6e8783fdb343b919e0ef6">cend</a> () const </td></tr>
<tr class="separator:aa620f4b3a6a6e8783fdb343b919e0ef6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a295b7f396e515c30e490d0d8a10b7e30"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a417f6581726a0ad98b930909606d1212">ReverseIterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a295b7f396e515c30e490d0d8a10b7e30">rbegin</a> ()</td></tr>
<tr class="separator:a295b7f396e515c30e490d0d8a10b7e30"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a428f523963a236e6e9b165f01e1ecd8c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a0e037d86eff7538a37db0bae2ae97db1">ConstReverseIterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a428f523963a236e6e9b165f01e1ecd8c">rbegin</a> () const </td></tr>
<tr class="separator:a428f523963a236e6e9b165f01e1ecd8c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a50d7fda113a402d7e7b18669aa7ea227"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a0e037d86eff7538a37db0bae2ae97db1">ConstReverseIterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a50d7fda113a402d7e7b18669aa7ea227">crbegin</a> () const </td></tr>
<tr class="separator:a50d7fda113a402d7e7b18669aa7ea227"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a009469819f09df8cafa2dce131d19cb2"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a417f6581726a0ad98b930909606d1212">ReverseIterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a009469819f09df8cafa2dce131d19cb2">rend</a> ()</td></tr>
<tr class="separator:a009469819f09df8cafa2dce131d19cb2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a579ac9b5d39c1e924c1a2ff45d59d68f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a0e037d86eff7538a37db0bae2ae97db1">ConstReverseIterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a579ac9b5d39c1e924c1a2ff45d59d68f">rend</a> () const </td></tr>
<tr class="separator:a579ac9b5d39c1e924c1a2ff45d59d68f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae487050caf2434abc9b16bfab7241eba"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a0e037d86eff7538a37db0bae2ae97db1">ConstReverseIterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#ae487050caf2434abc9b16bfab7241eba">crend</a> () const </td></tr>
<tr class="separator:ae487050caf2434abc9b16bfab7241eba"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad7a70cf9872e66647cf748c58571f644"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">BasicString</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#ad7a70cf9872e66647cf748c58571f644">assign</a> (<a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a> count, <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#ad05eef994fea38c5d1c5e5dda05d4806">ValueType</a> value)</td></tr>
<tr class="separator:ad7a70cf9872e66647cf748c58571f644"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab04d419d62fa599e802084a8a33dcd54"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">BasicString</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#ab04d419d62fa599e802084a8a33dcd54">assign</a> (<a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">BasicString</a> const &amp;str)</td></tr>
<tr class="separator:ab04d419d62fa599e802084a8a33dcd54"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aac630a5ca2f5901be872f544b95a24a1"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">BasicString</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#aac630a5ca2f5901be872f544b95a24a1">assign</a> (<a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a> pos, <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a> count, <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">BasicString</a> const &amp;str)</td></tr>
<tr class="separator:aac630a5ca2f5901be872f544b95a24a1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a12b1678540e15327f9ebcabafd51afc1"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">BasicString</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a12b1678540e15327f9ebcabafd51afc1">assign</a> (<a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">BasicString</a> &amp;&amp;str)</td></tr>
<tr class="separator:a12b1678540e15327f9ebcabafd51afc1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a42725d8fdb6eb398e60e2a2647284383"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">BasicString</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a42725d8fdb6eb398e60e2a2647284383">assign</a> (<a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a> count, <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a856da4ed7172faf22930edef2b3de7eb">ConstPointer</a> str)</td></tr>
<tr class="separator:a42725d8fdb6eb398e60e2a2647284383"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3008b3e86cbc2e32e38fd387c32a3a68"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">BasicString</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a3008b3e86cbc2e32e38fd387c32a3a68">assign</a> (<a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a856da4ed7172faf22930edef2b3de7eb">ConstPointer</a> str)</td></tr>
<tr class="separator:a3008b3e86cbc2e32e38fd387c32a3a68"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8327bffba598171ede088d3b1fc16ace"><td class="memTemplParams" colspan="2">template&lt;class InputIterator &gt; </td></tr>
<tr class="memitem:a8327bffba598171ede088d3b1fc16ace"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">BasicString</a> &amp;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8327bffba598171ede088d3b1fc16ace">assign</a> (<a class="el" href="struct_n_r_e_1_1_utility_1_1_input_iterator.php">InputIterator</a> <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a87336e1c57b46a945b6edf733b0a926d">begin</a>, <a class="el" href="struct_n_r_e_1_1_utility_1_1_input_iterator.php">InputIterator</a> <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a40d0473b2964f19ba6f4a98696cc91b2">end</a>)</td></tr>
<tr class="separator:a8327bffba598171ede088d3b1fc16ace"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a19e77dd1dcd1204e991a95cc62405812"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">BasicString</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a19e77dd1dcd1204e991a95cc62405812">assign</a> (std::initializer_list&lt; T &gt; init)</td></tr>
<tr class="separator:a19e77dd1dcd1204e991a95cc62405812"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7c876ccb7ba4245ed559df07c207bd34"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a7c876ccb7ba4245ed559df07c207bd34">reserve</a> (<a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a> size)</td></tr>
<tr class="separator:a7c876ccb7ba4245ed559df07c207bd34"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6035700c6308e4161bfec5fee48730e0"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a6035700c6308e4161bfec5fee48730e0">clear</a> ()</td></tr>
<tr class="separator:a6035700c6308e4161bfec5fee48730e0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a043d8789a2fcc13972175e55cb0ae9c0"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a043d8789a2fcc13972175e55cb0ae9c0">reverse</a> ()</td></tr>
<tr class="separator:a043d8789a2fcc13972175e55cb0ae9c0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1d814a866a5088ec280f9fa991f5c240"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a1d814a866a5088ec280f9fa991f5c240">reverse</a> (<a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a> pos, <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a> count)</td></tr>
<tr class="separator:a1d814a866a5088ec280f9fa991f5c240"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6ad1d5f470fc6e7e5fff7e0f747ce439"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">BasicString</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a6ad1d5f470fc6e7e5fff7e0f747ce439">insert</a> (<a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a> start, <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a> count, <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#ad05eef994fea38c5d1c5e5dda05d4806">ValueType</a> value)</td></tr>
<tr class="separator:a6ad1d5f470fc6e7e5fff7e0f747ce439"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a455d3ffdcf305888574870fb5877c1d8"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">BasicString</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a455d3ffdcf305888574870fb5877c1d8">insert</a> (<a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a> start, <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a856da4ed7172faf22930edef2b3de7eb">ConstPointer</a> str)</td></tr>
<tr class="separator:a455d3ffdcf305888574870fb5877c1d8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af3e76b176aa06bc2024f9d5e622dbcd3"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">BasicString</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#af3e76b176aa06bc2024f9d5e622dbcd3">insert</a> (<a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a> start, <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a> count, <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a856da4ed7172faf22930edef2b3de7eb">ConstPointer</a> str)</td></tr>
<tr class="separator:af3e76b176aa06bc2024f9d5e622dbcd3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aada8c59818b1b0570c1f4252e1a89232"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">BasicString</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#aada8c59818b1b0570c1f4252e1a89232">insert</a> (<a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a> start, <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">BasicString</a> const &amp;str)</td></tr>
<tr class="separator:aada8c59818b1b0570c1f4252e1a89232"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a170ca6da9abf425d5a49e92967ada82f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">BasicString</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a170ca6da9abf425d5a49e92967ada82f">insert</a> (<a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a> start, <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">BasicString</a> const &amp;str, <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a> index, <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a> count)</td></tr>
<tr class="separator:a170ca6da9abf425d5a49e92967ada82f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3c28a97e0ee391825e9ea938c52d2b3d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a6060a89f1bd8f3b40a53e76157f6f091">Iterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a3c28a97e0ee391825e9ea938c52d2b3d">insert</a> (<a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a121c89664b8182e62334547e032e25a9">ConstIterator</a> start, <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#ad05eef994fea38c5d1c5e5dda05d4806">ValueType</a> value)</td></tr>
<tr class="separator:a3c28a97e0ee391825e9ea938c52d2b3d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8495d07649a412c6a96bcdb44c1ca681"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a6060a89f1bd8f3b40a53e76157f6f091">Iterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8495d07649a412c6a96bcdb44c1ca681">insert</a> (<a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a121c89664b8182e62334547e032e25a9">ConstIterator</a> start, <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a> count, <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#ad05eef994fea38c5d1c5e5dda05d4806">ValueType</a> value)</td></tr>
<tr class="separator:a8495d07649a412c6a96bcdb44c1ca681"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a13757cedd43c3f03ab141f9f77a131c9"><td class="memTemplParams" colspan="2">template&lt;class InputIterator &gt; </td></tr>
<tr class="memitem:a13757cedd43c3f03ab141f9f77a131c9"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a6060a89f1bd8f3b40a53e76157f6f091">Iterator</a>&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a13757cedd43c3f03ab141f9f77a131c9">insert</a> (<a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a121c89664b8182e62334547e032e25a9">ConstIterator</a> start, <a class="el" href="struct_n_r_e_1_1_utility_1_1_input_iterator.php">InputIterator</a> <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a87336e1c57b46a945b6edf733b0a926d">begin</a>, <a class="el" href="struct_n_r_e_1_1_utility_1_1_input_iterator.php">InputIterator</a> <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a40d0473b2964f19ba6f4a98696cc91b2">end</a>)</td></tr>
<tr class="separator:a13757cedd43c3f03ab141f9f77a131c9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae0898bf3a5f72eb5bf6ca3e59de50957"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a6060a89f1bd8f3b40a53e76157f6f091">Iterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#ae0898bf3a5f72eb5bf6ca3e59de50957">insert</a> (<a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a121c89664b8182e62334547e032e25a9">ConstIterator</a> start, std::initializer_list&lt; T &gt; list)</td></tr>
<tr class="separator:ae0898bf3a5f72eb5bf6ca3e59de50957"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa6027e93950c7b8edfdef44440f13105"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">BasicString</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#aa6027e93950c7b8edfdef44440f13105">erase</a> (<a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a> index, <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a> count)</td></tr>
<tr class="separator:aa6027e93950c7b8edfdef44440f13105"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1bf88394c90dcdead82d565616b57c1f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a6060a89f1bd8f3b40a53e76157f6f091">Iterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a1bf88394c90dcdead82d565616b57c1f">erase</a> (<a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a121c89664b8182e62334547e032e25a9">ConstIterator</a> position)</td></tr>
<tr class="separator:a1bf88394c90dcdead82d565616b57c1f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aefa48bb2f2b634ef7661880d2757d3e4"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a6060a89f1bd8f3b40a53e76157f6f091">Iterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#aefa48bb2f2b634ef7661880d2757d3e4">erase</a> (<a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a121c89664b8182e62334547e032e25a9">ConstIterator</a> <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a87336e1c57b46a945b6edf733b0a926d">begin</a>, <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a121c89664b8182e62334547e032e25a9">ConstIterator</a> <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a40d0473b2964f19ba6f4a98696cc91b2">end</a>)</td></tr>
<tr class="separator:aefa48bb2f2b634ef7661880d2757d3e4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac3e78e4c5091b5d8e50bfdf0eef53e67"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#ac3e78e4c5091b5d8e50bfdf0eef53e67">pushBack</a> (<a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#ad05eef994fea38c5d1c5e5dda05d4806">ValueType</a> value)</td></tr>
<tr class="separator:ac3e78e4c5091b5d8e50bfdf0eef53e67"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a51b3da7e0493d6fd6a870629dabc871a"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a51b3da7e0493d6fd6a870629dabc871a">popBack</a> ()</td></tr>
<tr class="separator:a51b3da7e0493d6fd6a870629dabc871a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad9f8a1f41b958481360428112a87f49f"><td class="memTemplParams" colspan="2">template&lt;class K , typename std::enable_if_t&lt; std::is_base_of&lt; Stringable&lt; K &gt;, K &gt;::value, int &gt;  = 0&gt; </td></tr>
<tr class="memitem:ad9f8a1f41b958481360428112a87f49f"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">BasicString</a> &amp;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#ad9f8a1f41b958481360428112a87f49f">append</a> (K const &amp;o)</td></tr>
<tr class="separator:ad9f8a1f41b958481360428112a87f49f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a79b367b1b7cc3c95851d67061e6e20f0"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">BasicString</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a79b367b1b7cc3c95851d67061e6e20f0">append</a> (bool value)</td></tr>
<tr class="separator:a79b367b1b7cc3c95851d67061e6e20f0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac197ac8d8f962607fa132fec013a0e89"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">BasicString</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#ac197ac8d8f962607fa132fec013a0e89">append</a> (<a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#ad05eef994fea38c5d1c5e5dda05d4806">ValueType</a> value)</td></tr>
<tr class="separator:ac197ac8d8f962607fa132fec013a0e89"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a604e598bb4291331936837f03daa221f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">BasicString</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a604e598bb4291331936837f03daa221f">append</a> (short int value)</td></tr>
<tr class="separator:a604e598bb4291331936837f03daa221f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a07fc84ee065d04e1d120c6cf46b3d7bd"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">BasicString</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a07fc84ee065d04e1d120c6cf46b3d7bd">append</a> (int value)</td></tr>
<tr class="separator:a07fc84ee065d04e1d120c6cf46b3d7bd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac0ff6c2544d0a49345e56e6947239549"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">BasicString</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#ac0ff6c2544d0a49345e56e6947239549">append</a> (long int value)</td></tr>
<tr class="separator:ac0ff6c2544d0a49345e56e6947239549"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae6995eb183265766342d7e1aa7035b9b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">BasicString</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#ae6995eb183265766342d7e1aa7035b9b">append</a> (long long int value)</td></tr>
<tr class="separator:ae6995eb183265766342d7e1aa7035b9b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a03aaef153454a9dc6eb4ffb2c3ec69c3"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">BasicString</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a03aaef153454a9dc6eb4ffb2c3ec69c3">append</a> (unsigned short int value)</td></tr>
<tr class="separator:a03aaef153454a9dc6eb4ffb2c3ec69c3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aee33d570595e1240c0b4f6326ffa2e30"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">BasicString</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#aee33d570595e1240c0b4f6326ffa2e30">append</a> (unsigned int value)</td></tr>
<tr class="separator:aee33d570595e1240c0b4f6326ffa2e30"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:addefc97d40ebfd0ea3b50f2a42373674"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">BasicString</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#addefc97d40ebfd0ea3b50f2a42373674">append</a> (unsigned long int value)</td></tr>
<tr class="separator:addefc97d40ebfd0ea3b50f2a42373674"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab682ac9c90b8b6a3d24a0468cb7b7502"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">BasicString</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#ab682ac9c90b8b6a3d24a0468cb7b7502">append</a> (unsigned long long int value)</td></tr>
<tr class="separator:ab682ac9c90b8b6a3d24a0468cb7b7502"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9dcc848aefd7ea1b49cc02dea5c60f8b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">BasicString</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a9dcc848aefd7ea1b49cc02dea5c60f8b">append</a> (float value)</td></tr>
<tr class="separator:a9dcc848aefd7ea1b49cc02dea5c60f8b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a01113158a0457b8eca3aa01f4a68f19a"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">BasicString</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a01113158a0457b8eca3aa01f4a68f19a">append</a> (double value)</td></tr>
<tr class="separator:a01113158a0457b8eca3aa01f4a68f19a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaa24090a62a4744d254b7c4f6711a169"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">BasicString</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#aaa24090a62a4744d254b7c4f6711a169">append</a> (long double value)</td></tr>
<tr class="separator:aaa24090a62a4744d254b7c4f6711a169"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a358d0f085ec2faf6794e75237bb32934"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">BasicString</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a358d0f085ec2faf6794e75237bb32934">append</a> (<a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a> count, <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#ad05eef994fea38c5d1c5e5dda05d4806">ValueType</a> value)</td></tr>
<tr class="separator:a358d0f085ec2faf6794e75237bb32934"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a17bd172896ff73d97cdb0cc612bb7e28"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">BasicString</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a17bd172896ff73d97cdb0cc612bb7e28">append</a> (<a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">BasicString</a> const &amp;str)</td></tr>
<tr class="separator:a17bd172896ff73d97cdb0cc612bb7e28"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a38d94472706346b83512f3311cf9d045"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">BasicString</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a38d94472706346b83512f3311cf9d045">append</a> (<a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">BasicString</a> const &amp;str, <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a> index, <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a> count)</td></tr>
<tr class="separator:a38d94472706346b83512f3311cf9d045"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad77bada498ce8caeb8d39ba9432cb577"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">BasicString</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#ad77bada498ce8caeb8d39ba9432cb577">append</a> (<a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a856da4ed7172faf22930edef2b3de7eb">ConstPointer</a> str, <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a> count)</td></tr>
<tr class="separator:ad77bada498ce8caeb8d39ba9432cb577"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab779ec0fdb160aa681c84b5a7701e4a5"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">BasicString</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#ab779ec0fdb160aa681c84b5a7701e4a5">append</a> (<a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a856da4ed7172faf22930edef2b3de7eb">ConstPointer</a> str)</td></tr>
<tr class="separator:ab779ec0fdb160aa681c84b5a7701e4a5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aefcc5c42ddaddc5a4c63b4af9a54086b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">BasicString</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#aefcc5c42ddaddc5a4c63b4af9a54086b">append</a> (std::string const &amp;str)</td></tr>
<tr class="separator:aefcc5c42ddaddc5a4c63b4af9a54086b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac81947765f131eb41fd35c111edb165d"><td class="memTemplParams" colspan="2">template&lt;class InputIterator &gt; </td></tr>
<tr class="memitem:ac81947765f131eb41fd35c111edb165d"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">BasicString</a> &amp;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#ac81947765f131eb41fd35c111edb165d">append</a> (<a class="el" href="struct_n_r_e_1_1_utility_1_1_input_iterator.php">InputIterator</a> <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a87336e1c57b46a945b6edf733b0a926d">begin</a>, <a class="el" href="struct_n_r_e_1_1_utility_1_1_input_iterator.php">InputIterator</a> <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a40d0473b2964f19ba6f4a98696cc91b2">end</a>)</td></tr>
<tr class="separator:ac81947765f131eb41fd35c111edb165d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a77dc49f9e04a64d0adce9bb8afe7daa2"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">BasicString</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a77dc49f9e04a64d0adce9bb8afe7daa2">append</a> (std::initializer_list&lt; T &gt; list)</td></tr>
<tr class="separator:a77dc49f9e04a64d0adce9bb8afe7daa2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad41793193f7610c892d24bb650c272db"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#ad41793193f7610c892d24bb650c272db">compare</a> (<a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">BasicString</a> const &amp;str) const </td></tr>
<tr class="separator:ad41793193f7610c892d24bb650c272db"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa96321e3ffe8cee0c1042d4511e0ec56"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#aa96321e3ffe8cee0c1042d4511e0ec56">compare</a> (<a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a> tPos, <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a> tCount, <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">BasicString</a> const &amp;str) const </td></tr>
<tr class="separator:aa96321e3ffe8cee0c1042d4511e0ec56"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a56fc940d899c833e64475b5f71755afb"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a56fc940d899c833e64475b5f71755afb">compare</a> (<a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a> tPos, <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a> tCount, <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">BasicString</a> const &amp;str, <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a> sPos, <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a> sCount) const </td></tr>
<tr class="separator:a56fc940d899c833e64475b5f71755afb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2921d49f1ac51dfd90dab87e0c2c2b40"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a2921d49f1ac51dfd90dab87e0c2c2b40">compare</a> (<a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a856da4ed7172faf22930edef2b3de7eb">ConstPointer</a> str) const </td></tr>
<tr class="separator:a2921d49f1ac51dfd90dab87e0c2c2b40"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2696f4fa17d0d5f002dd6997bc3c25c8"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a2696f4fa17d0d5f002dd6997bc3c25c8">compare</a> (<a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a> tPos, <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a> tCount, <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a856da4ed7172faf22930edef2b3de7eb">ConstPointer</a> str) const </td></tr>
<tr class="separator:a2696f4fa17d0d5f002dd6997bc3c25c8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac3fb7402d9661b1d7e0cec34750f3335"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#ac3fb7402d9661b1d7e0cec34750f3335">compare</a> (<a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a> tPos, <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a> tCount, <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a856da4ed7172faf22930edef2b3de7eb">ConstPointer</a> str, <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a> sPos, <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a> sCount) const </td></tr>
<tr class="separator:ac3fb7402d9661b1d7e0cec34750f3335"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a047e6ea23a748f1001aab1c7e913171a"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a047e6ea23a748f1001aab1c7e913171a">startsWith</a> (<a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">BasicString</a> const &amp;str) const </td></tr>
<tr class="separator:a047e6ea23a748f1001aab1c7e913171a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a355a6ae4615470c9d85bc66f5d50d771"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a355a6ae4615470c9d85bc66f5d50d771">startsWith</a> (<a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#ad05eef994fea38c5d1c5e5dda05d4806">ValueType</a> value) const </td></tr>
<tr class="separator:a355a6ae4615470c9d85bc66f5d50d771"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a85922010ff5f614d53b40741d1f7c698"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a85922010ff5f614d53b40741d1f7c698">startsWith</a> (<a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a856da4ed7172faf22930edef2b3de7eb">ConstPointer</a> str) const </td></tr>
<tr class="separator:a85922010ff5f614d53b40741d1f7c698"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a477dbc8a44874807dd41a2d8b91ec14b"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a477dbc8a44874807dd41a2d8b91ec14b">endsWith</a> (<a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">BasicString</a> const &amp;str) const </td></tr>
<tr class="separator:a477dbc8a44874807dd41a2d8b91ec14b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae4a2c09c47c5f5eeecc0104b598d0ad9"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#ae4a2c09c47c5f5eeecc0104b598d0ad9">endsWith</a> (<a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#ad05eef994fea38c5d1c5e5dda05d4806">ValueType</a> value) const </td></tr>
<tr class="separator:ae4a2c09c47c5f5eeecc0104b598d0ad9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6dff34bb24ef023f3471e7dec702c0c7"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a6dff34bb24ef023f3471e7dec702c0c7">endsWith</a> (<a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a856da4ed7172faf22930edef2b3de7eb">ConstPointer</a> str) const </td></tr>
<tr class="separator:a6dff34bb24ef023f3471e7dec702c0c7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afa4db452ca6a1399363b27bf5572ee19"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">BasicString</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#afa4db452ca6a1399363b27bf5572ee19">replace</a> (<a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a> pos, <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a> count, <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">BasicString</a> const &amp;str)</td></tr>
<tr class="separator:afa4db452ca6a1399363b27bf5572ee19"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4dc5a2b396270298682358aa7667ce69"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">BasicString</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a4dc5a2b396270298682358aa7667ce69">replace</a> (<a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a121c89664b8182e62334547e032e25a9">ConstIterator</a> start, <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a121c89664b8182e62334547e032e25a9">ConstIterator</a> <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a40d0473b2964f19ba6f4a98696cc91b2">end</a>, <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">BasicString</a> const &amp;str)</td></tr>
<tr class="separator:a4dc5a2b396270298682358aa7667ce69"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a491ab29b0ac9dc32763870a0570e9748"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">BasicString</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a491ab29b0ac9dc32763870a0570e9748">replace</a> (<a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a> tPos, <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a> tCount, <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">BasicString</a> const &amp;str, <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a> sPos, <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a> sCount)</td></tr>
<tr class="separator:a491ab29b0ac9dc32763870a0570e9748"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a15a6b724fd6dd01df42db1c70404722d"><td class="memTemplParams" colspan="2">template&lt;class InputIterator &gt; </td></tr>
<tr class="memitem:a15a6b724fd6dd01df42db1c70404722d"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">BasicString</a> &amp;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a15a6b724fd6dd01df42db1c70404722d">replace</a> (<a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a121c89664b8182e62334547e032e25a9">ConstIterator</a> tStart, <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a121c89664b8182e62334547e032e25a9">ConstIterator</a> tEnd, <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">BasicString</a> const &amp;str, <a class="el" href="struct_n_r_e_1_1_utility_1_1_input_iterator.php">InputIterator</a> sStart, <a class="el" href="struct_n_r_e_1_1_utility_1_1_input_iterator.php">InputIterator</a> sEnd)</td></tr>
<tr class="separator:a15a6b724fd6dd01df42db1c70404722d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0b638bc7649e00d77e2b35998aff9f1a"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">BasicString</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a0b638bc7649e00d77e2b35998aff9f1a">replace</a> (<a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a> pos, <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a> tCount, <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a856da4ed7172faf22930edef2b3de7eb">ConstPointer</a> str, <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a> sCount)</td></tr>
<tr class="separator:a0b638bc7649e00d77e2b35998aff9f1a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab5630affbf487b95dbaabdbfe2883dd9"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">BasicString</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#ab5630affbf487b95dbaabdbfe2883dd9">replace</a> (<a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a121c89664b8182e62334547e032e25a9">ConstIterator</a> start, <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a121c89664b8182e62334547e032e25a9">ConstIterator</a> <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a40d0473b2964f19ba6f4a98696cc91b2">end</a>, <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a856da4ed7172faf22930edef2b3de7eb">ConstPointer</a> str, <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a> sCount)</td></tr>
<tr class="separator:ab5630affbf487b95dbaabdbfe2883dd9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a997331b5cc17474d958a839ed5978e7c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">BasicString</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a997331b5cc17474d958a839ed5978e7c">replace</a> (<a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a> pos, <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a> count, <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a856da4ed7172faf22930edef2b3de7eb">ConstPointer</a> str)</td></tr>
<tr class="separator:a997331b5cc17474d958a839ed5978e7c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a155934b1e4c6f18366ae7c80a2ea4948"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">BasicString</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a155934b1e4c6f18366ae7c80a2ea4948">replace</a> (<a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a121c89664b8182e62334547e032e25a9">ConstIterator</a> start, <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a121c89664b8182e62334547e032e25a9">ConstIterator</a> <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a40d0473b2964f19ba6f4a98696cc91b2">end</a>, <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a856da4ed7172faf22930edef2b3de7eb">ConstPointer</a> str)</td></tr>
<tr class="separator:a155934b1e4c6f18366ae7c80a2ea4948"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0b1e962947f7f65bd01bfa2b36e43130"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">BasicString</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a0b1e962947f7f65bd01bfa2b36e43130">replace</a> (<a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a> pos, <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a> tCount, <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#ad05eef994fea38c5d1c5e5dda05d4806">ValueType</a> value, <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a> sCount)</td></tr>
<tr class="separator:a0b1e962947f7f65bd01bfa2b36e43130"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9ecdd975c5bca6f4a04f77afab25af76"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">BasicString</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a9ecdd975c5bca6f4a04f77afab25af76">replace</a> (<a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a121c89664b8182e62334547e032e25a9">ConstIterator</a> start, <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a121c89664b8182e62334547e032e25a9">ConstIterator</a> <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a40d0473b2964f19ba6f4a98696cc91b2">end</a>, <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#ad05eef994fea38c5d1c5e5dda05d4806">ValueType</a> value, <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a> sCount)</td></tr>
<tr class="separator:a9ecdd975c5bca6f4a04f77afab25af76"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a209163aab69f8989c05ef621ed3cd8c2"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">BasicString</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a209163aab69f8989c05ef621ed3cd8c2">replace</a> (<a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a121c89664b8182e62334547e032e25a9">ConstIterator</a> start, <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a121c89664b8182e62334547e032e25a9">ConstIterator</a> <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a40d0473b2964f19ba6f4a98696cc91b2">end</a>, std::initializer_list&lt; T &gt; list)</td></tr>
<tr class="separator:a209163aab69f8989c05ef621ed3cd8c2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a30c61a8aa1fbbcf4aeb0d313a952dc81"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">BasicString</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a30c61a8aa1fbbcf4aeb0d313a952dc81">substr</a> (<a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a> pos, <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a> count) const </td></tr>
<tr class="separator:a30c61a8aa1fbbcf4aeb0d313a952dc81"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a75c3ec96296f82b810a58ebbc2d459b5"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a75c3ec96296f82b810a58ebbc2d459b5">copy</a> (<a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a2c5b4cad76f901a56920ba93bb57366c">Pointer</a> str, <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a> pos, <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a> count) const </td></tr>
<tr class="separator:a75c3ec96296f82b810a58ebbc2d459b5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afcf5ec5c3a8b24f2204b53f418301bc3"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#afcf5ec5c3a8b24f2204b53f418301bc3">resize</a> (<a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a> count)</td></tr>
<tr class="separator:afcf5ec5c3a8b24f2204b53f418301bc3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a08a8f4eb8e778db18b36d703436c6e94"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a08a8f4eb8e778db18b36d703436c6e94">resize</a> (<a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a> count, <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#ad05eef994fea38c5d1c5e5dda05d4806">ValueType</a> value)</td></tr>
<tr class="separator:a08a8f4eb8e778db18b36d703436c6e94"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6c5b14da8a367e0cb88268194e721ce0"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a6c5b14da8a367e0cb88268194e721ce0">swap</a> (<a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">BasicString</a> &amp;str)</td></tr>
<tr class="separator:a6c5b14da8a367e0cb88268194e721ce0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afe91c26205f7c7f70d2a3edfb242fb88"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#afe91c26205f7c7f70d2a3edfb242fb88">shrinkToFit</a> ()</td></tr>
<tr class="separator:afe91c26205f7c7f70d2a3edfb242fb88"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8d3bfafe29101468e70432930a876c4e"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8d3bfafe29101468e70432930a876c4e">contains</a> (<a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a856da4ed7172faf22930edef2b3de7eb">ConstPointer</a> str) const </td></tr>
<tr class="separator:a8d3bfafe29101468e70432930a876c4e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae34bc09210c179fad41babad1f94cc01"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#ae34bc09210c179fad41babad1f94cc01">contains</a> (<a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">BasicString</a> const &amp;str) const </td></tr>
<tr class="separator:ae34bc09210c179fad41babad1f94cc01"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6537c13bf4b536d53502aaeb0db0ddec"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a6537c13bf4b536d53502aaeb0db0ddec">find</a> (<a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">BasicString</a> const &amp;str, <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a> pos=0) const </td></tr>
<tr class="separator:a6537c13bf4b536d53502aaeb0db0ddec"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab0163509014e3048061727244b3c4ff8"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#ab0163509014e3048061727244b3c4ff8">find</a> (<a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a> count, <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a856da4ed7172faf22930edef2b3de7eb">ConstPointer</a> str, <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a> pos=0) const </td></tr>
<tr class="separator:ab0163509014e3048061727244b3c4ff8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa1dd3f18a57d98a5a4a37e59c8f463af"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#aa1dd3f18a57d98a5a4a37e59c8f463af">find</a> (<a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a856da4ed7172faf22930edef2b3de7eb">ConstPointer</a> str, <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a> pos=0) const </td></tr>
<tr class="separator:aa1dd3f18a57d98a5a4a37e59c8f463af"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aca9011b413219c835f602ccbaa48d0e5"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#aca9011b413219c835f602ccbaa48d0e5">find</a> (<a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#ad05eef994fea38c5d1c5e5dda05d4806">ValueType</a> value, <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a> pos=0) const </td></tr>
<tr class="separator:aca9011b413219c835f602ccbaa48d0e5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afeef0a6d6a61926e7ddb3c5f84d6fd2c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#afeef0a6d6a61926e7ddb3c5f84d6fd2c">rfind</a> (<a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">BasicString</a> const &amp;str, <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a> pos) const </td></tr>
<tr class="separator:afeef0a6d6a61926e7ddb3c5f84d6fd2c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad4ef1ea6f110297075b4ab8a57d644e6"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#ad4ef1ea6f110297075b4ab8a57d644e6">rfind</a> (<a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a> count, <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a856da4ed7172faf22930edef2b3de7eb">ConstPointer</a> str, <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a> pos) const </td></tr>
<tr class="separator:ad4ef1ea6f110297075b4ab8a57d644e6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a821d8d4faee6368b4b6824c265ba9a81"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a821d8d4faee6368b4b6824c265ba9a81">rfind</a> (<a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a856da4ed7172faf22930edef2b3de7eb">ConstPointer</a> str, <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a> pos) const </td></tr>
<tr class="separator:a821d8d4faee6368b4b6824c265ba9a81"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af6c7794411c58f2a806f48d876e2315f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#af6c7794411c58f2a806f48d876e2315f">rfind</a> (<a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#ad05eef994fea38c5d1c5e5dda05d4806">ValueType</a> value, <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a> pos) const </td></tr>
<tr class="separator:af6c7794411c58f2a806f48d876e2315f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad8c56758496249f0ead3781cacdb700f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#ad8c56758496249f0ead3781cacdb700f">findFirstOf</a> (<a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">BasicString</a> const &amp;str, <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a> pos=0) const </td></tr>
<tr class="separator:ad8c56758496249f0ead3781cacdb700f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4022e456cf3eb7420d730397b6175f66"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a4022e456cf3eb7420d730397b6175f66">findFirstOf</a> (<a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a> count, <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a856da4ed7172faf22930edef2b3de7eb">ConstPointer</a> str, <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a> pos=0) const </td></tr>
<tr class="separator:a4022e456cf3eb7420d730397b6175f66"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a34508fd300a8f8921943e5da95693f17"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a34508fd300a8f8921943e5da95693f17">findFirstOf</a> (<a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a856da4ed7172faf22930edef2b3de7eb">ConstPointer</a> str, <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a> pos=0) const </td></tr>
<tr class="separator:a34508fd300a8f8921943e5da95693f17"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a408015e1252ab5f66026794562a215cc"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a408015e1252ab5f66026794562a215cc">findFirstOf</a> (<a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#ad05eef994fea38c5d1c5e5dda05d4806">ValueType</a> value, <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a> pos=0) const </td></tr>
<tr class="separator:a408015e1252ab5f66026794562a215cc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afc4c9523f10725fc880aca22e5875c3e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#afc4c9523f10725fc880aca22e5875c3e">findFirstNotOf</a> (<a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">BasicString</a> const &amp;str, <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a> pos=0) const </td></tr>
<tr class="separator:afc4c9523f10725fc880aca22e5875c3e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5c9b5140e16894ce901b8649dcadb674"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a5c9b5140e16894ce901b8649dcadb674">findFirstNotOf</a> (<a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a> count, <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a856da4ed7172faf22930edef2b3de7eb">ConstPointer</a> str, <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a> pos=0) const </td></tr>
<tr class="separator:a5c9b5140e16894ce901b8649dcadb674"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac02149b5e985fde901523e7cb39b6a17"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#ac02149b5e985fde901523e7cb39b6a17">findFirstNotOf</a> (<a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a856da4ed7172faf22930edef2b3de7eb">ConstPointer</a> str, <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a> pos=0) const </td></tr>
<tr class="separator:ac02149b5e985fde901523e7cb39b6a17"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af6933bbe0d5850b04475c8eae6d3c8df"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#af6933bbe0d5850b04475c8eae6d3c8df">findFirstNotOf</a> (<a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#ad05eef994fea38c5d1c5e5dda05d4806">ValueType</a> value, <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a> pos=0) const </td></tr>
<tr class="separator:af6933bbe0d5850b04475c8eae6d3c8df"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7914a1113b96ed2044f79cc9dd67c6ef"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a7914a1113b96ed2044f79cc9dd67c6ef">findLastOf</a> (<a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">BasicString</a> const &amp;str, <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a> pos) const </td></tr>
<tr class="separator:a7914a1113b96ed2044f79cc9dd67c6ef"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a20b103c02d96926be28c0048b732dcad"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a20b103c02d96926be28c0048b732dcad">findLastOf</a> (<a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a> count, <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a856da4ed7172faf22930edef2b3de7eb">ConstPointer</a> str, <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a> pos) const </td></tr>
<tr class="separator:a20b103c02d96926be28c0048b732dcad"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8876f8fd769e771efceabfa6424eaa32"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8876f8fd769e771efceabfa6424eaa32">findLastOf</a> (<a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a856da4ed7172faf22930edef2b3de7eb">ConstPointer</a> str, <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a> pos) const </td></tr>
<tr class="separator:a8876f8fd769e771efceabfa6424eaa32"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad24a182d47488f68cbd78fc12f27d5c4"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#ad24a182d47488f68cbd78fc12f27d5c4">findLastOf</a> (<a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#ad05eef994fea38c5d1c5e5dda05d4806">ValueType</a> value, <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a> pos) const </td></tr>
<tr class="separator:ad24a182d47488f68cbd78fc12f27d5c4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4f3de328d3ea0cd1dd02e5e9a109bd71"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a4f3de328d3ea0cd1dd02e5e9a109bd71">findLastNotOf</a> (<a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">BasicString</a> const &amp;str, <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a> pos) const </td></tr>
<tr class="separator:a4f3de328d3ea0cd1dd02e5e9a109bd71"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0e91efa0e5317f2024f248415e56506b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a0e91efa0e5317f2024f248415e56506b">findLastNotOf</a> (<a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a> count, <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a856da4ed7172faf22930edef2b3de7eb">ConstPointer</a> str, <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a> pos) const </td></tr>
<tr class="separator:a0e91efa0e5317f2024f248415e56506b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae95a31382f6080dc9085b3d0178afdaa"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#ae95a31382f6080dc9085b3d0178afdaa">findLastNotOf</a> (<a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a856da4ed7172faf22930edef2b3de7eb">ConstPointer</a> str, <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a> pos) const </td></tr>
<tr class="separator:ae95a31382f6080dc9085b3d0178afdaa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa882e5a46e50ecc0aab0aef51418f677"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#aa882e5a46e50ecc0aab0aef51418f677">findLastNotOf</a> (<a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#ad05eef994fea38c5d1c5e5dda05d4806">ValueType</a> value, <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a> pos) const </td></tr>
<tr class="separator:aa882e5a46e50ecc0aab0aef51418f677"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6c519f820809ae4011fa3d9976a0405f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a1ebb9b56406afd8fd5dae7cb88d4e8fb">Reference</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a6c519f820809ae4011fa3d9976a0405f">operator[]</a> (<a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a> index)</td></tr>
<tr class="separator:a6c519f820809ae4011fa3d9976a0405f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9cae682baa97faca6543f996a8461b3f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#ac5b0fd9d01870016e685c23c456b7f13">ConstReference</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a9cae682baa97faca6543f996a8461b3f">operator[]</a> (<a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a> index) const </td></tr>
<tr class="separator:a9cae682baa97faca6543f996a8461b3f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2a6ad7eedb04b8fea0193e1d80275ba6"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">BasicString</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a2a6ad7eedb04b8fea0193e1d80275ba6">operator=</a> (<a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">BasicString</a> const &amp;str)</td></tr>
<tr class="separator:a2a6ad7eedb04b8fea0193e1d80275ba6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4ac20b4bf7b077d252e0983e1d73ce98"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">BasicString</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a4ac20b4bf7b077d252e0983e1d73ce98">operator=</a> (<a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">BasicString</a> &amp;&amp;str)</td></tr>
<tr class="separator:a4ac20b4bf7b077d252e0983e1d73ce98"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7e34c66f6da636b29a6a354e18a9fc47"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">BasicString</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a7e34c66f6da636b29a6a354e18a9fc47">operator=</a> (<a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a856da4ed7172faf22930edef2b3de7eb">ConstPointer</a> str)</td></tr>
<tr class="separator:a7e34c66f6da636b29a6a354e18a9fc47"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acc49b0461664327ba810848d06f69819"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">BasicString</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#acc49b0461664327ba810848d06f69819">operator=</a> (<a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#ad05eef994fea38c5d1c5e5dda05d4806">ValueType</a> value)</td></tr>
<tr class="separator:acc49b0461664327ba810848d06f69819"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab1da605ba807fd74d9936dc231974ee7"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">BasicString</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#ab1da605ba807fd74d9936dc231974ee7">operator=</a> (std::initializer_list&lt; T &gt; list)</td></tr>
<tr class="separator:ab1da605ba807fd74d9936dc231974ee7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab4db6b5abd9d325e1a343e257b8799a2"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">BasicString</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#ab4db6b5abd9d325e1a343e257b8799a2">operator+=</a> (<a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">BasicString</a> const &amp;str)</td></tr>
<tr class="separator:ab4db6b5abd9d325e1a343e257b8799a2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7be6af650d1f593a3d5f8558b9719797"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">BasicString</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a7be6af650d1f593a3d5f8558b9719797">operator+=</a> (<a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#ad05eef994fea38c5d1c5e5dda05d4806">ValueType</a> value)</td></tr>
<tr class="separator:a7be6af650d1f593a3d5f8558b9719797"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0ff24efca46a367bbbfa8c7956699ebb"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">BasicString</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a0ff24efca46a367bbbfa8c7956699ebb">operator+=</a> (<a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a856da4ed7172faf22930edef2b3de7eb">ConstPointer</a> str)</td></tr>
<tr class="separator:a0ff24efca46a367bbbfa8c7956699ebb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab2167114fbd1b521c9f18bd7515858a3"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">BasicString</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#ab2167114fbd1b521c9f18bd7515858a3">operator+=</a> (std::initializer_list&lt; T &gt; list)</td></tr>
<tr class="separator:ab2167114fbd1b521c9f18bd7515858a3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2cf9e947bb8ed9a5deae560978c131be"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a2cf9e947bb8ed9a5deae560978c131be">operator==</a> (<a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">BasicString</a> const &amp;str) const </td></tr>
<tr class="separator:a2cf9e947bb8ed9a5deae560978c131be"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afaef88927e530b9475ce143779b7f851"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#afaef88927e530b9475ce143779b7f851">operator!=</a> (<a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">BasicString</a> const &amp;str) const </td></tr>
<tr class="separator:afaef88927e530b9475ce143779b7f851"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab06ee127d12a726f58c955365592fe3f"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#ab06ee127d12a726f58c955365592fe3f">operator&lt;</a> (<a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">BasicString</a> const &amp;str) const </td></tr>
<tr class="separator:ab06ee127d12a726f58c955365592fe3f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7d68e5ffd1eac743a66f364e1e064536"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a7d68e5ffd1eac743a66f364e1e064536">operator&lt;=</a> (<a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">BasicString</a> const &amp;str) const </td></tr>
<tr class="separator:a7d68e5ffd1eac743a66f364e1e064536"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa55fab1b4557936778147ed3450c0427"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#aa55fab1b4557936778147ed3450c0427">operator&gt;</a> (<a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">BasicString</a> const &amp;str) const </td></tr>
<tr class="separator:aa55fab1b4557936778147ed3450c0427"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8e216345ab62dd5997b65c21b333339f"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8e216345ab62dd5997b65c21b333339f">operator&gt;=</a> (<a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">BasicString</a> const &amp;str) const </td></tr>
<tr class="separator:a8e216345ab62dd5997b65c21b333339f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3869ddf5653784b3b5734572bbfd3159"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">BasicString</a> const &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a3869ddf5653784b3b5734572bbfd3159">toString</a> () const </td></tr>
<tr class="separator:a3869ddf5653784b3b5734572bbfd3159"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8c42d379cd90d3c8c02a0eeb31fd7482"><td class="memTemplParams" colspan="2">template&lt;class K &gt; </td></tr>
<tr class="memitem:a8c42d379cd90d3c8c02a0eeb31fd7482"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">BasicString</a> &amp;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8c42d379cd90d3c8c02a0eeb31fd7482">operator&lt;&lt;</a> (K const &amp;o)</td></tr>
<tr class="separator:a8c42d379cd90d3c8c02a0eeb31fd7482"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-static-attribs"></a>
Static Public Attributes</h2></td></tr>
<tr class="memitem:a80dc21317d22ab231ed732c8f222e471"><td class="memItemLeft" align="right" valign="top">static constexpr <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a80dc21317d22ab231ed732c8f222e471">NOT_FOUND</a> = -1</td></tr>
<tr class="separator:a80dc21317d22ab231ed732c8f222e471"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><h3>template&lt;class T&gt;<br />
class NRE::Utility::BasicString&lt; T &gt;</h3>

<p>A basic template string, with dynamic size, guarantee to be in contiguous memory. </p>
</div><h2 class="groupheader">Member Typedef Documentation</h2>
<a class="anchor" id="a3bfd5738ba0f33e562e8476a4fc3170a"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">NRE::Utility::BasicString</a>&lt; T &gt;::<a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a3bfd5738ba0f33e562e8476a4fc3170a">const_iterator</a> =  <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a121c89664b8182e62334547e032e25a9">ConstIterator</a></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>STL compatibility </p>

</div>
</div>
<a class="anchor" id="a0be03e2ca9f4c8721a1b1fd7887f0501"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">NRE::Utility::BasicString</a>&lt; T &gt;::<a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a0be03e2ca9f4c8721a1b1fd7887f0501">const_pointer</a> =  <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a856da4ed7172faf22930edef2b3de7eb">ConstPointer</a></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>STL compatibility </p>

</div>
</div>
<a class="anchor" id="abfaac45fb451dc8006a19caf33e7b942"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">NRE::Utility::BasicString</a>&lt; T &gt;::<a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#abfaac45fb451dc8006a19caf33e7b942">const_reference</a> =  <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#ac5b0fd9d01870016e685c23c456b7f13">ConstReference</a></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>STL compatibility </p>

</div>
</div>
<a class="anchor" id="af8884e7c5fd53e304c23c4dbe731537c"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">NRE::Utility::BasicString</a>&lt; T &gt;::<a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#af8884e7c5fd53e304c23c4dbe731537c">const_reverse_iterator</a> =  <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a0e037d86eff7538a37db0bae2ae97db1">ConstReverseIterator</a></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>STL compatibility </p>

</div>
</div>
<a class="anchor" id="a121c89664b8182e62334547e032e25a9"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">NRE::Utility::BasicString</a>&lt; T &gt;::<a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a121c89664b8182e62334547e032e25a9">ConstIterator</a> =  <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a856da4ed7172faf22930edef2b3de7eb">ConstPointer</a></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Immuable random access iterator </p>

</div>
</div>
<a class="anchor" id="a856da4ed7172faf22930edef2b3de7eb"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">NRE::Utility::BasicString</a>&lt; T &gt;::<a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a856da4ed7172faf22930edef2b3de7eb">ConstPointer</a> =  const <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#ad05eef994fea38c5d1c5e5dda05d4806">ValueType</a>*</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>The allocated type const pointer </p>

</div>
</div>
<a class="anchor" id="ac5b0fd9d01870016e685c23c456b7f13"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">NRE::Utility::BasicString</a>&lt; T &gt;::<a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#ac5b0fd9d01870016e685c23c456b7f13">ConstReference</a> =  <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#ad05eef994fea38c5d1c5e5dda05d4806">ValueType</a> const&amp;</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>The allocated type const reference </p>

</div>
</div>
<a class="anchor" id="a0e037d86eff7538a37db0bae2ae97db1"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">NRE::Utility::BasicString</a>&lt; T &gt;::<a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a0e037d86eff7538a37db0bae2ae97db1">ConstReverseIterator</a> =  std::reverse_iterator&lt;<a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a121c89664b8182e62334547e032e25a9">ConstIterator</a>&gt;</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Immuable reverse random access iterator </p>

</div>
</div>
<a class="anchor" id="ac06dc72c93d7c347a776ede452eae018"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">NRE::Utility::BasicString</a>&lt; T &gt;::<a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#ac06dc72c93d7c347a776ede452eae018">difference_type</a> =  <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a4a112de487adde9aec102fb6a5e3d562">DifferenceType</a></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>STL compatibility </p>

</div>
</div>
<a class="anchor" id="a4a112de487adde9aec102fb6a5e3d562"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">NRE::Utility::BasicString</a>&lt; T &gt;::<a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a4a112de487adde9aec102fb6a5e3d562">DifferenceType</a> =  std::ptrdiff_t</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>The object's difference type </p>

</div>
</div>
<a class="anchor" id="a6060a89f1bd8f3b40a53e76157f6f091"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">NRE::Utility::BasicString</a>&lt; T &gt;::<a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a6060a89f1bd8f3b40a53e76157f6f091">Iterator</a> =  <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a2c5b4cad76f901a56920ba93bb57366c">Pointer</a></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Mutable random access iterator </p>

</div>
</div>
<a class="anchor" id="ac96f8d4660963b2997db6fd31bdd871a"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">NRE::Utility::BasicString</a>&lt; T &gt;::<a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#ac96f8d4660963b2997db6fd31bdd871a">iterator</a> =  <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a6060a89f1bd8f3b40a53e76157f6f091">Iterator</a></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>STL compatibility </p>

</div>
</div>
<a class="anchor" id="a2c5b4cad76f901a56920ba93bb57366c"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">NRE::Utility::BasicString</a>&lt; T &gt;::<a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a2c5b4cad76f901a56920ba93bb57366c">Pointer</a> =  <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#ad05eef994fea38c5d1c5e5dda05d4806">ValueType</a>*</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>The allocated type pointer </p>

</div>
</div>
<a class="anchor" id="af7b448ec42d7514c7c2c7c22c93d4cac"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">NRE::Utility::BasicString</a>&lt; T &gt;::<a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#af7b448ec42d7514c7c2c7c22c93d4cac">pointer</a> =  <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a2c5b4cad76f901a56920ba93bb57366c">Pointer</a></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>STL compatibility </p>

</div>
</div>
<a class="anchor" id="a1ebb9b56406afd8fd5dae7cb88d4e8fb"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">NRE::Utility::BasicString</a>&lt; T &gt;::<a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a1ebb9b56406afd8fd5dae7cb88d4e8fb">Reference</a> =  <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#ad05eef994fea38c5d1c5e5dda05d4806">ValueType</a>&amp;</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>The allocated type reference </p>

</div>
</div>
<a class="anchor" id="ababffd6bcfcbd5c7f3a612af2b71453a"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">NRE::Utility::BasicString</a>&lt; T &gt;::<a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#ababffd6bcfcbd5c7f3a612af2b71453a">reference</a> =  <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a1ebb9b56406afd8fd5dae7cb88d4e8fb">Reference</a></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>STL compatibility </p>

</div>
</div>
<a class="anchor" id="a4d9854c18ec08c4b445906f32c063aee"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">NRE::Utility::BasicString</a>&lt; T &gt;::<a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a4d9854c18ec08c4b445906f32c063aee">reverse_iterator</a> =  <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a417f6581726a0ad98b930909606d1212">ReverseIterator</a></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>STL compatibility </p>

</div>
</div>
<a class="anchor" id="a417f6581726a0ad98b930909606d1212"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">NRE::Utility::BasicString</a>&lt; T &gt;::<a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a417f6581726a0ad98b930909606d1212">ReverseIterator</a> =  std::reverse_iterator&lt;<a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a6060a89f1bd8f3b40a53e76157f6f091">Iterator</a>&gt;</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Mutable reverse random access iterator </p>

</div>
</div>
<a class="anchor" id="aa4b85c563aaf6faa1c7f077e69419eb1"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">NRE::Utility::BasicString</a>&lt; T &gt;::<a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#aa4b85c563aaf6faa1c7f077e69419eb1">size_type</a> =  <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>STL compatibility </p>

</div>
</div>
<a class="anchor" id="a8fc26180f68e827e77bce464afa03255"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">NRE::Utility::BasicString</a>&lt; T &gt;::<a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a> =  std::size_t</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>The object's size type </p>

</div>
</div>
<a class="anchor" id="af27e966c6ccb0d67b7e9e1e097557c7d"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">NRE::Utility::BasicString</a>&lt; T &gt;::<a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#af27e966c6ccb0d67b7e9e1e097557c7d">value_type</a> =  <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#ad05eef994fea38c5d1c5e5dda05d4806">ValueType</a></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>STL compatibility </p>

</div>
</div>
<a class="anchor" id="ad05eef994fea38c5d1c5e5dda05d4806"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">NRE::Utility::BasicString</a>&lt; T &gt;::<a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#ad05eef994fea38c5d1c5e5dda05d4806">ValueType</a> =  T</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>The container's allocated type </p>

</div>
</div>
<h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="a9a3f02658ae8cb4aefeaebfd72b92020"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">NRE::Utility::BasicString</a>&lt; T &gt;::<a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">BasicString</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Construct an empty string </p>

</div>
</div>
<a class="anchor" id="a67061d547a418102349a519e29d331f2"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">NRE::Utility::BasicString</a>&lt; T &gt;::<a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">BasicString</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a>&#160;</td>
          <td class="paramname"><em>count</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#ad05eef994fea38c5d1c5e5dda05d4806">ValueType</a>&#160;</td>
          <td class="paramname"><em>value</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Construct a string filled with count copy of value </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">count</td><td>the number of copy to perform, will be the string capacity and length </td></tr>
    <tr><td class="paramname">value</td><td>the value to fill the string with </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a8717d6cd3a66e5418bb21e3f93358046"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">NRE::Utility::BasicString</a>&lt; T &gt;::<a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">BasicString</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a>&#160;</td>
          <td class="paramname"><em>pos</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a>&#160;</td>
          <td class="paramname"><em>count</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">BasicString</a>&lt; T &gt; const &amp;&#160;</td>
          <td class="paramname"><em>str</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Construct a string with count element starting at pos from str </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pos</td><td>the start position </td></tr>
    <tr><td class="paramname">count</td><td>the number of element to take from str </td></tr>
    <tr><td class="paramname">str</td><td>the other string </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a3a0bd1cc9d643306d75b9068d142bb3b"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">NRE::Utility::BasicString</a>&lt; T &gt;::<a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">BasicString</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a>&#160;</td>
          <td class="paramname"><em>count</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a856da4ed7172faf22930edef2b3de7eb">ConstPointer</a>&#160;</td>
          <td class="paramname"><em>str</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Construct a string with count first element from str </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">count</td><td>the number of element to take from str </td></tr>
    <tr><td class="paramname">str</td><td>the other string </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a49009d5cee0d62077866b33192081c40"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">NRE::Utility::BasicString</a>&lt; T &gt;::<a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">BasicString</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a856da4ed7172faf22930edef2b3de7eb">ConstPointer</a>&#160;</td>
          <td class="paramname"><em>str</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Construct a string filled with str element, str need to be terminated by a null character </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">str</td><td>the other string </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a6917a729f68384e412f0702a57da5abd"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
<div class="memtemplate">
template&lt;class InputIterator &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">NRE::Utility::BasicString</a>&lt; T &gt;::<a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">BasicString</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_n_r_e_1_1_utility_1_1_input_iterator.php">InputIterator</a>&#160;</td>
          <td class="paramname"><em>begin</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="struct_n_r_e_1_1_utility_1_1_input_iterator.php">InputIterator</a>&#160;</td>
          <td class="paramname"><em>end</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Construct a string filled with element between 2 iterators </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">begin</td><td>the begin iterator </td></tr>
    <tr><td class="paramname">end</td><td>the end iterator, pointing after the last element </td></tr>
  </table>
  </dd>
</dl>
<dl class="section pre"><dt>Precondition</dt><dd>begin and end are not iterator from the string </dd></dl>

</div>
</div>
<a class="anchor" id="a2c4f5cf3fea12096e51c6e5f55c35629"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">NRE::Utility::BasicString</a>&lt; T &gt;::<a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">BasicString</a> </td>
          <td>(</td>
          <td class="paramtype">std::initializer_list&lt; T &gt;&#160;</td>
          <td class="paramname"><em>init</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Construct a string from an initializer list </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">init</td><td>the list to fill the string with </td></tr>
  </table>
  </dd>
</dl>
<dl class="section pre"><dt>Precondition</dt><dd>list don't contain string reference </dd></dl>

</div>
</div>
<a class="anchor" id="a86b62ef1ead351c7cd9e8868d1bdf4fd"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">NRE::Utility::BasicString</a>&lt; T &gt;::<a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">BasicString</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">BasicString</a>&lt; T &gt; const &amp;&#160;</td>
          <td class="paramname"><em>str</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Copy str into this </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">str</td><td>the string to copy </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="af2e21d830517beb02a3cb3a1310fcd9c"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">NRE::Utility::BasicString</a>&lt; T &gt;::<a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">BasicString</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">BasicString</a>&lt; T &gt; &amp;&amp;&#160;</td>
          <td class="paramname"><em>str</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Move str into this </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">str</td><td>the string to move </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a4767aa21ed166bbcbba3346e20063c81"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">NRE::Utility::BasicString</a>&lt; T &gt;::~<a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">BasicString</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php" title="A basic template string, with dynamic size, guarantee to be in contiguous memory. ...">BasicString</a> Deconstructor </p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a class="anchor" id="ad9f8a1f41b958481360428112a87f49f"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
<div class="memtemplate">
template&lt;class K , typename std::enable_if_t&lt; std::is_base_of&lt; Stringable&lt; K &gt;, K &gt;::value, int &gt;  = 0&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">BasicString</a>&amp; <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">NRE::Utility::BasicString</a>&lt; T &gt;::append </td>
          <td>(</td>
          <td class="paramtype">K const &amp;&#160;</td>
          <td class="paramname"><em>o</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Append the object to string </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">o</td><td>the object to append </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the reference of himself </dd></dl>

</div>
</div>
<a class="anchor" id="a79b367b1b7cc3c95851d67061e6e20f0"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">BasicString</a>&amp; <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">NRE::Utility::BasicString</a>&lt; T &gt;::append </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>value</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Append the object to string </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">value</td><td>the object to append </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the reference of himself </dd></dl>

</div>
</div>
<a class="anchor" id="ac197ac8d8f962607fa132fec013a0e89"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">BasicString</a>&amp; <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">NRE::Utility::BasicString</a>&lt; T &gt;::append </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#ad05eef994fea38c5d1c5e5dda05d4806">ValueType</a>&#160;</td>
          <td class="paramname"><em>value</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Append the object to string </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">value</td><td>the object to append </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the reference of himself </dd></dl>

</div>
</div>
<a class="anchor" id="a604e598bb4291331936837f03daa221f"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">BasicString</a>&amp; <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">NRE::Utility::BasicString</a>&lt; T &gt;::append </td>
          <td>(</td>
          <td class="paramtype">short int&#160;</td>
          <td class="paramname"><em>value</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Append the object to string </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">value</td><td>the object to append </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the reference of himself </dd></dl>

</div>
</div>
<a class="anchor" id="a07fc84ee065d04e1d120c6cf46b3d7bd"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">BasicString</a>&amp; <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">NRE::Utility::BasicString</a>&lt; T &gt;::append </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>value</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Append the object to string </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">value</td><td>the object to append </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the reference of himself </dd></dl>

</div>
</div>
<a class="anchor" id="ac0ff6c2544d0a49345e56e6947239549"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">BasicString</a>&amp; <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">NRE::Utility::BasicString</a>&lt; T &gt;::append </td>
          <td>(</td>
          <td class="paramtype">long int&#160;</td>
          <td class="paramname"><em>value</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Append the object to string </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">value</td><td>the object to append </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the reference of himself </dd></dl>

</div>
</div>
<a class="anchor" id="ae6995eb183265766342d7e1aa7035b9b"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">BasicString</a>&amp; <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">NRE::Utility::BasicString</a>&lt; T &gt;::append </td>
          <td>(</td>
          <td class="paramtype">long long int&#160;</td>
          <td class="paramname"><em>value</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Append the object to string </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">value</td><td>the object to append </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the reference of himself </dd></dl>

</div>
</div>
<a class="anchor" id="a03aaef153454a9dc6eb4ffb2c3ec69c3"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">BasicString</a>&amp; <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">NRE::Utility::BasicString</a>&lt; T &gt;::append </td>
          <td>(</td>
          <td class="paramtype">unsigned short int&#160;</td>
          <td class="paramname"><em>value</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Append the object to string </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">value</td><td>the object to append </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the reference of himself </dd></dl>

</div>
</div>
<a class="anchor" id="aee33d570595e1240c0b4f6326ffa2e30"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">BasicString</a>&amp; <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">NRE::Utility::BasicString</a>&lt; T &gt;::append </td>
          <td>(</td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>value</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Append the object to string </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">value</td><td>the object to append </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the reference of himself </dd></dl>

</div>
</div>
<a class="anchor" id="addefc97d40ebfd0ea3b50f2a42373674"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">BasicString</a>&amp; <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">NRE::Utility::BasicString</a>&lt; T &gt;::append </td>
          <td>(</td>
          <td class="paramtype">unsigned long int&#160;</td>
          <td class="paramname"><em>value</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Append the object to string </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">value</td><td>the object to append </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the reference of himself </dd></dl>

</div>
</div>
<a class="anchor" id="ab682ac9c90b8b6a3d24a0468cb7b7502"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">BasicString</a>&amp; <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">NRE::Utility::BasicString</a>&lt; T &gt;::append </td>
          <td>(</td>
          <td class="paramtype">unsigned long long int&#160;</td>
          <td class="paramname"><em>value</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Append the object to string </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">value</td><td>the object to append </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the reference of himself </dd></dl>

</div>
</div>
<a class="anchor" id="a9dcc848aefd7ea1b49cc02dea5c60f8b"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">BasicString</a>&amp; <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">NRE::Utility::BasicString</a>&lt; T &gt;::append </td>
          <td>(</td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>value</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Append the object to string </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">value</td><td>the object to append </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the reference of himself </dd></dl>

</div>
</div>
<a class="anchor" id="a01113158a0457b8eca3aa01f4a68f19a"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">BasicString</a>&amp; <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">NRE::Utility::BasicString</a>&lt; T &gt;::append </td>
          <td>(</td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>value</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Append the object to string </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">value</td><td>the object to append </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the reference of himself </dd></dl>

</div>
</div>
<a class="anchor" id="aaa24090a62a4744d254b7c4f6711a169"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">BasicString</a>&amp; <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">NRE::Utility::BasicString</a>&lt; T &gt;::append </td>
          <td>(</td>
          <td class="paramtype">long double&#160;</td>
          <td class="paramname"><em>value</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Append the object to string </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">value</td><td>the object to append </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the reference of himself </dd></dl>

</div>
</div>
<a class="anchor" id="a358d0f085ec2faf6794e75237bb32934"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">BasicString</a>&amp; <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">NRE::Utility::BasicString</a>&lt; T &gt;::append </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a>&#160;</td>
          <td class="paramname"><em>count</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#ad05eef994fea38c5d1c5e5dda05d4806">ValueType</a>&#160;</td>
          <td class="paramname"><em>value</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Append count copy of value at the end of the string </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">count</td><td>the number of copy </td></tr>
    <tr><td class="paramname">value</td><td>the value to append </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the reference of himself </dd></dl>

</div>
</div>
<a class="anchor" id="a17bd172896ff73d97cdb0cc612bb7e28"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">BasicString</a>&amp; <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">NRE::Utility::BasicString</a>&lt; T &gt;::append </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">BasicString</a>&lt; T &gt; const &amp;&#160;</td>
          <td class="paramname"><em>str</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Append the given string at the end of the string </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">str</td><td>the string to append </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the reference of himself </dd></dl>

</div>
</div>
<a class="anchor" id="a38d94472706346b83512f3311cf9d045"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">BasicString</a>&amp; <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">NRE::Utility::BasicString</a>&lt; T &gt;::append </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">BasicString</a>&lt; T &gt; const &amp;&#160;</td>
          <td class="paramname"><em>str</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a>&#160;</td>
          <td class="paramname"><em>index</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a>&#160;</td>
          <td class="paramname"><em>count</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Append a part of the given string at the end of the string </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">str</td><td>the string to append </td></tr>
    <tr><td class="paramname">index</td><td>the index of the first character </td></tr>
    <tr><td class="paramname">count</td><td>the number of character to copy </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the reference of himself </dd></dl>

</div>
</div>
<a class="anchor" id="ad77bada498ce8caeb8d39ba9432cb577"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">BasicString</a>&amp; <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">NRE::Utility::BasicString</a>&lt; T &gt;::append </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a856da4ed7172faf22930edef2b3de7eb">ConstPointer</a>&#160;</td>
          <td class="paramname"><em>str</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a>&#160;</td>
          <td class="paramname"><em>count</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Append the count first character of the given string at the end </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">str</td><td>the string to append </td></tr>
    <tr><td class="paramname">count</td><td>the number of character to take </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the reference of himself </dd></dl>

</div>
</div>
<a class="anchor" id="ab779ec0fdb160aa681c84b5a7701e4a5"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">BasicString</a>&amp; <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">NRE::Utility::BasicString</a>&lt; T &gt;::append </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a856da4ed7172faf22930edef2b3de7eb">ConstPointer</a>&#160;</td>
          <td class="paramname"><em>str</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Append the given string at the end, the string need to be NULL terminated </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">str</td><td>the string to append </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the reference of himself </dd></dl>

</div>
</div>
<a class="anchor" id="aefcc5c42ddaddc5a4c63b4af9a54086b"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">BasicString</a>&amp; <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">NRE::Utility::BasicString</a>&lt; T &gt;::append </td>
          <td>(</td>
          <td class="paramtype">std::string const &amp;&#160;</td>
          <td class="paramname"><em>str</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Append the given string at the end </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">str</td><td>the string to append </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the reference of himself </dd></dl>

</div>
</div>
<a class="anchor" id="ac81947765f131eb41fd35c111edb165d"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
<div class="memtemplate">
template&lt;class InputIterator &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">BasicString</a>&amp; <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">NRE::Utility::BasicString</a>&lt; T &gt;::append </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_n_r_e_1_1_utility_1_1_input_iterator.php">InputIterator</a>&#160;</td>
          <td class="paramname"><em>begin</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="struct_n_r_e_1_1_utility_1_1_input_iterator.php">InputIterator</a>&#160;</td>
          <td class="paramname"><em>end</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Append all character between given iterators </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">begin</td><td>the begin iterator </td></tr>
    <tr><td class="paramname">end</td><td>the end iterator </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the reference of himself </dd></dl>

</div>
</div>
<a class="anchor" id="a77dc49f9e04a64d0adce9bb8afe7daa2"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">BasicString</a>&amp; <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">NRE::Utility::BasicString</a>&lt; T &gt;::append </td>
          <td>(</td>
          <td class="paramtype">std::initializer_list&lt; T &gt;&#160;</td>
          <td class="paramname"><em>list</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Append all character in the list </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">list</td><td>the initializer list </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the reference of himself </dd></dl>

</div>
</div>
<a class="anchor" id="ad7a70cf9872e66647cf748c58571f644"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">BasicString</a>&amp; <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">NRE::Utility::BasicString</a>&lt; T &gt;::assign </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a>&#160;</td>
          <td class="paramname"><em>count</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#ad05eef994fea38c5d1c5e5dda05d4806">ValueType</a>&#160;</td>
          <td class="paramname"><em>value</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Assign the string with count copy of value, starting from the beginning </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">count</td><td>the number of copy </td></tr>
    <tr><td class="paramname">value</td><td>the copy to fill the string with </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the reference on himself </dd></dl>

</div>
</div>
<a class="anchor" id="ab04d419d62fa599e802084a8a33dcd54"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">BasicString</a>&amp; <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">NRE::Utility::BasicString</a>&lt; T &gt;::assign </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">BasicString</a>&lt; T &gt; const &amp;&#160;</td>
          <td class="paramname"><em>str</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Replace the string content with the given one </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">str</td><td>the other string </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the reference on himself </dd></dl>

</div>
</div>
<a class="anchor" id="aac630a5ca2f5901be872f544b95a24a1"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">BasicString</a>&amp; <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">NRE::Utility::BasicString</a>&lt; T &gt;::assign </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a>&#160;</td>
          <td class="paramname"><em>pos</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a>&#160;</td>
          <td class="paramname"><em>count</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">BasicString</a>&lt; T &gt; const &amp;&#160;</td>
          <td class="paramname"><em>str</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Replace the string content with count element starting at pos from str </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pos</td><td>the start position </td></tr>
    <tr><td class="paramname">count</td><td>the number of element to take from str </td></tr>
    <tr><td class="paramname">str</td><td>the other string </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the reference on himself </dd></dl>

</div>
</div>
<a class="anchor" id="a12b1678540e15327f9ebcabafd51afc1"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">BasicString</a>&amp; <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">NRE::Utility::BasicString</a>&lt; T &gt;::assign </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">BasicString</a>&lt; T &gt; &amp;&amp;&#160;</td>
          <td class="paramname"><em>str</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Replace the string content with the given one </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">str</td><td>the other string </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the reference on himself </dd></dl>

</div>
</div>
<a class="anchor" id="a42725d8fdb6eb398e60e2a2647284383"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">BasicString</a>&amp; <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">NRE::Utility::BasicString</a>&lt; T &gt;::assign </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a>&#160;</td>
          <td class="paramname"><em>count</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a856da4ed7172faf22930edef2b3de7eb">ConstPointer</a>&#160;</td>
          <td class="paramname"><em>str</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Replace the string content with count first element from str </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">count</td><td>the number of element to take from str </td></tr>
    <tr><td class="paramname">str</td><td>the other string </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the reference on himself </dd></dl>

</div>
</div>
<a class="anchor" id="a3008b3e86cbc2e32e38fd387c32a3a68"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">BasicString</a>&amp; <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">NRE::Utility::BasicString</a>&lt; T &gt;::assign </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a856da4ed7172faf22930edef2b3de7eb">ConstPointer</a>&#160;</td>
          <td class="paramname"><em>str</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Replace the string content filled with str element, str need to be terminated by a null character </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">str</td><td>the other string </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the reference on himself </dd></dl>

</div>
</div>
<a class="anchor" id="a8327bffba598171ede088d3b1fc16ace"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
<div class="memtemplate">
template&lt;class InputIterator &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">BasicString</a>&amp; <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">NRE::Utility::BasicString</a>&lt; T &gt;::assign </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_n_r_e_1_1_utility_1_1_input_iterator.php">InputIterator</a>&#160;</td>
          <td class="paramname"><em>begin</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="struct_n_r_e_1_1_utility_1_1_input_iterator.php">InputIterator</a>&#160;</td>
          <td class="paramname"><em>end</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Replace the string content with element between 2 iterators </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">begin</td><td>the begin iterator </td></tr>
    <tr><td class="paramname">end</td><td>the end iterator, pointing after the last element </td></tr>
  </table>
  </dd>
</dl>
<dl class="section pre"><dt>Precondition</dt><dd>begin and end are not iterator from the string </dd></dl>
<dl class="section return"><dt>Returns</dt><dd>the reference on himself </dd></dl>

</div>
</div>
<a class="anchor" id="a19e77dd1dcd1204e991a95cc62405812"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">BasicString</a>&amp; <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">NRE::Utility::BasicString</a>&lt; T &gt;::assign </td>
          <td>(</td>
          <td class="paramtype">std::initializer_list&lt; T &gt;&#160;</td>
          <td class="paramname"><em>init</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Replace the string content with content from an initializer list </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">init</td><td>the list to fill the string with </td></tr>
  </table>
  </dd>
</dl>
<dl class="section pre"><dt>Precondition</dt><dd>list don't contain string reference </dd></dl>
<dl class="section return"><dt>Returns</dt><dd>the reference on himself </dd></dl>

</div>
</div>
<a class="anchor" id="a87336e1c57b46a945b6edf733b0a926d"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a6060a89f1bd8f3b40a53e76157f6f091">Iterator</a> <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">NRE::Utility::BasicString</a>&lt; T &gt;::begin </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>an iterator on the first element </dd></dl>

</div>
</div>
<a class="anchor" id="a5bdd1cd2ef63b3fd7fd48e0e92e96d07"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a121c89664b8182e62334547e032e25a9">ConstIterator</a> <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">NRE::Utility::BasicString</a>&lt; T &gt;::begin </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>a const iterator on the first element </dd></dl>

</div>
</div>
<a class="anchor" id="a4fbaa10da05afb1e38f01550f089ec3b"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a121c89664b8182e62334547e032e25a9">ConstIterator</a> <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">NRE::Utility::BasicString</a>&lt; T &gt;::cbegin </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>a const iterator on the first element </dd></dl>

</div>
</div>
<a class="anchor" id="aa620f4b3a6a6e8783fdb343b919e0ef6"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a121c89664b8182e62334547e032e25a9">ConstIterator</a> <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">NRE::Utility::BasicString</a>&lt; T &gt;::cend </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>a const iterator on the end of the container </dd></dl>

</div>
</div>
<a class="anchor" id="a6035700c6308e4161bfec5fee48730e0"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">NRE::Utility::BasicString</a>&lt; T &gt;::clear </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Clear all object in the vector, not actually releasing memory </p>

</div>
</div>
<a class="anchor" id="ad41793193f7610c892d24bb650c272db"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">int <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">NRE::Utility::BasicString</a>&lt; T &gt;::compare </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">BasicString</a>&lt; T &gt; const &amp;&#160;</td>
          <td class="paramname"><em>str</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Compare the given string to this, by first comparing size then memory </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">str</td><td>the string to compare with this </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>&lt;0 if this is lesser than str, &gt;0 if this is greater than str, 0 if equals </dd></dl>

</div>
</div>
<a class="anchor" id="aa96321e3ffe8cee0c1042d4511e0ec56"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">int <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">NRE::Utility::BasicString</a>&lt; T &gt;::compare </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a>&#160;</td>
          <td class="paramname"><em>tPos</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a>&#160;</td>
          <td class="paramname"><em>tCount</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">BasicString</a>&lt; T &gt; const &amp;&#160;</td>
          <td class="paramname"><em>str</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Compare the given string to a part of this, by first comparing size then memory </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">tPos</td><td>the first character of this </td></tr>
    <tr><td class="paramname">tCount</td><td>the number of character from this </td></tr>
    <tr><td class="paramname">str</td><td>the string to compare with this </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>&lt;0 if this is lesser than str, &gt;0 if this is greater than str, 0 if equals </dd></dl>

</div>
</div>
<a class="anchor" id="a56fc940d899c833e64475b5f71755afb"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">int <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">NRE::Utility::BasicString</a>&lt; T &gt;::compare </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a>&#160;</td>
          <td class="paramname"><em>tPos</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a>&#160;</td>
          <td class="paramname"><em>tCount</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">BasicString</a>&lt; T &gt; const &amp;&#160;</td>
          <td class="paramname"><em>str</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a>&#160;</td>
          <td class="paramname"><em>sPos</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a>&#160;</td>
          <td class="paramname"><em>sCount</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Compare a part of the given string to a part of this, by first comparing size then memory </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">tPos</td><td>the first character of this </td></tr>
    <tr><td class="paramname">tCount</td><td>the number of character from this </td></tr>
    <tr><td class="paramname">str</td><td>the string to compare with this </td></tr>
    <tr><td class="paramname">sPos</td><td>the first character of str </td></tr>
    <tr><td class="paramname">sCount</td><td>the number of character from str </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>&lt;0 if this is lesser than str, &gt;0 if this is greater than str, 0 if equals </dd></dl>

</div>
</div>
<a class="anchor" id="a2921d49f1ac51dfd90dab87e0c2c2b40"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">int <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">NRE::Utility::BasicString</a>&lt; T &gt;::compare </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a856da4ed7172faf22930edef2b3de7eb">ConstPointer</a>&#160;</td>
          <td class="paramname"><em>str</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Compare the given NULL terminated string to this, by first comparing size then memory </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">str</td><td>the string to compare with this </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>&lt;0 if this is lesser than str, &gt;0 if this is greater than str, 0 if equals </dd></dl>

</div>
</div>
<a class="anchor" id="a2696f4fa17d0d5f002dd6997bc3c25c8"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">int <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">NRE::Utility::BasicString</a>&lt; T &gt;::compare </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a>&#160;</td>
          <td class="paramname"><em>tPos</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a>&#160;</td>
          <td class="paramname"><em>tCount</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a856da4ed7172faf22930edef2b3de7eb">ConstPointer</a>&#160;</td>
          <td class="paramname"><em>str</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Compare the given NULL terminated string to a part of this, by first comparing size then memory </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">tPos</td><td>the first character of this </td></tr>
    <tr><td class="paramname">tCount</td><td>the number of character from this </td></tr>
    <tr><td class="paramname">str</td><td>the string to compare with this </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>&lt;0 if this is lesser than str, &gt;0 if this is greater than str, 0 if equals </dd></dl>

</div>
</div>
<a class="anchor" id="ac3fb7402d9661b1d7e0cec34750f3335"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">int <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">NRE::Utility::BasicString</a>&lt; T &gt;::compare </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a>&#160;</td>
          <td class="paramname"><em>tPos</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a>&#160;</td>
          <td class="paramname"><em>tCount</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a856da4ed7172faf22930edef2b3de7eb">ConstPointer</a>&#160;</td>
          <td class="paramname"><em>str</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a>&#160;</td>
          <td class="paramname"><em>sPos</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a>&#160;</td>
          <td class="paramname"><em>sCount</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Compare a part of the given NULL terminated string to a part of this, by first comparing size then memory </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">tPos</td><td>the first character of this </td></tr>
    <tr><td class="paramname">tCount</td><td>the number of character from this </td></tr>
    <tr><td class="paramname">str</td><td>the string to compare with this </td></tr>
    <tr><td class="paramname">sPos</td><td>the first character of str </td></tr>
    <tr><td class="paramname">sCount</td><td>the number of character from str </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>&lt;0 if this is lesser than str, &gt;0 if this is greater than str, 0 if equals </dd></dl>

</div>
</div>
<a class="anchor" id="a8d3bfafe29101468e70432930a876c4e"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">bool <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">NRE::Utility::BasicString</a>&lt; T &gt;::contains </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a856da4ed7172faf22930edef2b3de7eb">ConstPointer</a>&#160;</td>
          <td class="paramname"><em>str</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Test if the string contains the given string </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">str</td><td>the string to test </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>if the string is contained </dd></dl>

</div>
</div>
<a class="anchor" id="ae34bc09210c179fad41babad1f94cc01"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">bool <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">NRE::Utility::BasicString</a>&lt; T &gt;::contains </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">BasicString</a>&lt; T &gt; const &amp;&#160;</td>
          <td class="paramname"><em>str</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Test if the string contains the given string </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">str</td><td>the string to test </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>if the string is contained </dd></dl>

</div>
</div>
<a class="anchor" id="a75c3ec96296f82b810a58ebbc2d459b5"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a> <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">NRE::Utility::BasicString</a>&lt; T &gt;::copy </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a2c5b4cad76f901a56920ba93bb57366c">Pointer</a>&#160;</td>
          <td class="paramname"><em>str</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a>&#160;</td>
          <td class="paramname"><em>pos</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a>&#160;</td>
          <td class="paramname"><em>count</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Copy the given range into the given string </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">str</td><td>the string to copy in </td></tr>
    <tr><td class="paramname">pos</td><td>the start index </td></tr>
    <tr><td class="paramname">count</td><td>the number of character to copy </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the number of copied character </dd></dl>

</div>
</div>
<a class="anchor" id="a50d7fda113a402d7e7b18669aa7ea227"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a0e037d86eff7538a37db0bae2ae97db1">ConstReverseIterator</a> <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">NRE::Utility::BasicString</a>&lt; T &gt;::crbegin </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>a const reverse iterator on the first element </dd></dl>

</div>
</div>
<a class="anchor" id="ae487050caf2434abc9b16bfab7241eba"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a0e037d86eff7538a37db0bae2ae97db1">ConstReverseIterator</a> <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">NRE::Utility::BasicString</a>&lt; T &gt;::crend </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>a const reverse iterator on the end of the container </dd></dl>

</div>
</div>
<a class="anchor" id="a40d0473b2964f19ba6f4a98696cc91b2"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a6060a89f1bd8f3b40a53e76157f6f091">Iterator</a> <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">NRE::Utility::BasicString</a>&lt; T &gt;::end </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>an iterator on the end of the container </dd></dl>

</div>
</div>
<a class="anchor" id="add891802026c21f0982402995b25fe43"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a121c89664b8182e62334547e032e25a9">ConstIterator</a> <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">NRE::Utility::BasicString</a>&lt; T &gt;::end </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>a const iterator on the end of the container </dd></dl>

</div>
</div>
<a class="anchor" id="a477dbc8a44874807dd41a2d8b91ec14b"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">bool <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">NRE::Utility::BasicString</a>&lt; T &gt;::endsWith </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">BasicString</a>&lt; T &gt; const &amp;&#160;</td>
          <td class="paramname"><em>str</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Check if the string ends with the given one </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">str</td><td>the suffix to check </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>if the string ends with the suffix </dd></dl>

</div>
</div>
<a class="anchor" id="ae4a2c09c47c5f5eeecc0104b598d0ad9"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">bool <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">NRE::Utility::BasicString</a>&lt; T &gt;::endsWith </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#ad05eef994fea38c5d1c5e5dda05d4806">ValueType</a>&#160;</td>
          <td class="paramname"><em>value</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Check if the string ends with the given character </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">value</td><td>the suffix to check </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>if the string ends with the suffix </dd></dl>

</div>
</div>
<a class="anchor" id="a6dff34bb24ef023f3471e7dec702c0c7"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">bool <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">NRE::Utility::BasicString</a>&lt; T &gt;::endsWith </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a856da4ed7172faf22930edef2b3de7eb">ConstPointer</a>&#160;</td>
          <td class="paramname"><em>str</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Check if the string ends with the given one, need to be NULL terminated </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">str</td><td>the suffix to check </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>if the string ends with the suffix </dd></dl>

</div>
</div>
<a class="anchor" id="aa6027e93950c7b8edfdef44440f13105"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">BasicString</a>&amp; <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">NRE::Utility::BasicString</a>&lt; T &gt;::erase </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a>&#160;</td>
          <td class="paramname"><em>index</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a>&#160;</td>
          <td class="paramname"><em>count</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Erase count character starting by index </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">index</td><td>the start index </td></tr>
    <tr><td class="paramname">count</td><td>the number of character to erase </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the reference on himself </dd></dl>

</div>
</div>
<a class="anchor" id="a1bf88394c90dcdead82d565616b57c1f"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a6060a89f1bd8f3b40a53e76157f6f091">Iterator</a> <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">NRE::Utility::BasicString</a>&lt; T &gt;::erase </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a121c89664b8182e62334547e032e25a9">ConstIterator</a>&#160;</td>
          <td class="paramname"><em>position</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Erase the character at the given position </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">position</td><td>the position to erase </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the iterator after the erased value </dd></dl>

</div>
</div>
<a class="anchor" id="aefa48bb2f2b634ef7661880d2757d3e4"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a6060a89f1bd8f3b40a53e76157f6f091">Iterator</a> <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">NRE::Utility::BasicString</a>&lt; T &gt;::erase </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a121c89664b8182e62334547e032e25a9">ConstIterator</a>&#160;</td>
          <td class="paramname"><em>begin</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a121c89664b8182e62334547e032e25a9">ConstIterator</a>&#160;</td>
          <td class="paramname"><em>end</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Erase character between 2 iterators </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">begin</td><td>the start position </td></tr>
    <tr><td class="paramname">end</td><td>the end position </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the iterator after the erased value </dd></dl>

</div>
</div>
<a class="anchor" id="a6537c13bf4b536d53502aaeb0db0ddec"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a> <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">NRE::Utility::BasicString</a>&lt; T &gt;::find </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">BasicString</a>&lt; T &gt; const &amp;&#160;</td>
          <td class="paramname"><em>str</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a>&#160;</td>
          <td class="paramname"><em>pos</em> = <code>0</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Search the first occurrence of the given string, start the search at the given position </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">str</td><td>the string to search </td></tr>
    <tr><td class="paramname">pos</td><td>the search start </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the position of the found string, NOT_FOUND if no occurrence found </dd></dl>

</div>
</div>
<a class="anchor" id="ab0163509014e3048061727244b3c4ff8"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a> <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">NRE::Utility::BasicString</a>&lt; T &gt;::find </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a>&#160;</td>
          <td class="paramname"><em>count</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a856da4ed7172faf22930edef2b3de7eb">ConstPointer</a>&#160;</td>
          <td class="paramname"><em>str</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a>&#160;</td>
          <td class="paramname"><em>pos</em> = <code>0</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Search the first occurrence of the given string part, start the search at the given position </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">count</td><td>the max range in the given string </td></tr>
    <tr><td class="paramname">str</td><td>the string to search </td></tr>
    <tr><td class="paramname">pos</td><td>the search start </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the position of the found string, NOT_FOUND if no occurrence found </dd></dl>

</div>
</div>
<a class="anchor" id="aa1dd3f18a57d98a5a4a37e59c8f463af"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a> <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">NRE::Utility::BasicString</a>&lt; T &gt;::find </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a856da4ed7172faf22930edef2b3de7eb">ConstPointer</a>&#160;</td>
          <td class="paramname"><em>str</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a>&#160;</td>
          <td class="paramname"><em>pos</em> = <code>0</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Search the first occurrence of the given string, need to be NULL terminated, start the search at the given position </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">str</td><td>the string to search </td></tr>
    <tr><td class="paramname">pos</td><td>the search start </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the position of the found string, NOT_FOUND if no occurrence found </dd></dl>

</div>
</div>
<a class="anchor" id="aca9011b413219c835f602ccbaa48d0e5"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a> <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">NRE::Utility::BasicString</a>&lt; T &gt;::find </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#ad05eef994fea38c5d1c5e5dda05d4806">ValueType</a>&#160;</td>
          <td class="paramname"><em>value</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a>&#160;</td>
          <td class="paramname"><em>pos</em> = <code>0</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Search the first occurrence of the given character, start the search at the given position </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">value</td><td>the character to search </td></tr>
    <tr><td class="paramname">pos</td><td>the search start </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the position of the found character, NOT_FOUND if no occurrence found </dd></dl>

</div>
</div>
<a class="anchor" id="afc4c9523f10725fc880aca22e5875c3e"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a> <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">NRE::Utility::BasicString</a>&lt; T &gt;::findFirstNotOf </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">BasicString</a>&lt; T &gt; const &amp;&#160;</td>
          <td class="paramname"><em>str</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a>&#160;</td>
          <td class="paramname"><em>pos</em> = <code>0</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Search the first character that match no character in the given string, start the search at the given position </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">str</td><td>the string to search </td></tr>
    <tr><td class="paramname">pos</td><td>the search start </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the position of the found string, NOT_FOUND if no occurrence found </dd></dl>

</div>
</div>
<a class="anchor" id="a5c9b5140e16894ce901b8649dcadb674"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a> <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">NRE::Utility::BasicString</a>&lt; T &gt;::findFirstNotOf </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a>&#160;</td>
          <td class="paramname"><em>count</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a856da4ed7172faf22930edef2b3de7eb">ConstPointer</a>&#160;</td>
          <td class="paramname"><em>str</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a>&#160;</td>
          <td class="paramname"><em>pos</em> = <code>0</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Search the first character that match no character in the given string part, start the search at the given position </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">count</td><td>the max range in the given string </td></tr>
    <tr><td class="paramname">str</td><td>the string to search </td></tr>
    <tr><td class="paramname">pos</td><td>the search start </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the position of the found string, NOT_FOUND if no occurrence found </dd></dl>

</div>
</div>
<a class="anchor" id="ac02149b5e985fde901523e7cb39b6a17"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a> <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">NRE::Utility::BasicString</a>&lt; T &gt;::findFirstNotOf </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a856da4ed7172faf22930edef2b3de7eb">ConstPointer</a>&#160;</td>
          <td class="paramname"><em>str</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a>&#160;</td>
          <td class="paramname"><em>pos</em> = <code>0</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Search the first character that match no character in the given string, need to be NULL terminated, start the search at the given position </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">str</td><td>the string to search </td></tr>
    <tr><td class="paramname">pos</td><td>the search start </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the position of the found string, NOT_FOUND if no occurrence found </dd></dl>

</div>
</div>
<a class="anchor" id="af6933bbe0d5850b04475c8eae6d3c8df"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a> <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">NRE::Utility::BasicString</a>&lt; T &gt;::findFirstNotOf </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#ad05eef994fea38c5d1c5e5dda05d4806">ValueType</a>&#160;</td>
          <td class="paramname"><em>value</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a>&#160;</td>
          <td class="paramname"><em>pos</em> = <code>0</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Search the first character that doesn't match with the given character, start the search at the given position </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">value</td><td>the character to search </td></tr>
    <tr><td class="paramname">pos</td><td>the search start </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the position of the found character, NOT_FOUND if no occurrence found </dd></dl>

</div>
</div>
<a class="anchor" id="ad8c56758496249f0ead3781cacdb700f"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a> <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">NRE::Utility::BasicString</a>&lt; T &gt;::findFirstOf </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">BasicString</a>&lt; T &gt; const &amp;&#160;</td>
          <td class="paramname"><em>str</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a>&#160;</td>
          <td class="paramname"><em>pos</em> = <code>0</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Search the first character that match a character in the given string, start the search at the given position </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">str</td><td>the string to search </td></tr>
    <tr><td class="paramname">pos</td><td>the search start </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the position of the found string, NOT_FOUND if no occurrence found </dd></dl>

</div>
</div>
<a class="anchor" id="a4022e456cf3eb7420d730397b6175f66"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a> <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">NRE::Utility::BasicString</a>&lt; T &gt;::findFirstOf </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a>&#160;</td>
          <td class="paramname"><em>count</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a856da4ed7172faf22930edef2b3de7eb">ConstPointer</a>&#160;</td>
          <td class="paramname"><em>str</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a>&#160;</td>
          <td class="paramname"><em>pos</em> = <code>0</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Search the first character that match a character in the given string part, start the search at the given position </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">count</td><td>the max range in the given string </td></tr>
    <tr><td class="paramname">str</td><td>the string to search </td></tr>
    <tr><td class="paramname">pos</td><td>the search start </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the position of the found string, NOT_FOUND if no occurrence found </dd></dl>

</div>
</div>
<a class="anchor" id="a34508fd300a8f8921943e5da95693f17"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a> <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">NRE::Utility::BasicString</a>&lt; T &gt;::findFirstOf </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a856da4ed7172faf22930edef2b3de7eb">ConstPointer</a>&#160;</td>
          <td class="paramname"><em>str</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a>&#160;</td>
          <td class="paramname"><em>pos</em> = <code>0</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Search the first character that match a character in the given string, need to be NULL terminated, start the search at the given position </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">str</td><td>the string to search </td></tr>
    <tr><td class="paramname">pos</td><td>the search start </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the position of the found string, NOT_FOUND if no occurrence found </dd></dl>

</div>
</div>
<a class="anchor" id="a408015e1252ab5f66026794562a215cc"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a> <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">NRE::Utility::BasicString</a>&lt; T &gt;::findFirstOf </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#ad05eef994fea38c5d1c5e5dda05d4806">ValueType</a>&#160;</td>
          <td class="paramname"><em>value</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a>&#160;</td>
          <td class="paramname"><em>pos</em> = <code>0</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Search the first character that match the given character, start the search at the given position </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">value</td><td>the character to search </td></tr>
    <tr><td class="paramname">pos</td><td>the search start </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the position of the found character, NOT_FOUND if no occurrence found </dd></dl>

</div>
</div>
<a class="anchor" id="a4f3de328d3ea0cd1dd02e5e9a109bd71"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a> <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">NRE::Utility::BasicString</a>&lt; T &gt;::findLastNotOf </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">BasicString</a>&lt; T &gt; const &amp;&#160;</td>
          <td class="paramname"><em>str</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a>&#160;</td>
          <td class="paramname"><em>pos</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Search the first character that match no character in the given string, start the search at the given position </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">str</td><td>the string to search </td></tr>
    <tr><td class="paramname">pos</td><td>the search start </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the position of the found string, NOT_FOUND if no occurrence found </dd></dl>

</div>
</div>
<a class="anchor" id="a0e91efa0e5317f2024f248415e56506b"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a> <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">NRE::Utility::BasicString</a>&lt; T &gt;::findLastNotOf </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a>&#160;</td>
          <td class="paramname"><em>count</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a856da4ed7172faf22930edef2b3de7eb">ConstPointer</a>&#160;</td>
          <td class="paramname"><em>str</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a>&#160;</td>
          <td class="paramname"><em>pos</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Search the first character that match no character in the given string part, start the search at the given position </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">count</td><td>the max range in the given string </td></tr>
    <tr><td class="paramname">str</td><td>the string to search </td></tr>
    <tr><td class="paramname">pos</td><td>the search start </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the position of the found string, NOT_FOUND if no occurrence found </dd></dl>

</div>
</div>
<a class="anchor" id="ae95a31382f6080dc9085b3d0178afdaa"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a> <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">NRE::Utility::BasicString</a>&lt; T &gt;::findLastNotOf </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a856da4ed7172faf22930edef2b3de7eb">ConstPointer</a>&#160;</td>
          <td class="paramname"><em>str</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a>&#160;</td>
          <td class="paramname"><em>pos</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Search the first character that match no character in the given string, need to be NULL terminated, start the search at the given position </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">str</td><td>the string to search </td></tr>
    <tr><td class="paramname">pos</td><td>the search start </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the position of the found string, NOT_FOUND if no occurrence found </dd></dl>

</div>
</div>
<a class="anchor" id="aa882e5a46e50ecc0aab0aef51418f677"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a> <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">NRE::Utility::BasicString</a>&lt; T &gt;::findLastNotOf </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#ad05eef994fea38c5d1c5e5dda05d4806">ValueType</a>&#160;</td>
          <td class="paramname"><em>value</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a>&#160;</td>
          <td class="paramname"><em>pos</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Search the first character that doesn't match with the given character, start the search at the given position </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">value</td><td>the character to search </td></tr>
    <tr><td class="paramname">pos</td><td>the search start </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the position of the found character, NOT_FOUND if no occurrence found </dd></dl>

</div>
</div>
<a class="anchor" id="a7914a1113b96ed2044f79cc9dd67c6ef"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a> <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">NRE::Utility::BasicString</a>&lt; T &gt;::findLastOf </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">BasicString</a>&lt; T &gt; const &amp;&#160;</td>
          <td class="paramname"><em>str</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a>&#160;</td>
          <td class="paramname"><em>pos</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Search the first character that match a character in the given string, start the search at the given position </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">str</td><td>the string to search </td></tr>
    <tr><td class="paramname">pos</td><td>the search start </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the position of the found string, NOT_FOUND if no occurrence found </dd></dl>

</div>
</div>
<a class="anchor" id="a20b103c02d96926be28c0048b732dcad"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a> <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">NRE::Utility::BasicString</a>&lt; T &gt;::findLastOf </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a>&#160;</td>
          <td class="paramname"><em>count</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a856da4ed7172faf22930edef2b3de7eb">ConstPointer</a>&#160;</td>
          <td class="paramname"><em>str</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a>&#160;</td>
          <td class="paramname"><em>pos</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Search the first character that match a character in the given string part, start the search at the given position </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">count</td><td>the max range in the given string </td></tr>
    <tr><td class="paramname">str</td><td>the string to search </td></tr>
    <tr><td class="paramname">pos</td><td>the search start </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the position of the found string, NOT_FOUND if no occurrence found </dd></dl>

</div>
</div>
<a class="anchor" id="a8876f8fd769e771efceabfa6424eaa32"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a> <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">NRE::Utility::BasicString</a>&lt; T &gt;::findLastOf </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a856da4ed7172faf22930edef2b3de7eb">ConstPointer</a>&#160;</td>
          <td class="paramname"><em>str</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a>&#160;</td>
          <td class="paramname"><em>pos</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Search the first character that match a character in the given string, need to be NULL terminated, start the search at the given position </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">str</td><td>the string to search </td></tr>
    <tr><td class="paramname">pos</td><td>the search start </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the position of the found string, NOT_FOUND if no occurrence found </dd></dl>

</div>
</div>
<a class="anchor" id="ad24a182d47488f68cbd78fc12f27d5c4"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a> <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">NRE::Utility::BasicString</a>&lt; T &gt;::findLastOf </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#ad05eef994fea38c5d1c5e5dda05d4806">ValueType</a>&#160;</td>
          <td class="paramname"><em>value</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a>&#160;</td>
          <td class="paramname"><em>pos</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Search the first character that match the given character, start the search at the given position </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">value</td><td>the character to search </td></tr>
    <tr><td class="paramname">pos</td><td>the search start </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the position of the found character, NOT_FOUND if no occurrence found </dd></dl>

</div>
</div>
<a class="anchor" id="ae2d2828bb7916521c07326818b4916fe"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a1ebb9b56406afd8fd5dae7cb88d4e8fb">Reference</a> <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">NRE::Utility::BasicString</a>&lt; T &gt;::get </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a>&#160;</td>
          <td class="paramname"><em>index</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Access a particular element with bound checking </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">index</td><td>the element index </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the corresponding element </dd></dl>

</div>
</div>
<a class="anchor" id="a3bcc61953c6f5cf55b3634256a101934"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#ac5b0fd9d01870016e685c23c456b7f13">ConstReference</a> <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">NRE::Utility::BasicString</a>&lt; T &gt;::get </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a>&#160;</td>
          <td class="paramname"><em>index</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Access a particular element with bound checking </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">index</td><td>the element index </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the corresponding element </dd></dl>

</div>
</div>
<a class="anchor" id="a5b45a5b50afd3ad39e09b95c4f1330ec"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a> <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">NRE::Utility::BasicString</a>&lt; T &gt;::getCapacity </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>the string capacity </dd></dl>

</div>
</div>
<a class="anchor" id="ab546b026ad9dfb4b6a189df9f4f5c088"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a856da4ed7172faf22930edef2b3de7eb">ConstPointer</a> <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">NRE::Utility::BasicString</a>&lt; T &gt;::getCData </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>the internal data array </dd></dl>

</div>
</div>
<a class="anchor" id="ab82653ee746eb017750672e68ab57966"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a856da4ed7172faf22930edef2b3de7eb">ConstPointer</a> <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">NRE::Utility::BasicString</a>&lt; T &gt;::getData </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>the internal data array </dd></dl>

</div>
</div>
<a class="anchor" id="a0049a28371f2d7c99e76355524d686aa"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a1ebb9b56406afd8fd5dae7cb88d4e8fb">Reference</a> <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">NRE::Utility::BasicString</a>&lt; T &gt;::getFront </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>the first element </dd></dl>

</div>
</div>
<a class="anchor" id="a7a81213ea7b8dbe06bb7d19b8b00cd0b"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#ac5b0fd9d01870016e685c23c456b7f13">ConstReference</a> <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">NRE::Utility::BasicString</a>&lt; T &gt;::getFront </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>the first element </dd></dl>

</div>
</div>
<a class="anchor" id="af0527b734b72a1b70565eb73a55cb1db"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a1ebb9b56406afd8fd5dae7cb88d4e8fb">Reference</a> <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">NRE::Utility::BasicString</a>&lt; T &gt;::getLast </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>the last element </dd></dl>

</div>
</div>
<a class="anchor" id="a95355100d0742d24cca22d9f0541e595"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#ac5b0fd9d01870016e685c23c456b7f13">ConstReference</a> <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">NRE::Utility::BasicString</a>&lt; T &gt;::getLast </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>the last element </dd></dl>

</div>
</div>
<a class="anchor" id="a66ec3113b5f283b77cc33f0e8a74924e"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a> <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">NRE::Utility::BasicString</a>&lt; T &gt;::getLength </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>the string effective size </dd></dl>

</div>
</div>
<a class="anchor" id="a4ef0431f31869ef81f7e33dec6c46b51"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">constexpr <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a> <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">NRE::Utility::BasicString</a>&lt; T &gt;::getMaxSize </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>the maximum array size </dd></dl>

</div>
</div>
<a class="anchor" id="acf451864206f81c8b321ff26406f1b00"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a> <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">NRE::Utility::BasicString</a>&lt; T &gt;::getSize </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>the string effective size </dd></dl>

</div>
</div>
<a class="anchor" id="a6ad1d5f470fc6e7e5fff7e0f747ce439"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">BasicString</a>&amp; <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">NRE::Utility::BasicString</a>&lt; T &gt;::insert </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a>&#160;</td>
          <td class="paramname"><em>start</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a>&#160;</td>
          <td class="paramname"><em>count</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#ad05eef994fea38c5d1c5e5dda05d4806">ValueType</a>&#160;</td>
          <td class="paramname"><em>value</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Insert count copy of value at the specified position </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">start</td><td>the position to insert values </td></tr>
    <tr><td class="paramname">count</td><td>the number of copy </td></tr>
    <tr><td class="paramname">value</td><td>the value to insert </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the reference on himself </dd></dl>

</div>
</div>
<a class="anchor" id="a455d3ffdcf305888574870fb5877c1d8"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">BasicString</a>&amp; <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">NRE::Utility::BasicString</a>&lt; T &gt;::insert </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a>&#160;</td>
          <td class="paramname"><em>start</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a856da4ed7172faf22930edef2b3de7eb">ConstPointer</a>&#160;</td>
          <td class="paramname"><em>str</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Insert str elements, str need to be NULL terminated </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">start</td><td>the position to insert values </td></tr>
    <tr><td class="paramname">str</td><td>the other string </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the reference on himself </dd></dl>

</div>
</div>
<a class="anchor" id="af3e76b176aa06bc2024f9d5e622dbcd3"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">BasicString</a>&amp; <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">NRE::Utility::BasicString</a>&lt; T &gt;::insert </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a>&#160;</td>
          <td class="paramname"><em>start</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a>&#160;</td>
          <td class="paramname"><em>count</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a856da4ed7172faf22930edef2b3de7eb">ConstPointer</a>&#160;</td>
          <td class="paramname"><em>str</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Insert str elements </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">start</td><td>the position to insert values </td></tr>
    <tr><td class="paramname">count</td><td>the number of element to take from str </td></tr>
    <tr><td class="paramname">str</td><td>the other string </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the reference on himself </dd></dl>

</div>
</div>
<a class="anchor" id="aada8c59818b1b0570c1f4252e1a89232"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">BasicString</a>&amp; <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">NRE::Utility::BasicString</a>&lt; T &gt;::insert </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a>&#160;</td>
          <td class="paramname"><em>start</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">BasicString</a>&lt; T &gt; const &amp;&#160;</td>
          <td class="paramname"><em>str</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Insert a string at the specified position </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">start</td><td>the position to insert values </td></tr>
    <tr><td class="paramname">str</td><td>the string to insert </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the reference on himself </dd></dl>

</div>
</div>
<a class="anchor" id="a170ca6da9abf425d5a49e92967ada82f"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">BasicString</a>&amp; <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">NRE::Utility::BasicString</a>&lt; T &gt;::insert </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a>&#160;</td>
          <td class="paramname"><em>start</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">BasicString</a>&lt; T &gt; const &amp;&#160;</td>
          <td class="paramname"><em>str</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a>&#160;</td>
          <td class="paramname"><em>index</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a>&#160;</td>
          <td class="paramname"><em>count</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Insert a string part at the specified position </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">start</td><td>the position to insert values </td></tr>
    <tr><td class="paramname">str</td><td>the string to insert </td></tr>
    <tr><td class="paramname">index</td><td>the start index in the string </td></tr>
    <tr><td class="paramname">count</td><td>the number of character to take from the string </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the reference on himself </dd></dl>

</div>
</div>
<a class="anchor" id="a3c28a97e0ee391825e9ea938c52d2b3d"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a6060a89f1bd8f3b40a53e76157f6f091">Iterator</a> <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">NRE::Utility::BasicString</a>&lt; T &gt;::insert </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a121c89664b8182e62334547e032e25a9">ConstIterator</a>&#160;</td>
          <td class="paramname"><em>start</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#ad05eef994fea38c5d1c5e5dda05d4806">ValueType</a>&#160;</td>
          <td class="paramname"><em>value</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Insert the character at the specified position </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">start</td><td>the position to insert values </td></tr>
    <tr><td class="paramname">value</td><td>the value to insert </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the iterator on the first inserted value </dd></dl>

</div>
</div>
<a class="anchor" id="a8495d07649a412c6a96bcdb44c1ca681"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a6060a89f1bd8f3b40a53e76157f6f091">Iterator</a> <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">NRE::Utility::BasicString</a>&lt; T &gt;::insert </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a121c89664b8182e62334547e032e25a9">ConstIterator</a>&#160;</td>
          <td class="paramname"><em>start</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a>&#160;</td>
          <td class="paramname"><em>count</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#ad05eef994fea38c5d1c5e5dda05d4806">ValueType</a>&#160;</td>
          <td class="paramname"><em>value</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Insert count copy of the character at the specified position </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">start</td><td>the position to insert values </td></tr>
    <tr><td class="paramname">count</td><td>the number of copy </td></tr>
    <tr><td class="paramname">value</td><td>the value to insert </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the iterator on the first inserted value </dd></dl>

</div>
</div>
<a class="anchor" id="a13757cedd43c3f03ab141f9f77a131c9"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
<div class="memtemplate">
template&lt;class InputIterator &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a6060a89f1bd8f3b40a53e76157f6f091">Iterator</a> <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">NRE::Utility::BasicString</a>&lt; T &gt;::insert </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a121c89664b8182e62334547e032e25a9">ConstIterator</a>&#160;</td>
          <td class="paramname"><em>start</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="struct_n_r_e_1_1_utility_1_1_input_iterator.php">InputIterator</a>&#160;</td>
          <td class="paramname"><em>begin</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="struct_n_r_e_1_1_utility_1_1_input_iterator.php">InputIterator</a>&#160;</td>
          <td class="paramname"><em>end</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Insert a copy of element between begin and end at the specified position </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">start</td><td>the position to insert values </td></tr>
    <tr><td class="paramname">begin</td><td>the begin iterator </td></tr>
    <tr><td class="paramname">end</td><td>the end iterator, pointing after the last element </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the iterator on the first inserted value </dd></dl>
<dl class="section pre"><dt>Precondition</dt><dd>begin and end are not iterator from the string </dd></dl>

</div>
</div>
<a class="anchor" id="ae0898bf3a5f72eb5bf6ca3e59de50957"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a6060a89f1bd8f3b40a53e76157f6f091">Iterator</a> <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">NRE::Utility::BasicString</a>&lt; T &gt;::insert </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a121c89664b8182e62334547e032e25a9">ConstIterator</a>&#160;</td>
          <td class="paramname"><em>start</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::initializer_list&lt; T &gt;&#160;</td>
          <td class="paramname"><em>list</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Insert a list of value at the specified position </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">start</td><td>the position to insert values </td></tr>
    <tr><td class="paramname">list</td><td>the list to fill the vector with </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the iterator on the first inserted value </dd></dl>
<dl class="section pre"><dt>Precondition</dt><dd>list don't contain string reference </dd></dl>

</div>
</div>
<a class="anchor" id="a20203ddad7a07bb0bdfb23260d7585f2"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">bool <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">NRE::Utility::BasicString</a>&lt; T &gt;::isEmpty </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>if the array is empty </dd></dl>

</div>
</div>
<a class="anchor" id="afaef88927e530b9475ce143779b7f851"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">bool <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">NRE::Utility::BasicString</a>&lt; T &gt;::operator!= </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">BasicString</a>&lt; T &gt; const &amp;&#160;</td>
          <td class="paramname"><em>str</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Inequality test between this and str </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">str</td><td>the other string to compare with this </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the test result </dd></dl>

</div>
</div>
<a class="anchor" id="ab4db6b5abd9d325e1a343e257b8799a2"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">BasicString</a>&amp; <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">NRE::Utility::BasicString</a>&lt; T &gt;::operator+= </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">BasicString</a>&lt; T &gt; const &amp;&#160;</td>
          <td class="paramname"><em>str</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Append the given string to this </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">str</td><td>the string to append </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the reference of himself </dd></dl>

</div>
</div>
<a class="anchor" id="a7be6af650d1f593a3d5f8558b9719797"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">BasicString</a>&amp; <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">NRE::Utility::BasicString</a>&lt; T &gt;::operator+= </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#ad05eef994fea38c5d1c5e5dda05d4806">ValueType</a>&#160;</td>
          <td class="paramname"><em>value</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Append the given character to this </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">value</td><td>the character to append </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the reference of himself </dd></dl>

</div>
</div>
<a class="anchor" id="a0ff24efca46a367bbbfa8c7956699ebb"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">BasicString</a>&amp; <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">NRE::Utility::BasicString</a>&lt; T &gt;::operator+= </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a856da4ed7172faf22930edef2b3de7eb">ConstPointer</a>&#160;</td>
          <td class="paramname"><em>str</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Append the given string to this, the string need to be NULL terminated </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">str</td><td>the string to append </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the reference of himself </dd></dl>

</div>
</div>
<a class="anchor" id="ab2167114fbd1b521c9f18bd7515858a3"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">BasicString</a>&amp; <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">NRE::Utility::BasicString</a>&lt; T &gt;::operator+= </td>
          <td>(</td>
          <td class="paramtype">std::initializer_list&lt; T &gt;&#160;</td>
          <td class="paramname"><em>list</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Append the given character list to this </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">list</td><td>the list to append </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the reference of himself </dd></dl>

</div>
</div>
<a class="anchor" id="ab06ee127d12a726f58c955365592fe3f"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">bool <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">NRE::Utility::BasicString</a>&lt; T &gt;::operator&lt; </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">BasicString</a>&lt; T &gt; const &amp;&#160;</td>
          <td class="paramname"><em>str</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Inferiority test between this and str </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">str</td><td>the other string to compare with this </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the test result </dd></dl>

</div>
</div>
<a class="anchor" id="a8c42d379cd90d3c8c02a0eeb31fd7482"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
<div class="memtemplate">
template&lt;class K &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">BasicString</a>&amp; <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">NRE::Utility::BasicString</a>&lt; T &gt;::operator&lt;&lt; </td>
          <td>(</td>
          <td class="paramtype">K const &amp;&#160;</td>
          <td class="paramname"><em>o</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Output stream operator for object </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">o</td><td>the object to add in the string </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the reference of himself </dd></dl>

</div>
</div>
<a class="anchor" id="a7d68e5ffd1eac743a66f364e1e064536"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">bool <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">NRE::Utility::BasicString</a>&lt; T &gt;::operator&lt;= </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">BasicString</a>&lt; T &gt; const &amp;&#160;</td>
          <td class="paramname"><em>str</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Inferior or Equal test between this and str </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">str</td><td>the other string to compare with this </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the test result </dd></dl>

</div>
</div>
<a class="anchor" id="a2a6ad7eedb04b8fea0193e1d80275ba6"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">BasicString</a>&amp; <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">NRE::Utility::BasicString</a>&lt; T &gt;::operator= </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">BasicString</a>&lt; T &gt; const &amp;&#160;</td>
          <td class="paramname"><em>str</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Copy str into this </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">str</td><td>the string to copy into this </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the reference of himself </dd></dl>

</div>
</div>
<a class="anchor" id="a4ac20b4bf7b077d252e0983e1d73ce98"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">BasicString</a>&amp; <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">NRE::Utility::BasicString</a>&lt; T &gt;::operator= </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">BasicString</a>&lt; T &gt; &amp;&amp;&#160;</td>
          <td class="paramname"><em>str</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Move str into this </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">str</td><td>the string to move into this </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the reference of himself </dd></dl>

</div>
</div>
<a class="anchor" id="a7e34c66f6da636b29a6a354e18a9fc47"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">BasicString</a>&amp; <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">NRE::Utility::BasicString</a>&lt; T &gt;::operator= </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a856da4ed7172faf22930edef2b3de7eb">ConstPointer</a>&#160;</td>
          <td class="paramname"><em>str</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Copy str into this </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">str</td><td>the string to copy into this </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the reference of himself </dd></dl>

</div>
</div>
<a class="anchor" id="acc49b0461664327ba810848d06f69819"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">BasicString</a>&amp; <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">NRE::Utility::BasicString</a>&lt; T &gt;::operator= </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#ad05eef994fea38c5d1c5e5dda05d4806">ValueType</a>&#160;</td>
          <td class="paramname"><em>value</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Copy value into this </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">value</td><td>the character to copy into this </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the reference of himself </dd></dl>

</div>
</div>
<a class="anchor" id="ab1da605ba807fd74d9936dc231974ee7"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">BasicString</a>&amp; <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">NRE::Utility::BasicString</a>&lt; T &gt;::operator= </td>
          <td>(</td>
          <td class="paramtype">std::initializer_list&lt; T &gt;&#160;</td>
          <td class="paramname"><em>list</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Copy list elements into this </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">list</td><td>the list of character to copy into this </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the reference of himself </dd></dl>

</div>
</div>
<a class="anchor" id="a2cf9e947bb8ed9a5deae560978c131be"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">bool <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">NRE::Utility::BasicString</a>&lt; T &gt;::operator== </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">BasicString</a>&lt; T &gt; const &amp;&#160;</td>
          <td class="paramname"><em>str</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Equality test between this and str </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">str</td><td>the other string to compare with this </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the test result </dd></dl>

</div>
</div>
<a class="anchor" id="aa55fab1b4557936778147ed3450c0427"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">bool <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">NRE::Utility::BasicString</a>&lt; T &gt;::operator&gt; </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">BasicString</a>&lt; T &gt; const &amp;&#160;</td>
          <td class="paramname"><em>str</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Superiority test between this and str </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">str</td><td>the other string to compare with this </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the test result </dd></dl>

</div>
</div>
<a class="anchor" id="a8e216345ab62dd5997b65c21b333339f"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">bool <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">NRE::Utility::BasicString</a>&lt; T &gt;::operator&gt;= </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">BasicString</a>&lt; T &gt; const &amp;&#160;</td>
          <td class="paramname"><em>str</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Superior or Equal or Equal test between this and str </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">str</td><td>the other string to compare with this </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the test result </dd></dl>

</div>
</div>
<a class="anchor" id="a6c519f820809ae4011fa3d9976a0405f"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a1ebb9b56406afd8fd5dae7cb88d4e8fb">Reference</a> <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">NRE::Utility::BasicString</a>&lt; T &gt;::operator[] </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a>&#160;</td>
          <td class="paramname"><em>index</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Access a particular element without bound checking </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">index</td><td>the element index </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the corresponding element </dd></dl>

</div>
</div>
<a class="anchor" id="a9cae682baa97faca6543f996a8461b3f"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#ac5b0fd9d01870016e685c23c456b7f13">ConstReference</a> <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">NRE::Utility::BasicString</a>&lt; T &gt;::operator[] </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a>&#160;</td>
          <td class="paramname"><em>index</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Access a particular element without bound checking </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">index</td><td>the element index </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the corresponding element </dd></dl>

</div>
</div>
<a class="anchor" id="a51b3da7e0493d6fd6a870629dabc871a"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">NRE::Utility::BasicString</a>&lt; T &gt;::popBack </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Pop back the last character </p>

</div>
</div>
<a class="anchor" id="ac3e78e4c5091b5d8e50bfdf0eef53e67"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">NRE::Utility::BasicString</a>&lt; T &gt;::pushBack </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#ad05eef994fea38c5d1c5e5dda05d4806">ValueType</a>&#160;</td>
          <td class="paramname"><em>value</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Insert a character at the end of the string </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">value</td><td>the value to insert </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a295b7f396e515c30e490d0d8a10b7e30"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a417f6581726a0ad98b930909606d1212">ReverseIterator</a> <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">NRE::Utility::BasicString</a>&lt; T &gt;::rbegin </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>a reverse iterator on the first element </dd></dl>

</div>
</div>
<a class="anchor" id="a428f523963a236e6e9b165f01e1ecd8c"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a0e037d86eff7538a37db0bae2ae97db1">ConstReverseIterator</a> <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">NRE::Utility::BasicString</a>&lt; T &gt;::rbegin </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>a const reverse iterator on the first element </dd></dl>

</div>
</div>
<a class="anchor" id="a009469819f09df8cafa2dce131d19cb2"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a417f6581726a0ad98b930909606d1212">ReverseIterator</a> <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">NRE::Utility::BasicString</a>&lt; T &gt;::rend </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>a reverse iterator on the end of the container </dd></dl>

</div>
</div>
<a class="anchor" id="a579ac9b5d39c1e924c1a2ff45d59d68f"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a0e037d86eff7538a37db0bae2ae97db1">ConstReverseIterator</a> <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">NRE::Utility::BasicString</a>&lt; T &gt;::rend </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>a const reverse iterator on the end of the container </dd></dl>

</div>
</div>
<a class="anchor" id="afa4db452ca6a1399363b27bf5572ee19"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">BasicString</a>&amp; <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">NRE::Utility::BasicString</a>&lt; T &gt;::replace </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a>&#160;</td>
          <td class="paramname"><em>pos</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a>&#160;</td>
          <td class="paramname"><em>count</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">BasicString</a>&lt; T &gt; const &amp;&#160;</td>
          <td class="paramname"><em>str</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Replace the given part by the given string </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pos</td><td>the start position to replace </td></tr>
    <tr><td class="paramname">count</td><td>the number of character to replace </td></tr>
    <tr><td class="paramname">str</td><td>the replacement string </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the reference of himself </dd></dl>

</div>
</div>
<a class="anchor" id="a4dc5a2b396270298682358aa7667ce69"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">BasicString</a>&amp; <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">NRE::Utility::BasicString</a>&lt; T &gt;::replace </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a121c89664b8182e62334547e032e25a9">ConstIterator</a>&#160;</td>
          <td class="paramname"><em>start</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a121c89664b8182e62334547e032e25a9">ConstIterator</a>&#160;</td>
          <td class="paramname"><em>end</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">BasicString</a>&lt; T &gt; const &amp;&#160;</td>
          <td class="paramname"><em>str</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Replace the given part by the given string </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">start</td><td>the start position to replace </td></tr>
    <tr><td class="paramname">end</td><td>the end range </td></tr>
    <tr><td class="paramname">str</td><td>the replacement string </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the reference of himself </dd></dl>

</div>
</div>
<a class="anchor" id="a491ab29b0ac9dc32763870a0570e9748"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">BasicString</a>&amp; <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">NRE::Utility::BasicString</a>&lt; T &gt;::replace </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a>&#160;</td>
          <td class="paramname"><em>tPos</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a>&#160;</td>
          <td class="paramname"><em>tCount</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">BasicString</a>&lt; T &gt; const &amp;&#160;</td>
          <td class="paramname"><em>str</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a>&#160;</td>
          <td class="paramname"><em>sPos</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a>&#160;</td>
          <td class="paramname"><em>sCount</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Replace the given part by a part of the given string </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">tPos</td><td>the start position to replace </td></tr>
    <tr><td class="paramname">tCount</td><td>the number of character to replace </td></tr>
    <tr><td class="paramname">str</td><td>the replacement string </td></tr>
    <tr><td class="paramname">sPos</td><td>the start position in the replacement string </td></tr>
    <tr><td class="paramname">sCount</td><td>the number of character in the replacement string </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the reference of himself </dd></dl>

</div>
</div>
<a class="anchor" id="a15a6b724fd6dd01df42db1c70404722d"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
<div class="memtemplate">
template&lt;class InputIterator &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">BasicString</a>&amp; <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">NRE::Utility::BasicString</a>&lt; T &gt;::replace </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a121c89664b8182e62334547e032e25a9">ConstIterator</a>&#160;</td>
          <td class="paramname"><em>tStart</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a121c89664b8182e62334547e032e25a9">ConstIterator</a>&#160;</td>
          <td class="paramname"><em>tEnd</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">BasicString</a>&lt; T &gt; const &amp;&#160;</td>
          <td class="paramname"><em>str</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="struct_n_r_e_1_1_utility_1_1_input_iterator.php">InputIterator</a>&#160;</td>
          <td class="paramname"><em>sStart</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="struct_n_r_e_1_1_utility_1_1_input_iterator.php">InputIterator</a>&#160;</td>
          <td class="paramname"><em>sEnd</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Replace the given part by a part of the given string </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">tStart</td><td>the start position to replace </td></tr>
    <tr><td class="paramname">tEnd</td><td>the end range </td></tr>
    <tr><td class="paramname">str</td><td>the replacement string </td></tr>
    <tr><td class="paramname">sStart</td><td>the start position in the replacement string </td></tr>
    <tr><td class="paramname">sEnd</td><td>the end range in the replacement string </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the reference of himself </dd></dl>

</div>
</div>
<a class="anchor" id="a0b638bc7649e00d77e2b35998aff9f1a"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">BasicString</a>&amp; <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">NRE::Utility::BasicString</a>&lt; T &gt;::replace </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a>&#160;</td>
          <td class="paramname"><em>pos</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a>&#160;</td>
          <td class="paramname"><em>tCount</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a856da4ed7172faf22930edef2b3de7eb">ConstPointer</a>&#160;</td>
          <td class="paramname"><em>str</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a>&#160;</td>
          <td class="paramname"><em>sCount</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Replace the given part by the given string </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pos</td><td>the start position to replace </td></tr>
    <tr><td class="paramname">tCount</td><td>the number of character to replace </td></tr>
    <tr><td class="paramname">str</td><td>the replacement string </td></tr>
    <tr><td class="paramname">sCount</td><td>the number of character in the replacement string </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the reference of himself </dd></dl>

</div>
</div>
<a class="anchor" id="ab5630affbf487b95dbaabdbfe2883dd9"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">BasicString</a>&amp; <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">NRE::Utility::BasicString</a>&lt; T &gt;::replace </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a121c89664b8182e62334547e032e25a9">ConstIterator</a>&#160;</td>
          <td class="paramname"><em>start</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a121c89664b8182e62334547e032e25a9">ConstIterator</a>&#160;</td>
          <td class="paramname"><em>end</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a856da4ed7172faf22930edef2b3de7eb">ConstPointer</a>&#160;</td>
          <td class="paramname"><em>str</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a>&#160;</td>
          <td class="paramname"><em>sCount</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Replace the given part by the given string </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">start</td><td>the start position to replace </td></tr>
    <tr><td class="paramname">end</td><td>the end range </td></tr>
    <tr><td class="paramname">str</td><td>the replacement string </td></tr>
    <tr><td class="paramname">sCount</td><td>the number of character in the replacement string </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the reference of himself </dd></dl>

</div>
</div>
<a class="anchor" id="a997331b5cc17474d958a839ed5978e7c"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">BasicString</a>&amp; <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">NRE::Utility::BasicString</a>&lt; T &gt;::replace </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a>&#160;</td>
          <td class="paramname"><em>pos</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a>&#160;</td>
          <td class="paramname"><em>count</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a856da4ed7172faf22930edef2b3de7eb">ConstPointer</a>&#160;</td>
          <td class="paramname"><em>str</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Replace the given part by the given string, need to be NULL terminated </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pos</td><td>the start position to replace </td></tr>
    <tr><td class="paramname">count</td><td>the number of character to replace </td></tr>
    <tr><td class="paramname">str</td><td>the replacement string </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the reference of himself </dd></dl>

</div>
</div>
<a class="anchor" id="a155934b1e4c6f18366ae7c80a2ea4948"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">BasicString</a>&amp; <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">NRE::Utility::BasicString</a>&lt; T &gt;::replace </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a121c89664b8182e62334547e032e25a9">ConstIterator</a>&#160;</td>
          <td class="paramname"><em>start</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a121c89664b8182e62334547e032e25a9">ConstIterator</a>&#160;</td>
          <td class="paramname"><em>end</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a856da4ed7172faf22930edef2b3de7eb">ConstPointer</a>&#160;</td>
          <td class="paramname"><em>str</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Replace the given part by the given string, need to be NULL terminated </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">start</td><td>the start position to replace </td></tr>
    <tr><td class="paramname">end</td><td>the end range </td></tr>
    <tr><td class="paramname">str</td><td>the replacement string </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the reference of himself </dd></dl>

</div>
</div>
<a class="anchor" id="a0b1e962947f7f65bd01bfa2b36e43130"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">BasicString</a>&amp; <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">NRE::Utility::BasicString</a>&lt; T &gt;::replace </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a>&#160;</td>
          <td class="paramname"><em>pos</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a>&#160;</td>
          <td class="paramname"><em>tCount</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#ad05eef994fea38c5d1c5e5dda05d4806">ValueType</a>&#160;</td>
          <td class="paramname"><em>value</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a>&#160;</td>
          <td class="paramname"><em>sCount</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Replace the given part by sCount copy of the given character </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pos</td><td>the start position to replace </td></tr>
    <tr><td class="paramname">tCount</td><td>the number of character to replace </td></tr>
    <tr><td class="paramname">value</td><td>the character to copy </td></tr>
    <tr><td class="paramname">sCount</td><td>the number of copy </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the reference of himself </dd></dl>

</div>
</div>
<a class="anchor" id="a9ecdd975c5bca6f4a04f77afab25af76"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">BasicString</a>&amp; <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">NRE::Utility::BasicString</a>&lt; T &gt;::replace </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a121c89664b8182e62334547e032e25a9">ConstIterator</a>&#160;</td>
          <td class="paramname"><em>start</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a121c89664b8182e62334547e032e25a9">ConstIterator</a>&#160;</td>
          <td class="paramname"><em>end</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#ad05eef994fea38c5d1c5e5dda05d4806">ValueType</a>&#160;</td>
          <td class="paramname"><em>value</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a>&#160;</td>
          <td class="paramname"><em>sCount</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Replace the given part by sCount copy of the given character </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">start</td><td>the start position to replace </td></tr>
    <tr><td class="paramname">end</td><td>the end range </td></tr>
    <tr><td class="paramname">value</td><td>the character to copy </td></tr>
    <tr><td class="paramname">sCount</td><td>the number of copy </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the reference of himself </dd></dl>

</div>
</div>
<a class="anchor" id="a209163aab69f8989c05ef621ed3cd8c2"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">BasicString</a>&amp; <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">NRE::Utility::BasicString</a>&lt; T &gt;::replace </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a121c89664b8182e62334547e032e25a9">ConstIterator</a>&#160;</td>
          <td class="paramname"><em>start</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a121c89664b8182e62334547e032e25a9">ConstIterator</a>&#160;</td>
          <td class="paramname"><em>end</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::initializer_list&lt; T &gt;&#160;</td>
          <td class="paramname"><em>list</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Replace the given part by the given character list </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">start</td><td>the start position to replace </td></tr>
    <tr><td class="paramname">end</td><td>the end range </td></tr>
    <tr><td class="paramname">list</td><td>the character list </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the reference of himself </dd></dl>

</div>
</div>
<a class="anchor" id="a7c876ccb7ba4245ed559df07c207bd34"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">NRE::Utility::BasicString</a>&lt; T &gt;::reserve </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a>&#160;</td>
          <td class="paramname"><em>size</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Set the string capacity to a minimum of size, reallocating memory if needed </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">size</td><td>the new capacity </td></tr>
  </table>
  </dd>
</dl>
<dl class="section warning"><dt>Warning</dt><dd>size value is not checked against <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a4ef0431f31869ef81f7e33dec6c46b51">getMaxSize()</a> </dd></dl>

</div>
</div>
<a class="anchor" id="afcf5ec5c3a8b24f2204b53f418301bc3"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">NRE::Utility::BasicString</a>&lt; T &gt;::resize </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a>&#160;</td>
          <td class="paramname"><em>count</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Resize the string up the given size, insert value if needed </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">count</td><td>the new capacity </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a08a8f4eb8e778db18b36d703436c6e94"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">NRE::Utility::BasicString</a>&lt; T &gt;::resize </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a>&#160;</td>
          <td class="paramname"><em>count</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#ad05eef994fea38c5d1c5e5dda05d4806">ValueType</a>&#160;</td>
          <td class="paramname"><em>value</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Resize the string up the given size, insert value if needed </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">count</td><td>the new capacity </td></tr>
    <tr><td class="paramname">value</td><td>the value used when inserting </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a043d8789a2fcc13972175e55cb0ae9c0"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">NRE::Utility::BasicString</a>&lt; T &gt;::reverse </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Reverse the whole string </p>

</div>
</div>
<a class="anchor" id="a1d814a866a5088ec280f9fa991f5c240"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">NRE::Utility::BasicString</a>&lt; T &gt;::reverse </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a>&#160;</td>
          <td class="paramname"><em>pos</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a>&#160;</td>
          <td class="paramname"><em>count</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Reverse a part of the string </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pos</td><td>the start for the reverse </td></tr>
    <tr><td class="paramname">count</td><td>the number of character to reverse </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="afeef0a6d6a61926e7ddb3c5f84d6fd2c"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a> <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">NRE::Utility::BasicString</a>&lt; T &gt;::rfind </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">BasicString</a>&lt; T &gt; const &amp;&#160;</td>
          <td class="paramname"><em>str</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a>&#160;</td>
          <td class="paramname"><em>pos</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Search the first occurrence of the given string, start the search at the given position </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">str</td><td>the string to search </td></tr>
    <tr><td class="paramname">pos</td><td>the search start </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the position of the found string, NOT_FOUND if no occurrence found </dd></dl>

</div>
</div>
<a class="anchor" id="ad4ef1ea6f110297075b4ab8a57d644e6"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a> <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">NRE::Utility::BasicString</a>&lt; T &gt;::rfind </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a>&#160;</td>
          <td class="paramname"><em>count</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a856da4ed7172faf22930edef2b3de7eb">ConstPointer</a>&#160;</td>
          <td class="paramname"><em>str</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a>&#160;</td>
          <td class="paramname"><em>pos</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Search the first occurrence of the given string part, start the search at the given position </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">count</td><td>the max range in the given string </td></tr>
    <tr><td class="paramname">str</td><td>the string to search </td></tr>
    <tr><td class="paramname">pos</td><td>the search start </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the position of the found string, NOT_FOUND if no occurrence found </dd></dl>

</div>
</div>
<a class="anchor" id="a821d8d4faee6368b4b6824c265ba9a81"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a> <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">NRE::Utility::BasicString</a>&lt; T &gt;::rfind </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a856da4ed7172faf22930edef2b3de7eb">ConstPointer</a>&#160;</td>
          <td class="paramname"><em>str</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a>&#160;</td>
          <td class="paramname"><em>pos</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Search the first occurrence of the given string, need to be NULL terminated, start the search at the given position </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">str</td><td>the string to search </td></tr>
    <tr><td class="paramname">pos</td><td>the search start </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the position of the found string, NOT_FOUND if no occurrence found </dd></dl>

</div>
</div>
<a class="anchor" id="af6c7794411c58f2a806f48d876e2315f"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a> <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">NRE::Utility::BasicString</a>&lt; T &gt;::rfind </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#ad05eef994fea38c5d1c5e5dda05d4806">ValueType</a>&#160;</td>
          <td class="paramname"><em>value</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a>&#160;</td>
          <td class="paramname"><em>pos</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Search the first occurrence of the given character, start the search at the given position </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">value</td><td>the character to search </td></tr>
    <tr><td class="paramname">pos</td><td>the search start </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the position of the found character, NOT_FOUND if no occurrence found </dd></dl>

</div>
</div>
<a class="anchor" id="afe91c26205f7c7f70d2a3edfb242fb88"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">NRE::Utility::BasicString</a>&lt; T &gt;::shrinkToFit </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Shrink to fit the actual size, actually freeing memory </p>

</div>
</div>
<a class="anchor" id="a047e6ea23a748f1001aab1c7e913171a"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">bool <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">NRE::Utility::BasicString</a>&lt; T &gt;::startsWith </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">BasicString</a>&lt; T &gt; const &amp;&#160;</td>
          <td class="paramname"><em>str</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Check if the string starts with the given one </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">str</td><td>the prefix to check </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>if the string starts with the prefix </dd></dl>

</div>
</div>
<a class="anchor" id="a355a6ae4615470c9d85bc66f5d50d771"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">bool <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">NRE::Utility::BasicString</a>&lt; T &gt;::startsWith </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#ad05eef994fea38c5d1c5e5dda05d4806">ValueType</a>&#160;</td>
          <td class="paramname"><em>value</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Check if the string starts with the given character </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">value</td><td>the prefix to check </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>if the string starts with the prefix </dd></dl>

</div>
</div>
<a class="anchor" id="a85922010ff5f614d53b40741d1f7c698"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">bool <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">NRE::Utility::BasicString</a>&lt; T &gt;::startsWith </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a856da4ed7172faf22930edef2b3de7eb">ConstPointer</a>&#160;</td>
          <td class="paramname"><em>str</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Check if the string starts with the given one, need to be NULL terminated </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">str</td><td>the prefix to check </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>if the string starts with the prefix </dd></dl>

</div>
</div>
<a class="anchor" id="a30c61a8aa1fbbcf4aeb0d313a952dc81"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">BasicString</a> <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">NRE::Utility::BasicString</a>&lt; T &gt;::substr </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a>&#160;</td>
          <td class="paramname"><em>pos</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a>&#160;</td>
          <td class="paramname"><em>count</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Create a copy of the given range </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pos</td><td>the start index </td></tr>
    <tr><td class="paramname">count</td><td>the number of character to copy </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the sub string </dd></dl>

</div>
</div>
<a class="anchor" id="a6c5b14da8a367e0cb88268194e721ce0"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">NRE::Utility::BasicString</a>&lt; T &gt;::swap </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">BasicString</a>&lt; T &gt; &amp;&#160;</td>
          <td class="paramname"><em>str</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Swap the string with an other string </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">str</td><td>the other string </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a3869ddf5653784b3b5734572bbfd3159"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">BasicString</a> const&amp; <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">NRE::Utility::BasicString</a>&lt; T &gt;::toString </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Convert the object into a string representation </p><dl class="section return"><dt>Returns</dt><dd>the converted object </dd></dl>

</div>
</div>
<h2 class="groupheader">Member Data Documentation</h2>
<a class="anchor" id="a80dc21317d22ab231ed732c8f222e471"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php#a8fc26180f68e827e77bce464afa03255">SizeType</a> <a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">NRE::Utility::BasicString</a>&lt; T &gt;::NOT_FOUND = -1</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>The not found marker value </p>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>/mnt/c/Users/abell/Documents/GitHub/NRE-Utility/src/Utility/String/<a class="el" href="_n_r_e___string_8hpp_source.php">NRE_String.hpp</a></li>
</ul>
</div><!-- contents -->
<!-- HTML footer for doxygen 1.8.8-->
<!-- start footer part -->
</div>
</div>
</div>
</div>
</body>
</html>
