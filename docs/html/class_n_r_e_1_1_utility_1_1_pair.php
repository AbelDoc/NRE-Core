<!-- HTML header for doxygen 1.8.8-->
<!DOCTYPE html>
<html>
    <head>
        <meta http-equiv="X-UA-Compatible" content="IE=edge">
        <!-- For Mobile Devices -->
        <meta name="viewport" content="width=device-width, initial-scale=1">
        <meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
        <meta name="generator" content="Doxygen 1.8.11"/>
        <script type="text/javascript" src="../../js/jquery-2.1.1.min.js"></script>
        <title>NRE-Math: NRE::Utility::Pair&lt; T, K &gt; Class Template Reference</title>
        <!--<link href="tabs.css" rel="stylesheet" type="text/css"/>-->
        <script type="text/javascript" src="dynsections.js"></script>
        <link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
        <link href="doxygen.css" rel="stylesheet" type="text/css" />
        <link href="style.css" rel="stylesheet" type="text/css"/>
        <link href='https://fonts.googleapis.com/css?family=Roboto+Slab' rel='stylesheet' type='text/css'>
        <?php
            include '../../php/navigation.php';
            if (!isset($_COOKIE["theme"]) || $_COOKIE["theme"] == "dark") {
                echo '<link href="../../css/dark/bootstrap.css" rel="stylesheet">';
            } else {
                echo '<link href="../../css/light/bootstrap.css" rel="stylesheet">';
            }
        ?>
        <script src="../../js/bootstrap.min.js"></script>
        <script type="text/javascript" src="doxy-boot.js"></script>
    </head>
    <body>
        <div class="container-fluid">
            <header class="page-header">
                <a href="../../../index.php">
                    <img src="../../img/Logo.png" class="logo img-responsive"/>
                </a>
            </header>
            <?php addNavigationBarInl(false); ?>
            <div id="top"><!-- do not remove this div, it is closed by doxygen! -->
                <div class="content" id="content">
                    <div class="container">
                        <div class="row">
                            <div class="col-sm-12 panel " style="padding-bottom: 15px;">
                                <div style="margin-bottom: 15px;">
<!-- end header part -->
<!-- Generated by Doxygen 1.8.11 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.php"><span>Main&#160;Page</span></a></li>
      <li><a href="namespaces.php"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.php"><span>Classes</span></a></li>
      <li><a href="files.php"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.php"><span>Class&#160;List</span></a></li>
      <li><a href="classes.php"><span>Class&#160;Index</span></a></li>
      <li><a href="hierarchy.php"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.php"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespace_n_r_e.php">NRE</a></li><li class="navelem"><b>Utility</b></li><li class="navelem"><a class="el" href="class_n_r_e_1_1_utility_1_1_pair.php">Pair</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-attribs">Public Attributes</a> &#124;
<a href="class_n_r_e_1_1_utility_1_1_pair-members.php">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">NRE::Utility::Pair&lt; T, K &gt; Class Template Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>A basic template pair.  
 <a href="class_n_r_e_1_1_utility_1_1_pair.php#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="_n_r_e___pair_8hpp_source.php">NRE_Pair.hpp</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a4ebd1142d7bf6bf6d4b56a00077e5141"><td class="memItemLeft" align="right" valign="top">constexpr&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_pair.php#a4ebd1142d7bf6bf6d4b56a00077e5141">Pair</a> ()</td></tr>
<tr class="separator:a4ebd1142d7bf6bf6d4b56a00077e5141"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1a4d15d63b86080d4d6b96f1e3dee0f2"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_pair.php#a1a4d15d63b86080d4d6b96f1e3dee0f2">Pair</a> (T const &amp;x, K const &amp;y)</td></tr>
<tr class="separator:a1a4d15d63b86080d4d6b96f1e3dee0f2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2679fc46596a86f6992393c39e756d63"><td class="memTemplParams" colspan="2">template&lt;class T2 , class K2 &gt; </td></tr>
<tr class="memitem:a2679fc46596a86f6992393c39e756d63"><td class="memTemplItemLeft" align="right" valign="top">&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_pair.php#a2679fc46596a86f6992393c39e756d63">Pair</a> (T2 &amp;&amp;x, K2 &amp;&amp;y)</td></tr>
<tr class="separator:a2679fc46596a86f6992393c39e756d63"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a26346100b72532277fcb0e2829d2889b"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_pair.php#a26346100b72532277fcb0e2829d2889b">Pair</a> (<a class="el" href="class_n_r_e_1_1_utility_1_1_pair.php">Pair</a> const &amp;p)=default</td></tr>
<tr class="separator:a26346100b72532277fcb0e2829d2889b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9df801fcbe866191087430b2a225cb26"><td class="memTemplParams" colspan="2">template&lt;class T2 , class K2 &gt; </td></tr>
<tr class="memitem:a9df801fcbe866191087430b2a225cb26"><td class="memTemplItemLeft" align="right" valign="top">&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_pair.php#a9df801fcbe866191087430b2a225cb26">Pair</a> (<a class="el" href="class_n_r_e_1_1_utility_1_1_pair.php">Pair</a>&lt; T2, K2 &gt; const &amp;p)</td></tr>
<tr class="separator:a9df801fcbe866191087430b2a225cb26"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af3f0293dc50800e4325aa6945e0eb4f5"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_pair.php#af3f0293dc50800e4325aa6945e0eb4f5">Pair</a> (<a class="el" href="class_n_r_e_1_1_utility_1_1_pair.php">Pair</a> &amp;&amp;p)=default</td></tr>
<tr class="separator:af3f0293dc50800e4325aa6945e0eb4f5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab1b4fb154b6e3c54e126db80b7658596"><td class="memTemplParams" colspan="2">template&lt;class T2 , class K2 &gt; </td></tr>
<tr class="memitem:ab1b4fb154b6e3c54e126db80b7658596"><td class="memTemplItemLeft" align="right" valign="top">&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_pair.php#ab1b4fb154b6e3c54e126db80b7658596">Pair</a> (<a class="el" href="class_n_r_e_1_1_utility_1_1_pair.php">Pair</a>&lt; T2, K2 &gt; &amp;&amp;p)</td></tr>
<tr class="separator:ab1b4fb154b6e3c54e126db80b7658596"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adff7cce84ee08c2ef1cf3cfe013559e8"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_pair.php#adff7cce84ee08c2ef1cf3cfe013559e8">~Pair</a> ()=default</td></tr>
<tr class="separator:adff7cce84ee08c2ef1cf3cfe013559e8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7acddd3fdb5069d0ee5eb2b0e365c086"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_pair.php#a7acddd3fdb5069d0ee5eb2b0e365c086">swap</a> (<a class="el" href="class_n_r_e_1_1_utility_1_1_pair.php">Pair</a> &amp;p)</td></tr>
<tr class="separator:a7acddd3fdb5069d0ee5eb2b0e365c086"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1718d1cf9731dbf685484d24ac634349"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_utility_1_1_pair.php">Pair</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_pair.php#a1718d1cf9731dbf685484d24ac634349">operator=</a> (<a class="el" href="class_n_r_e_1_1_utility_1_1_pair.php">Pair</a> const &amp;p)=default</td></tr>
<tr class="separator:a1718d1cf9731dbf685484d24ac634349"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aedcf96e112827c0b152834d09ea6fca0"><td class="memTemplParams" colspan="2">template&lt;class T2 , class K2 &gt; </td></tr>
<tr class="memitem:aedcf96e112827c0b152834d09ea6fca0"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_utility_1_1_pair.php">Pair</a> &amp;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_pair.php#aedcf96e112827c0b152834d09ea6fca0">operator=</a> (<a class="el" href="class_n_r_e_1_1_utility_1_1_pair.php">Pair</a>&lt; T2, K2 &gt; const &amp;p)</td></tr>
<tr class="separator:aedcf96e112827c0b152834d09ea6fca0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a873d0b6f87717711b39f36845a96d82c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_utility_1_1_pair.php">Pair</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_pair.php#a873d0b6f87717711b39f36845a96d82c">operator=</a> (<a class="el" href="class_n_r_e_1_1_utility_1_1_pair.php">Pair</a> &amp;&amp;p)=default</td></tr>
<tr class="separator:a873d0b6f87717711b39f36845a96d82c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8dc30774bcc9eafb81ceb16154e2098d"><td class="memTemplParams" colspan="2">template&lt;class T2 , class K2 &gt; </td></tr>
<tr class="memitem:a8dc30774bcc9eafb81ceb16154e2098d"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_utility_1_1_pair.php">Pair</a> &amp;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_pair.php#a8dc30774bcc9eafb81ceb16154e2098d">operator=</a> (<a class="el" href="class_n_r_e_1_1_utility_1_1_pair.php">Pair</a>&lt; T2, K2 &gt; &amp;&amp;p)</td></tr>
<tr class="separator:a8dc30774bcc9eafb81ceb16154e2098d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af46c65eaf55e6a87a163fcd977247268"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_pair.php#af46c65eaf55e6a87a163fcd977247268">operator==</a> (<a class="el" href="class_n_r_e_1_1_utility_1_1_pair.php">Pair</a> const &amp;p) const </td></tr>
<tr class="separator:af46c65eaf55e6a87a163fcd977247268"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2fac4903c4b01a343834008e80abb8c5"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_pair.php#a2fac4903c4b01a343834008e80abb8c5">operator!=</a> (<a class="el" href="class_n_r_e_1_1_utility_1_1_pair.php">Pair</a> const &amp;p) const </td></tr>
<tr class="separator:a2fac4903c4b01a343834008e80abb8c5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a262597f8ced59f41bc0f0982f76c5579"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_pair.php#a262597f8ced59f41bc0f0982f76c5579">operator&lt;</a> (<a class="el" href="class_n_r_e_1_1_utility_1_1_pair.php">Pair</a> const &amp;p) const </td></tr>
<tr class="separator:a262597f8ced59f41bc0f0982f76c5579"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2b46341a5868a01876b6c0a355130811"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_pair.php#a2b46341a5868a01876b6c0a355130811">operator&lt;=</a> (<a class="el" href="class_n_r_e_1_1_utility_1_1_pair.php">Pair</a> const &amp;p) const </td></tr>
<tr class="separator:a2b46341a5868a01876b6c0a355130811"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:accb3c33f2b67c6eda3275b777300123d"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_pair.php#accb3c33f2b67c6eda3275b777300123d">operator&gt;</a> (<a class="el" href="class_n_r_e_1_1_utility_1_1_pair.php">Pair</a> const &amp;p) const </td></tr>
<tr class="separator:accb3c33f2b67c6eda3275b777300123d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a78b90e8f19d12b49a9effc89e349e125"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_pair.php#a78b90e8f19d12b49a9effc89e349e125">operator&gt;=</a> (<a class="el" href="class_n_r_e_1_1_utility_1_1_pair.php">Pair</a> const &amp;p) const </td></tr>
<tr class="separator:a78b90e8f19d12b49a9effc89e349e125"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a97059c18f5babb318015b3855537c91a"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">String</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_pair.php#a97059c18f5babb318015b3855537c91a">toString</a> () const </td></tr>
<tr class="separator:a97059c18f5babb318015b3855537c91a"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-attribs"></a>
Public Attributes</h2></td></tr>
<tr class="memitem:a5f1680a6219dc720fb4d5d133f3dc60c"><td class="memItemLeft" align="right" valign="top">T&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_pair.php#a5f1680a6219dc720fb4d5d133f3dc60c">first</a></td></tr>
<tr class="separator:a5f1680a6219dc720fb4d5d133f3dc60c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a311bbc493d600fd03960f82269158f51"><td class="memItemLeft" align="right" valign="top">K&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_pair.php#a311bbc493d600fd03960f82269158f51">second</a></td></tr>
<tr class="separator:a311bbc493d600fd03960f82269158f51"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><h3>template&lt;class T, class K&gt;<br />
class NRE::Utility::Pair&lt; T, K &gt;</h3>

<p>A basic template pair. </p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="a4ebd1142d7bf6bf6d4b56a00077e5141"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T, class K&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">constexpr <a class="el" href="class_n_r_e_1_1_utility_1_1_pair.php">NRE::Utility::Pair</a>&lt; T, K &gt;::<a class="el" href="class_n_r_e_1_1_utility_1_1_pair.php">Pair</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Conpuct the pair with default values </p>

</div>
</div>
<a class="anchor" id="a1a4d15d63b86080d4d6b96f1e3dee0f2"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T, class K&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_pair.php">NRE::Utility::Pair</a>&lt; T, K &gt;::<a class="el" href="class_n_r_e_1_1_utility_1_1_pair.php">Pair</a> </td>
          <td>(</td>
          <td class="paramtype">T const &amp;&#160;</td>
          <td class="paramname"><em>x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">K const &amp;&#160;</td>
          <td class="paramname"><em>y</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Conpuct the pair with x and y </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">x</td><td>the first object </td></tr>
    <tr><td class="paramname">y</td><td>the second object </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a2679fc46596a86f6992393c39e756d63"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T, class K&gt; </div>
<div class="memtemplate">
template&lt;class T2 , class K2 &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_pair.php">NRE::Utility::Pair</a>&lt; T, K &gt;::<a class="el" href="class_n_r_e_1_1_utility_1_1_pair.php">Pair</a> </td>
          <td>(</td>
          <td class="paramtype">T2 &amp;&amp;&#160;</td>
          <td class="paramname"><em>x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">K2 &amp;&amp;&#160;</td>
          <td class="paramname"><em>y</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Conpuct the pair while forwarding given elements </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">x</td><td>the first object </td></tr>
    <tr><td class="paramname">y</td><td>the second object </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a26346100b72532277fcb0e2829d2889b"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T, class K&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_pair.php">NRE::Utility::Pair</a>&lt; T, K &gt;::<a class="el" href="class_n_r_e_1_1_utility_1_1_pair.php">Pair</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_pair.php">Pair</a>&lt; T, K &gt; const &amp;&#160;</td>
          <td class="paramname"><em>p</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Copy p into this </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">p</td><td>the pair to copy </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a9df801fcbe866191087430b2a225cb26"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T, class K&gt; </div>
<div class="memtemplate">
template&lt;class T2 , class K2 &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_pair.php">NRE::Utility::Pair</a>&lt; T, K &gt;::<a class="el" href="class_n_r_e_1_1_utility_1_1_pair.php">Pair</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_pair.php">Pair</a>&lt; T2, K2 &gt; const &amp;&#160;</td>
          <td class="paramname"><em>p</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Conpuct the pair using the given pair </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">p</td><td>the pair to initialize this </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="af3f0293dc50800e4325aa6945e0eb4f5"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T, class K&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_pair.php">NRE::Utility::Pair</a>&lt; T, K &gt;::<a class="el" href="class_n_r_e_1_1_utility_1_1_pair.php">Pair</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_pair.php">Pair</a>&lt; T, K &gt; &amp;&amp;&#160;</td>
          <td class="paramname"><em>p</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Move p into this </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">p</td><td>the pair to move </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="ab1b4fb154b6e3c54e126db80b7658596"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T, class K&gt; </div>
<div class="memtemplate">
template&lt;class T2 , class K2 &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_pair.php">NRE::Utility::Pair</a>&lt; T, K &gt;::<a class="el" href="class_n_r_e_1_1_utility_1_1_pair.php">Pair</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_pair.php">Pair</a>&lt; T2, K2 &gt; &amp;&amp;&#160;</td>
          <td class="paramname"><em>p</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Conpuct the pair by moving the given pair elements </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">p</td><td>the pair to move </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="adff7cce84ee08c2ef1cf3cfe013559e8"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T, class K&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_pair.php">NRE::Utility::Pair</a>&lt; T, K &gt;::~<a class="el" href="class_n_r_e_1_1_utility_1_1_pair.php">Pair</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p><a class="el" href="class_n_r_e_1_1_utility_1_1_pair.php" title="A basic template pair. ">Pair</a> Deconpuctor </p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a class="anchor" id="a2fac4903c4b01a343834008e80abb8c5"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T, class K&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">bool <a class="el" href="class_n_r_e_1_1_utility_1_1_pair.php">NRE::Utility::Pair</a>&lt; T, K &gt;::operator!= </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_pair.php">Pair</a>&lt; T, K &gt; const &amp;&#160;</td>
          <td class="paramname"><em>p</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Inequality test between this and p </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">p</td><td>the other pair to compare with this </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the test result </dd></dl>

</div>
</div>
<a class="anchor" id="a262597f8ced59f41bc0f0982f76c5579"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T, class K&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">bool <a class="el" href="class_n_r_e_1_1_utility_1_1_pair.php">NRE::Utility::Pair</a>&lt; T, K &gt;::operator&lt; </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_pair.php">Pair</a>&lt; T, K &gt; const &amp;&#160;</td>
          <td class="paramname"><em>p</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Inferiority test between this and p </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">p</td><td>the other pair to compare with this </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the test result </dd></dl>

</div>
</div>
<a class="anchor" id="a2b46341a5868a01876b6c0a355130811"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T, class K&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">bool <a class="el" href="class_n_r_e_1_1_utility_1_1_pair.php">NRE::Utility::Pair</a>&lt; T, K &gt;::operator&lt;= </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_pair.php">Pair</a>&lt; T, K &gt; const &amp;&#160;</td>
          <td class="paramname"><em>p</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Inferior or Equal test between this and p </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">p</td><td>the other pair to compare with this </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the test result </dd></dl>

</div>
</div>
<a class="anchor" id="a1718d1cf9731dbf685484d24ac634349"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T, class K&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_pair.php">Pair</a>&amp; <a class="el" href="class_n_r_e_1_1_utility_1_1_pair.php">NRE::Utility::Pair</a>&lt; T, K &gt;::operator= </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_pair.php">Pair</a>&lt; T, K &gt; const &amp;&#160;</td>
          <td class="paramname"><em>p</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Copy p into this </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">p</td><td>the pair to copy into this </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the reference of himself </dd></dl>

</div>
</div>
<a class="anchor" id="aedcf96e112827c0b152834d09ea6fca0"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T, class K&gt; </div>
<div class="memtemplate">
template&lt;class T2 , class K2 &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_pair.php">Pair</a>&amp; <a class="el" href="class_n_r_e_1_1_utility_1_1_pair.php">NRE::Utility::Pair</a>&lt; T, K &gt;::operator= </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_pair.php">Pair</a>&lt; T2, K2 &gt; const &amp;&#160;</td>
          <td class="paramname"><em>p</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Copy p into this </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">p</td><td>the pair to copy into this </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the reference of himself </dd></dl>

</div>
</div>
<a class="anchor" id="a873d0b6f87717711b39f36845a96d82c"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T, class K&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_pair.php">Pair</a>&amp; <a class="el" href="class_n_r_e_1_1_utility_1_1_pair.php">NRE::Utility::Pair</a>&lt; T, K &gt;::operator= </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_pair.php">Pair</a>&lt; T, K &gt; &amp;&amp;&#160;</td>
          <td class="paramname"><em>p</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Move p into this </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">p</td><td>the pair to move into this </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the reference of himself </dd></dl>

</div>
</div>
<a class="anchor" id="a8dc30774bcc9eafb81ceb16154e2098d"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T, class K&gt; </div>
<div class="memtemplate">
template&lt;class T2 , class K2 &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_pair.php">Pair</a>&amp; <a class="el" href="class_n_r_e_1_1_utility_1_1_pair.php">NRE::Utility::Pair</a>&lt; T, K &gt;::operator= </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_pair.php">Pair</a>&lt; T2, K2 &gt; &amp;&amp;&#160;</td>
          <td class="paramname"><em>p</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Move p into this by forwarding it </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">p</td><td>the pair to move into this </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the reference of himself </dd></dl>

</div>
</div>
<a class="anchor" id="af46c65eaf55e6a87a163fcd977247268"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T, class K&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">bool <a class="el" href="class_n_r_e_1_1_utility_1_1_pair.php">NRE::Utility::Pair</a>&lt; T, K &gt;::operator== </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_pair.php">Pair</a>&lt; T, K &gt; const &amp;&#160;</td>
          <td class="paramname"><em>p</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Equality test between this and p </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">p</td><td>the other pair to compare with this </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the test result </dd></dl>

</div>
</div>
<a class="anchor" id="accb3c33f2b67c6eda3275b777300123d"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T, class K&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">bool <a class="el" href="class_n_r_e_1_1_utility_1_1_pair.php">NRE::Utility::Pair</a>&lt; T, K &gt;::operator&gt; </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_pair.php">Pair</a>&lt; T, K &gt; const &amp;&#160;</td>
          <td class="paramname"><em>p</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Superiority test between this and p </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">p</td><td>the other pair to compare with this </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the test result </dd></dl>

</div>
</div>
<a class="anchor" id="a78b90e8f19d12b49a9effc89e349e125"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T, class K&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">bool <a class="el" href="class_n_r_e_1_1_utility_1_1_pair.php">NRE::Utility::Pair</a>&lt; T, K &gt;::operator&gt;= </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_pair.php">Pair</a>&lt; T, K &gt; const &amp;&#160;</td>
          <td class="paramname"><em>p</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Superior or Equal or Equal test between this and p </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">p</td><td>the other pair to compare with this </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the test result </dd></dl>

</div>
</div>
<a class="anchor" id="a7acddd3fdb5069d0ee5eb2b0e365c086"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T, class K&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="class_n_r_e_1_1_utility_1_1_pair.php">NRE::Utility::Pair</a>&lt; T, K &gt;::swap </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_pair.php">Pair</a>&lt; T, K &gt; &amp;&#160;</td>
          <td class="paramname"><em>p</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Swap the pair with another pair </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">p</td><td>the other pair </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a97059c18f5babb318015b3855537c91a"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T, class K&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">String</a> <a class="el" href="class_n_r_e_1_1_utility_1_1_pair.php">NRE::Utility::Pair</a>&lt; T, K &gt;::toString </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Convert the object into a string representation </p><dl class="section return"><dt>Returns</dt><dd>the converted object </dd></dl>

</div>
</div>
<h2 class="groupheader">Member Data Documentation</h2>
<a class="anchor" id="a5f1680a6219dc720fb4d5d133f3dc60c"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T, class K&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">T <a class="el" href="class_n_r_e_1_1_utility_1_1_pair.php">NRE::Utility::Pair</a>&lt; T, K &gt;::first</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>The first object </p>

</div>
</div>
<a class="anchor" id="a311bbc493d600fd03960f82269158f51"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T, class K&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">K <a class="el" href="class_n_r_e_1_1_utility_1_1_pair.php">NRE::Utility::Pair</a>&lt; T, K &gt;::second</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>The second object </p>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>/mnt/c/Users/abell/Documents/GitHub/NRE-Utility/src/Utility/Pair/<a class="el" href="_n_r_e___pair_8hpp_source.php">NRE_Pair.hpp</a></li>
</ul>
</div><!-- contents -->
<!-- HTML footer for doxygen 1.8.8-->
<!-- start footer part -->
</div>
</div>
</div>
</div>
</div>
</div>
</body>
</html>
