<!-- HTML header for doxygen 1.8.8-->
<!DOCTYPE html>
<html>
    <head>
        <meta http-equiv="X-UA-Compatible" content="IE=edge">
        <!-- For Mobile Devices -->
        <meta name="viewport" content="width=device-width, initial-scale=1">
        <meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
        <meta name="generator" content="Doxygen 1.8.11"/>
        <script type="text/javascript" src="../../js/jquery-2.1.1.min.js"></script>
        <title>NRE-Utility: /mnt/c/Users/abell/Documents/GitHub/NRE-Utility/src/Utility/Detail/Vector/NRE_Vector.hpp Source File</title>
        <!--<link href="tabs.css" rel="stylesheet" type="text/css"/>-->
        <script type="text/javascript" src="dynsections.js"></script>
        <link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
        <link href="doxygen.css" rel="stylesheet" type="text/css" />
        <link href="style.css" rel="stylesheet" type="text/css"/>
        <link href='https://fonts.googleapis.com/css?family=Roboto+Slab' rel='stylesheet' type='text/css'>
        <?php
            include '../../php/navigation.php';
            if (!isset($_COOKIE["theme"]) || $_COOKIE["theme"] == "dark") {
                echo '<link href="../../css/dark/bootstrap.css" rel="stylesheet">';
            } else {
                echo '<link href="../../css/light/bootstrap.css" rel="stylesheet">';
            }
        ?>
        <script src="../../js/bootstrap.min.js"></script>
        <script type="text/javascript" src="doxy-boot.js"></script>
    </head>
    <body>
        <div class="container-fluid">
            <header class="page-header">
                <a href="../../../index.php">
                    <img src="../../img/Logo.png" class="logo img-responsive"/>
                </a>
            </header>
            <?php addNavigationBarInl(false); ?>
            <div id="top" class="row"><!-- do not remove this div, it is closed by doxygen! -->
                <div class="col-lg-12">
                    <div class="panel panel-default">
                        <div class="panel-body">
<!-- end header part -->
<!-- Generated by Doxygen 1.8.11 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.php"><span>Main&#160;Page</span></a></li>
      <li><a href="namespaces.php"><span>Namespaces</span></a></li>
      <li><a href="annotated.php"><span>Classes</span></a></li>
      <li class="current"><a href="files.php"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.php"><span>File&#160;List</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.php">src</a></li><li class="navelem"><a class="el" href="dir_9761b53e3d9349800c0cb59b71c8cd3d.php">Utility</a></li><li class="navelem"><a class="el" href="dir_4ba482d33c8dc209b0ed648ba592bf4f.php">Detail</a></li><li class="navelem"><a class="el" href="dir_ce41dece234368536d8c6596970bceee.php">Vector</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">NRE_Vector.hpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="_detail_2_vector_2_n_r_e___vector_8hpp.php">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;</div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="preprocessor">     #pragma once</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;</div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="preprocessor">     #include &lt;stdexcept&gt;</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="preprocessor">     #include &lt;utility&gt;</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="preprocessor">     #include &lt;cstring&gt;</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;</div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="preprocessor">     #include &quot;../../String/NRE_String.hpp&quot;</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="preprocessor">     #include &quot;../../Interfaces/Stringable/NRE_Stringable.hpp&quot;</span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="preprocessor">     #include &quot;../../Traits/NRE_TypeTraits.hpp&quot;</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;</div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="preprocessor">     #include &lt;Memory/Allocator/NRE_AllocatorTraits.hpp&gt;</span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;    </div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;    <span class="keyword">namespace </span><a class="code" href="namespace_n_r_e.php">NRE</a> {</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;        <span class="keyword">namespace </span><a class="code" href="namespace_utility.php">Utility</a> {</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;            </div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;            <span class="keyword">namespace </span>Detail {</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;    </div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;                <span class="keyword">template</span> &lt;<span class="keyword">class</span> T, <span class="keyword">class</span> Allocator&gt;</div><div class="line"><a name="l00041"></a><span class="lineno"><a class="line" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php">   41</a></span>&#160;                <span class="keyword">class </span><a class="code" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php">Vector</a> : <span class="keyword">public</span> <a class="code" href="class_n_r_e_1_1_utility_1_1_stringable.php">Stringable</a>&lt;Vector&lt;T, Allocator&gt;&gt;, <span class="keyword">public</span> Allocator {</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;                    static_assert(Memory::IsAllocatorV&lt;Allocator&gt;);                     </div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;                    static_assert(std::is_same_v&lt;T, typename Allocator::ValueType&gt;);    </div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;                    <span class="keyword">public</span> :    <span class="comment">// Traits</span></div><div class="line"><a name="l00047"></a><span class="lineno"><a class="line" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#afe57483f5b5e6af2694a084a372d224c">   47</a></span>&#160;<span class="comment"></span>                        <span class="keyword">using</span> <a class="code" href="class_n_r_e_1_1_utility_1_1_observer.php">ValueType</a>             = T;</div><div class="line"><a name="l00049"></a><span class="lineno"><a class="line" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#a1c2cdf70435eb56895d6ea0464aadc0f">   49</a></span>&#160;                        <span class="keyword">using</span> <a class="code" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#a1c2cdf70435eb56895d6ea0464aadc0f">AllocatorType</a>         = Allocator;</div><div class="line"><a name="l00051"></a><span class="lineno"><a class="line" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#ab312674a156498a72bd5e4aca800b098">   51</a></span>&#160;                        <span class="keyword">using</span> <a class="code" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#ab312674a156498a72bd5e4aca800b098">SizeType</a>              = std::size_t;</div><div class="line"><a name="l00053"></a><span class="lineno"><a class="line" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#acfb6ea52f582a024ab8f43d4c540b6fb">   53</a></span>&#160;                        <span class="keyword">using</span> <a class="code" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#acfb6ea52f582a024ab8f43d4c540b6fb">DifferenceType</a>        = std::ptrdiff_t;</div><div class="line"><a name="l00055"></a><span class="lineno"><a class="line" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#a7631518ee078f3464da147c4d52d4868">   55</a></span>&#160;                        <span class="keyword">using</span> <a class="code" href="class_n_r_e_1_1_utility_1_1_observer.php">Reference</a>             = <a class="code" href="class_n_r_e_1_1_utility_1_1_observer.php">ValueType</a>&amp;;</div><div class="line"><a name="l00057"></a><span class="lineno"><a class="line" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#a6502afbd7a842a3d6e61c7bd811ecff7">   57</a></span>&#160;                        <span class="keyword">using</span> <a class="code" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#a6502afbd7a842a3d6e61c7bd811ecff7">ConstReference</a>        = <a class="code" href="class_n_r_e_1_1_utility_1_1_observer.php">ValueType</a> <span class="keyword">const</span>&amp;;</div><div class="line"><a name="l00059"></a><span class="lineno"><a class="line" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#a031e5dcbd857faad81733cad07637ffe">   59</a></span>&#160;                        <span class="keyword">using</span> <a class="code" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#a031e5dcbd857faad81733cad07637ffe">Pointer</a>               = <span class="keyword">typename</span> AllocatorType::Pointer;</div><div class="line"><a name="l00061"></a><span class="lineno"><a class="line" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#acbb7cb5832ddc4d40051ab6bd28f5617">   61</a></span>&#160;                        <span class="keyword">using</span> <a class="code" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#acbb7cb5832ddc4d40051ab6bd28f5617">ConstPointer</a>          = <span class="keyword">typename</span> AllocatorType::ConstPointer;</div><div class="line"><a name="l00063"></a><span class="lineno"><a class="line" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#aedc34798595924837f67fe06ae52dde7">   63</a></span>&#160;                        <span class="keyword">using</span> <a class="code" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#aedc34798595924837f67fe06ae52dde7">Iterator</a>              = <a class="code" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#a031e5dcbd857faad81733cad07637ffe">Pointer</a>;</div><div class="line"><a name="l00065"></a><span class="lineno"><a class="line" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#afd29351c483eaf1b8b1322463b1ae11f">   65</a></span>&#160;                        <span class="keyword">using</span> <a class="code" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#afd29351c483eaf1b8b1322463b1ae11f">ConstIterator</a>         = <a class="code" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#acbb7cb5832ddc4d40051ab6bd28f5617">ConstPointer</a>;</div><div class="line"><a name="l00067"></a><span class="lineno"><a class="line" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#afa4905e29539752688529b811a7c86af">   67</a></span>&#160;                        <span class="keyword">using</span> <a class="code" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#afa4905e29539752688529b811a7c86af">ReverseIterator</a>       = std::reverse_iterator&lt;Iterator&gt;;</div><div class="line"><a name="l00069"></a><span class="lineno"><a class="line" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#a8e58558b1c1dc784df060e26acf9e6b3">   69</a></span>&#160;                        <span class="keyword">using</span> <a class="code" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#a8e58558b1c1dc784df060e26acf9e6b3">ConstReverseIterator</a>  = std::reverse_iterator&lt;ConstIterator&gt;;</div><div class="line"><a name="l00071"></a><span class="lineno"><a class="line" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#a5a3b1914f63f8020a45f0e6d4efca1a6">   71</a></span>&#160;                        <span class="keyword">using</span> <a class="code" href="class_n_r_e_1_1_utility_1_1_observer.php">value_type</a>            = <a class="code" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#afe57483f5b5e6af2694a084a372d224c">ValueType</a>;</div><div class="line"><a name="l00073"></a><span class="lineno"><a class="line" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#a6f8483736c3ab10b3c801351f0f7c544">   73</a></span>&#160;                        <span class="keyword">using</span> <a class="code" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#a6f8483736c3ab10b3c801351f0f7c544">allocator_type</a>        = <a class="code" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#a1c2cdf70435eb56895d6ea0464aadc0f">AllocatorType</a>;</div><div class="line"><a name="l00075"></a><span class="lineno"><a class="line" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#acd4227df24559a4ac1d0b762c1ed2cf5">   75</a></span>&#160;                        <span class="keyword">using</span> <a class="code" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#acd4227df24559a4ac1d0b762c1ed2cf5">size_type</a>             = <a class="code" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#ab312674a156498a72bd5e4aca800b098">SizeType</a>;</div><div class="line"><a name="l00077"></a><span class="lineno"><a class="line" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#aa7ea52aac53280651fd22821760d01b1">   77</a></span>&#160;                        <span class="keyword">using</span> <a class="code" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#aa7ea52aac53280651fd22821760d01b1">difference_type</a>       = <a class="code" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#acfb6ea52f582a024ab8f43d4c540b6fb">DifferenceType</a>;</div><div class="line"><a name="l00079"></a><span class="lineno"><a class="line" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#aa2e440b6a1f92e80d3c350e43856f96f">   79</a></span>&#160;                        <span class="keyword">using</span> <a class="code" href="class_n_r_e_1_1_utility_1_1_observer.php">reference</a>             = <a class="code" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#a7631518ee078f3464da147c4d52d4868">Reference</a>;</div><div class="line"><a name="l00081"></a><span class="lineno"><a class="line" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#ab1a52d0f6f9194d1040373c1baba7509">   81</a></span>&#160;                        <span class="keyword">using</span> <a class="code" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#ab1a52d0f6f9194d1040373c1baba7509">const_reference</a>       = <a class="code" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#a6502afbd7a842a3d6e61c7bd811ecff7">ConstReference</a>;</div><div class="line"><a name="l00083"></a><span class="lineno"><a class="line" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#a35bce7ca703d329523b019d1ab878426">   83</a></span>&#160;                        <span class="keyword">using</span> <a class="code" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#a35bce7ca703d329523b019d1ab878426">pointer</a>               = <a class="code" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#a031e5dcbd857faad81733cad07637ffe">Pointer</a>;</div><div class="line"><a name="l00085"></a><span class="lineno"><a class="line" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#aa261e992e18ec32649868349768dc497">   85</a></span>&#160;                        <span class="keyword">using</span> <a class="code" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#aa261e992e18ec32649868349768dc497">const_pointer</a>         = <a class="code" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#acbb7cb5832ddc4d40051ab6bd28f5617">ConstPointer</a>;</div><div class="line"><a name="l00087"></a><span class="lineno"><a class="line" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#a64cce560b28cbb50d5f712e1516f8c47">   87</a></span>&#160;                        <span class="keyword">using</span> <a class="code" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#a64cce560b28cbb50d5f712e1516f8c47">iterator</a>              = <a class="code" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#aedc34798595924837f67fe06ae52dde7">Iterator</a>;</div><div class="line"><a name="l00089"></a><span class="lineno"><a class="line" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#aeba47a9a6c630be01d06ddd2d26eb6ea">   89</a></span>&#160;                        <span class="keyword">using</span> <a class="code" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#aeba47a9a6c630be01d06ddd2d26eb6ea">const_iterator</a>        = <a class="code" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#afd29351c483eaf1b8b1322463b1ae11f">ConstIterator</a>;</div><div class="line"><a name="l00091"></a><span class="lineno"><a class="line" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#a94c32d30b090c68244c77db1cd60a169">   91</a></span>&#160;                        <span class="keyword">using</span> <a class="code" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#a94c32d30b090c68244c77db1cd60a169">reverse_iterator</a>      = <a class="code" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#afa4905e29539752688529b811a7c86af">ReverseIterator</a>;</div><div class="line"><a name="l00093"></a><span class="lineno"><a class="line" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#a3b34427c33713e00605fa1847d50d298">   93</a></span>&#160;                        <span class="keyword">using</span> <a class="code" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#a3b34427c33713e00605fa1847d50d298">const_reverse_iterator</a>= <a class="code" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#a8e58558b1c1dc784df060e26acf9e6b3">ConstReverseIterator</a>;</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;        </div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;                    <span class="keyword">private</span> :   <span class="comment">// Fields</span></div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;                        <a class="code" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#ab312674a156498a72bd5e4aca800b098">SizeType</a> length;     </div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;                        <a class="code" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#ab312674a156498a72bd5e4aca800b098">SizeType</a> capacity;   </div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;                        <a class="code" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#a031e5dcbd857faad81733cad07637ffe">Pointer</a> data;        </div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;                    <span class="keyword">public</span> :    <span class="comment">// Methods</span></div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;                        <span class="comment">//## Constructor ##//</span></div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;<span class="comment"></span>                            <a class="code" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#a95239c62edf4a9d822f3477e160b3384">Vector</a>(Allocator <span class="keyword">const</span>&amp; alloc = Allocator());</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;                            <a class="code" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#a95239c62edf4a9d822f3477e160b3384">Vector</a>(<a class="code" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#ab312674a156498a72bd5e4aca800b098">SizeType</a> count, <a class="code" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#a6502afbd7a842a3d6e61c7bd811ecff7">ConstReference</a> value, Allocator <span class="keyword">const</span>&amp; alloc = Allocator());</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;                            <a class="code" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#a95239c62edf4a9d822f3477e160b3384">Vector</a>(<a class="code" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#ab312674a156498a72bd5e4aca800b098">SizeType</a> count, Allocator <span class="keyword">const</span>&amp; alloc = Allocator());</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;                            <span class="keyword">template</span> &lt;<span class="keyword">class</span> InputIterator&gt;</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;                            <a class="code" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#a95239c62edf4a9d822f3477e160b3384">Vector</a>(<a class="code" href="struct_n_r_e_1_1_utility_1_1_input_iterator.php">InputIterator</a> <a class="code" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#a1abe614a22ed274e9ebac84e520c3524">begin</a>, <a class="code" href="struct_n_r_e_1_1_utility_1_1_input_iterator.php">InputIterator</a> <a class="code" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#a2c3f2ffdf73b574662795a0fc6512b9c">end</a>, Allocator <span class="keyword">const</span>&amp; alloc = Allocator());</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;                            <a class="code" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#a95239c62edf4a9d822f3477e160b3384">Vector</a>(std::initializer_list&lt;T&gt; init, Allocator <span class="keyword">const</span>&amp; alloc = Allocator());</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;            </div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;                        <span class="comment">//## Copy Constructor ##//</span></div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;<span class="comment"></span>                            <a class="code" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#a95239c62edf4a9d822f3477e160b3384">Vector</a>(<a class="code" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php">Vector</a> <span class="keyword">const</span>&amp; vec);</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;                            <a class="code" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#a95239c62edf4a9d822f3477e160b3384">Vector</a>(<a class="code" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php">Vector</a> <span class="keyword">const</span>&amp; vec, Allocator <span class="keyword">const</span>&amp; alloc);</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;            </div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;                        <span class="comment">//## Move Constructor ##//</span></div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;<span class="comment"></span>                            <a class="code" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#a95239c62edf4a9d822f3477e160b3384">Vector</a>(<a class="code" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php">Vector</a> &amp;&amp; vec);</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;                            <a class="code" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#a95239c62edf4a9d822f3477e160b3384">Vector</a>(<a class="code" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php">Vector</a> &amp;&amp; vec, Allocator <span class="keyword">const</span>&amp; alloc);</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;            </div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;                        <span class="comment">//## Deconstructor ##//</span></div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;<span class="comment"></span>                            <a class="code" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#a0c23d4206db910b24d944da31548806a">~Vector</a>();</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;            </div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;                        <span class="comment">//## Getter ##//</span></div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;<span class="comment"></span>                            <a class="code" href="class_n_r_e_1_1_utility_1_1_observer.php">Reference</a> <span class="keyword">get</span>(<a class="code" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#ab312674a156498a72bd5e4aca800b098">SizeType</a> index);</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;                            <a class="code" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#a6502afbd7a842a3d6e61c7bd811ecff7">ConstReference</a> <span class="keyword">get</span>(<a class="code" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#ab312674a156498a72bd5e4aca800b098">SizeType</a> index) <span class="keyword">const</span>;</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;                            <a class="code" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#a031e5dcbd857faad81733cad07637ffe">Pointer</a> <a class="code" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#a94c1b7c9da2e6f16737dfca98e9a2c6d">getData</a>();</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;                            <a class="code" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#acbb7cb5832ddc4d40051ab6bd28f5617">ConstPointer</a> <a class="code" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#a94c1b7c9da2e6f16737dfca98e9a2c6d">getData</a>() <span class="keyword">const</span>;</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;                            <a class="code" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#acbb7cb5832ddc4d40051ab6bd28f5617">ConstPointer</a> <a class="code" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#ab0406623da13793f246b93577acfbb01">getCData</a>() <span class="keyword">const</span>;</div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;                            <a class="code" href="class_n_r_e_1_1_utility_1_1_observer.php">Reference</a> <a class="code" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#ab94a642fcd8f776e2efefd858c27b878">getFront</a>();</div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;                            <a class="code" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#a6502afbd7a842a3d6e61c7bd811ecff7">ConstReference</a> <a class="code" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#ab94a642fcd8f776e2efefd858c27b878">getFront</a>() <span class="keyword">const</span>;</div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;                            <a class="code" href="class_n_r_e_1_1_utility_1_1_observer.php">Reference</a> <a class="code" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#aea32f67a58479e471b62b19fd4b4b3e0">getLast</a>();</div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;                            <a class="code" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#a6502afbd7a842a3d6e61c7bd811ecff7">ConstReference</a> <a class="code" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#aea32f67a58479e471b62b19fd4b4b3e0">getLast</a>() <span class="keyword">const</span>;</div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;                            <a class="code" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#ab312674a156498a72bd5e4aca800b098">SizeType</a> <a class="code" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#a0b5a2e2891ec0bb69091a0903f2165b8">getSize</a>() <span class="keyword">const</span>;</div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;                            constexpr <a class="code" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#ab312674a156498a72bd5e4aca800b098">SizeType</a> <a class="code" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#ab9fb5fc358fabd54d8561c60c472574a">getMaxSize</a>() <span class="keyword">const</span>;</div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;                            <a class="code" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#ab312674a156498a72bd5e4aca800b098">SizeType</a> <a class="code" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#a94796177211da4f68e8b2cb02ee14801">getCapacity</a>() <span class="keyword">const</span>;</div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;                            Allocator <a class="code" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#a0fbc2d4eab54cf9dd85d0f2c8215a6bf">getAllocator</a>() <span class="keyword">const</span>;</div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;                            <span class="keywordtype">bool</span> <a class="code" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#ac13bd8ac0869f6529a677462ded42de3">isEmpty</a>() <span class="keyword">const</span>;</div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;            </div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;                        <span class="comment">//## Iterator Access ##//</span></div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;<span class="comment"></span>                            <a class="code" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#aedc34798595924837f67fe06ae52dde7">Iterator</a> <a class="code" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#a1abe614a22ed274e9ebac84e520c3524">begin</a>();</div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;                            <a class="code" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#afd29351c483eaf1b8b1322463b1ae11f">ConstIterator</a> <a class="code" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#a1abe614a22ed274e9ebac84e520c3524">begin</a>() <span class="keyword">const</span>;</div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;                            <a class="code" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#afd29351c483eaf1b8b1322463b1ae11f">ConstIterator</a> <a class="code" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#a1df24fb0383b319fd7c3112ac2a190aa">cbegin</a>() <span class="keyword">const</span>;</div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;                            <a class="code" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#aedc34798595924837f67fe06ae52dde7">Iterator</a> <a class="code" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#a2c3f2ffdf73b574662795a0fc6512b9c">end</a>();</div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;                            <a class="code" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#afd29351c483eaf1b8b1322463b1ae11f">ConstIterator</a> <a class="code" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#a2c3f2ffdf73b574662795a0fc6512b9c">end</a>() <span class="keyword">const</span>;</div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;                            <a class="code" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#afd29351c483eaf1b8b1322463b1ae11f">ConstIterator</a> <a class="code" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#aef9f09e0e013ec41084a035533df3fd3">cend</a>() <span class="keyword">const</span>;</div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;                            <a class="code" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#afa4905e29539752688529b811a7c86af">ReverseIterator</a> <a class="code" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#ac13d1c1303680cc7bcd0ec2d3a407af4">rbegin</a>();</div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;                            <a class="code" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#a8e58558b1c1dc784df060e26acf9e6b3">ConstReverseIterator</a> <a class="code" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#ac13d1c1303680cc7bcd0ec2d3a407af4">rbegin</a>() <span class="keyword">const</span>;</div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;                            <a class="code" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#a8e58558b1c1dc784df060e26acf9e6b3">ConstReverseIterator</a> <a class="code" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#ad6197e58dd5d5e23a2ddedbc3087e22d">crbegin</a>() <span class="keyword">const</span>;</div><div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;                            <a class="code" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#afa4905e29539752688529b811a7c86af">ReverseIterator</a> <a class="code" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#ada0ffe9ca30025badc0f9b7ad29624ef">rend</a>();</div><div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;                            <a class="code" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#a8e58558b1c1dc784df060e26acf9e6b3">ConstReverseIterator</a> <a class="code" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#ada0ffe9ca30025badc0f9b7ad29624ef">rend</a>() <span class="keyword">const</span>;</div><div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;                            <a class="code" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#a8e58558b1c1dc784df060e26acf9e6b3">ConstReverseIterator</a> <a class="code" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#aa26af279a6a53b910b4455f87e6baff6">crend</a>() <span class="keyword">const</span>;</div><div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;            </div><div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;                        <span class="comment">//## Methods ##//</span></div><div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;<span class="comment"></span>                            <span class="keywordtype">void</span> <a class="code" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#a8710259caea8c9b2eebca8dded618ffe">assign</a>(<a class="code" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#ab312674a156498a72bd5e4aca800b098">SizeType</a> count, <a class="code" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#a6502afbd7a842a3d6e61c7bd811ecff7">ConstReference</a> value);</div><div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;                            <span class="keyword">template</span> &lt;<span class="keyword">class</span> InputIterator&gt;</div><div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;                            <span class="keywordtype">void</span> <a class="code" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#a8710259caea8c9b2eebca8dded618ffe">assign</a>(<a class="code" href="struct_n_r_e_1_1_utility_1_1_input_iterator.php">InputIterator</a> begin, <a class="code" href="struct_n_r_e_1_1_utility_1_1_input_iterator.php">InputIterator</a> end);</div><div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;                            <span class="keywordtype">void</span> <a class="code" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#ab25363b62250ec80597b37304db65a43">reserve</a>(<a class="code" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#ab312674a156498a72bd5e4aca800b098">SizeType</a> size);</div><div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;                            <span class="keyword">template</span> &lt;<span class="keyword">class</span> K = T, <span class="keyword">typename</span> Utility::UseIfNotTriviallyCopyable&lt;K&gt; = 0&gt;</div><div class="line"><a name="l00308"></a><span class="lineno"><a class="line" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#a23fb70800379b23cf7810e7bbc36ef72">  308</a></span>&#160;                            <span class="keywordtype">void</span> <a class="code" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#a23fb70800379b23cf7810e7bbc36ef72">clear</a>() noexcept {</div><div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;                                <span class="keywordflow">for</span> (<a class="code" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#ab312674a156498a72bd5e4aca800b098">SizeType</a> i = 0; i &lt; length; i++) {</div><div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;                                    this-&gt;destroy(&amp;data[i]);</div><div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;                                }</div><div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;                                length = 0;</div><div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;                            }</div><div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;                            <span class="keyword">template</span> &lt;<span class="keyword">class</span> K = T, <span class="keyword">typename</span> Utility::UseIfTriviallyCopyable&lt;K&gt; = 0&gt;</div><div class="line"><a name="l00318"></a><span class="lineno"><a class="line" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#a23fb70800379b23cf7810e7bbc36ef72">  318</a></span>&#160;                            <span class="keywordtype">void</span> <a class="code" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#a23fb70800379b23cf7810e7bbc36ef72">clear</a>() noexcept {</div><div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;                                length = 0;</div><div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;                            }</div><div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;                            <a class="code" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#aedc34798595924837f67fe06ae52dde7">Iterator</a> <a class="code" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#a3cfc497f11ae9e5c6fc0199443b758a6">insert</a>(<a class="code" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#afd29351c483eaf1b8b1322463b1ae11f">ConstIterator</a> start, <a class="code" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#a6502afbd7a842a3d6e61c7bd811ecff7">ConstReference</a> value);</div><div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;                            <a class="code" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#aedc34798595924837f67fe06ae52dde7">Iterator</a> <a class="code" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#a3cfc497f11ae9e5c6fc0199443b758a6">insert</a>(<a class="code" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#afd29351c483eaf1b8b1322463b1ae11f">ConstIterator</a> start, <a class="code" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#ab312674a156498a72bd5e4aca800b098">SizeType</a> count, <a class="code" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#a6502afbd7a842a3d6e61c7bd811ecff7">ConstReference</a> value);</div><div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;                            <span class="keyword">template</span> &lt;<span class="keyword">class</span> InputIterator&gt;</div><div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;                            <a class="code" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#aedc34798595924837f67fe06ae52dde7">Iterator</a> <a class="code" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#a3cfc497f11ae9e5c6fc0199443b758a6">insert</a>(<a class="code" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#afd29351c483eaf1b8b1322463b1ae11f">ConstIterator</a> start, <a class="code" href="struct_n_r_e_1_1_utility_1_1_input_iterator.php">InputIterator</a> begin, <a class="code" href="struct_n_r_e_1_1_utility_1_1_input_iterator.php">InputIterator</a> end);</div><div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;                            <a class="code" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#aedc34798595924837f67fe06ae52dde7">Iterator</a> <a class="code" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#a3cfc497f11ae9e5c6fc0199443b758a6">insert</a>(<a class="code" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#afd29351c483eaf1b8b1322463b1ae11f">ConstIterator</a> start, std::initializer_list&lt;T&gt; list);</div><div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;                            <span class="keyword">template</span> &lt;<span class="keyword">class </span>... Args&gt;</div><div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;                            <a class="code" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#aedc34798595924837f67fe06ae52dde7">Iterator</a> <a class="code" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#abcadcf54eacb239586f40c09fb0d97f5">emplace</a>(<a class="code" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#afd29351c483eaf1b8b1322463b1ae11f">ConstIterator</a> start, Args &amp;&amp; ... args);</div><div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;                            <a class="code" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#aedc34798595924837f67fe06ae52dde7">Iterator</a> <a class="code" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#a3c485155d0937170d9f0d8b437f34682">erase</a>(<a class="code" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#afd29351c483eaf1b8b1322463b1ae11f">ConstIterator</a> pos);</div><div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;                            <a class="code" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#aedc34798595924837f67fe06ae52dde7">Iterator</a> <a class="code" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#a3c485155d0937170d9f0d8b437f34682">erase</a>(<a class="code" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#afd29351c483eaf1b8b1322463b1ae11f">ConstIterator</a> begin, <a class="code" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#afd29351c483eaf1b8b1322463b1ae11f">ConstIterator</a> end);</div><div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;                            <span class="keywordtype">void</span> <a class="code" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#ac807a2b9a37baaecd2a01efa79edc03d">pushBack</a>(<a class="code" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#a6502afbd7a842a3d6e61c7bd811ecff7">ConstReference</a> value);</div><div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;                            <span class="keywordtype">void</span> <a class="code" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#ac807a2b9a37baaecd2a01efa79edc03d">pushBack</a>(T &amp;&amp; value);</div><div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;                            <span class="keyword">template</span> &lt;<span class="keyword">class </span>... Args&gt;</div><div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;                            <span class="keywordtype">void</span> <a class="code" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#ae8b416315bae841565efbf9c23e668f8">emplaceBack</a>(Args &amp;&amp; ... args);</div><div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;                            <span class="keyword">template</span> &lt;<span class="keyword">class</span> K = T, <span class="keyword">typename</span> Utility::UseIfNotTriviallyCopyable&lt;K&gt; = 0&gt;</div><div class="line"><a name="l00398"></a><span class="lineno"><a class="line" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#a4e77cf42a0a643c430e9a2b2f11eff24">  398</a></span>&#160;                            <span class="keywordtype">void</span> <a class="code" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#a4e77cf42a0a643c430e9a2b2f11eff24">popBack</a>() {</div><div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;                                this-&gt;destroy(<a class="code" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#a2c3f2ffdf73b574662795a0fc6512b9c">end</a>() - 1);</div><div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;                                length--;</div><div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;                            }</div><div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;                            <span class="keyword">template</span> &lt;<span class="keyword">class</span> K = T, <span class="keyword">typename</span> Utility::UseIfTriviallyCopyable&lt;K&gt; = 0&gt;</div><div class="line"><a name="l00406"></a><span class="lineno"><a class="line" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#a4e77cf42a0a643c430e9a2b2f11eff24">  406</a></span>&#160;                            <span class="keywordtype">void</span> <a class="code" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#a4e77cf42a0a643c430e9a2b2f11eff24">popBack</a>() {</div><div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;                                length--;</div><div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;                            }</div><div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;                            <span class="keywordtype">void</span> <a class="code" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#a6d452642de72eb8ce9f74266738c304a">resize</a>(<a class="code" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#ab312674a156498a72bd5e4aca800b098">SizeType</a> count);</div><div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;                            <span class="keywordtype">void</span> <a class="code" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#a6d452642de72eb8ce9f74266738c304a">resize</a>(<a class="code" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#ab312674a156498a72bd5e4aca800b098">SizeType</a> count, <a class="code" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#a6502afbd7a842a3d6e61c7bd811ecff7">ConstReference</a> value);</div><div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160;                            <span class="keywordtype">void</span> <a class="code" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#ac6b7e9c39526b1e8561b7f0f7d38ebce">swap</a>(<a class="code" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php">Vector</a>&amp; vec);</div><div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;                            <span class="keywordtype">void</span> <a class="code" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#a46a4c0422c3f42e1d742e31610e98026">shrinkToFit</a>();</div><div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;            </div><div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160;                        <span class="comment">//## Access Operator ##//</span></div><div class="line"><a name="l00436"></a><span class="lineno">  436</span>&#160;<span class="comment"></span>                            <a class="code" href="class_n_r_e_1_1_utility_1_1_observer.php">Reference</a> <a class="code" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#a6336c5fb6c7e89d27ca76c8f22a75c02">operator []</a>(<a class="code" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#ab312674a156498a72bd5e4aca800b098">SizeType</a> index);</div><div class="line"><a name="l00442"></a><span class="lineno">  442</span>&#160;                            <a class="code" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#a6502afbd7a842a3d6e61c7bd811ecff7">ConstReference</a> <a class="code" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#a6336c5fb6c7e89d27ca76c8f22a75c02">operator []</a>(<a class="code" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#ab312674a156498a72bd5e4aca800b098">SizeType</a> index) <span class="keyword">const</span>;</div><div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160;            </div><div class="line"><a name="l00444"></a><span class="lineno">  444</span>&#160;                        <span class="comment">//## Assignment Operator ##//</span></div><div class="line"><a name="l00450"></a><span class="lineno">  450</span>&#160;<span class="comment"></span>                            <a class="code" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php">Vector</a>&amp; <a class="code" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#ad92da6acc69662d67d7460f2d054e174">operator =</a>(<a class="code" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php">Vector</a> <span class="keyword">const</span>&amp; vec);</div><div class="line"><a name="l00456"></a><span class="lineno">  456</span>&#160;                            <a class="code" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php">Vector</a>&amp; <a class="code" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#ad92da6acc69662d67d7460f2d054e174">operator =</a>(<a class="code" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php">Vector</a> &amp;&amp; vec);</div><div class="line"><a name="l00457"></a><span class="lineno">  457</span>&#160;            </div><div class="line"><a name="l00458"></a><span class="lineno">  458</span>&#160;                        <span class="comment">//## Comparison Operator ##//</span></div><div class="line"><a name="l00464"></a><span class="lineno">  464</span>&#160;<span class="comment"></span>                            <span class="keyword">template</span> &lt;<span class="keyword">class</span> K = T, <span class="keyword">typename</span> Utility::UseIfNotTriviallyCopyable&lt;K&gt; = 0&gt;</div><div class="line"><a name="l00465"></a><span class="lineno"><a class="line" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#a0bb6bac0fb6bf6094ef30743b5a3b5eb">  465</a></span>&#160;                            <span class="keywordtype">bool</span> <a class="code" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#a0bb6bac0fb6bf6094ef30743b5a3b5eb">operator ==</a>(<a class="code" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php">Vector</a> <span class="keyword">const</span>&amp; vec)<span class="keyword"> const </span>{</div><div class="line"><a name="l00466"></a><span class="lineno">  466</span>&#160;                                <span class="keywordtype">bool</span> equal = <span class="keyword">true</span>;</div><div class="line"><a name="l00467"></a><span class="lineno">  467</span>&#160;                                <a class="code" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#ab312674a156498a72bd5e4aca800b098">SizeType</a> current = 0;</div><div class="line"><a name="l00468"></a><span class="lineno">  468</span>&#160;                                <span class="keywordflow">while</span> (equal &amp;&amp; current &lt; length) {</div><div class="line"><a name="l00469"></a><span class="lineno">  469</span>&#160;                                    equal = data[current] == vec[current];</div><div class="line"><a name="l00470"></a><span class="lineno">  470</span>&#160;                                    current++;</div><div class="line"><a name="l00471"></a><span class="lineno">  471</span>&#160;                                }</div><div class="line"><a name="l00472"></a><span class="lineno">  472</span>&#160;                                <span class="keywordflow">return</span> equal;</div><div class="line"><a name="l00473"></a><span class="lineno">  473</span>&#160;                            }</div><div class="line"><a name="l00479"></a><span class="lineno">  479</span>&#160;                            <span class="keyword">template</span> &lt;<span class="keyword">class</span> K = T, <span class="keyword">typename</span> Utility::UseIfTriviallyCopyable&lt;K&gt; = 0&gt;</div><div class="line"><a name="l00480"></a><span class="lineno"><a class="line" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#a0bb6bac0fb6bf6094ef30743b5a3b5eb">  480</a></span>&#160;                            <span class="keywordtype">bool</span> <a class="code" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#a0bb6bac0fb6bf6094ef30743b5a3b5eb">operator ==</a>(<a class="code" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php">Vector</a> <span class="keyword">const</span>&amp; vec)<span class="keyword"> const </span>{</div><div class="line"><a name="l00481"></a><span class="lineno">  481</span>&#160;                                <span class="keywordflow">if</span> (length != vec.length) {</div><div class="line"><a name="l00482"></a><span class="lineno">  482</span>&#160;                                    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div><div class="line"><a name="l00483"></a><span class="lineno">  483</span>&#160;                                }</div><div class="line"><a name="l00484"></a><span class="lineno">  484</span>&#160;                                <span class="keywordflow">return</span> std::memcmp(data, vec.data, length * <span class="keyword">sizeof</span>(T)) == 0;</div><div class="line"><a name="l00485"></a><span class="lineno">  485</span>&#160;                            }</div><div class="line"><a name="l00491"></a><span class="lineno">  491</span>&#160;                            <span class="keywordtype">bool</span> <a class="code" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#a72fad357a18fe48e6b8a34fa5702e042">operator !=</a>(<a class="code" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php">Vector</a> <span class="keyword">const</span>&amp; vec) <span class="keyword">const</span>;</div><div class="line"><a name="l00492"></a><span class="lineno">  492</span>&#160;            </div><div class="line"><a name="l00493"></a><span class="lineno">  493</span>&#160;                        <span class="comment">//## Stream Operator ##//</span></div><div class="line"><a name="l00498"></a><span class="lineno">  498</span>&#160;<span class="comment"></span>                            [[nodiscard]] <a class="code" href="class_n_r_e_1_1_utility_1_1_basic_string.php">String</a> <a class="code" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#a04ab36fc8f70ddfa0016d01c8b896bed">toString</a>() <span class="keyword">const</span>;</div><div class="line"><a name="l00499"></a><span class="lineno">  499</span>&#160;        </div><div class="line"><a name="l00500"></a><span class="lineno">  500</span>&#160;                    <span class="keyword">private</span> :   <span class="comment">// Methods</span></div><div class="line"><a name="l00504"></a><span class="lineno">  504</span>&#160;<span class="comment"></span>                        <span class="keywordtype">void</span> reallocate();</div><div class="line"><a name="l00509"></a><span class="lineno">  509</span>&#160;                        <span class="keyword">template</span> &lt;<span class="keyword">class</span> K = T, <span class="keyword">typename</span> Utility::UseIfNotTriviallyCopyable&lt;K&gt; = 0&gt;</div><div class="line"><a name="l00510"></a><span class="lineno">  510</span>&#160;                        <span class="keywordtype">void</span> reallocate(<a class="code" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#ab312674a156498a72bd5e4aca800b098">SizeType</a> newSize) {</div><div class="line"><a name="l00511"></a><span class="lineno">  511</span>&#160;                            <a class="code" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#ab312674a156498a72bd5e4aca800b098">SizeType</a> tmp = capacity;</div><div class="line"><a name="l00512"></a><span class="lineno">  512</span>&#160;                            capacity = newSize;</div><div class="line"><a name="l00513"></a><span class="lineno">  513</span>&#160;                            <a class="code" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#a031e5dcbd857faad81733cad07637ffe">Pointer</a> newData = this-&gt;allocate(capacity);</div><div class="line"><a name="l00514"></a><span class="lineno">  514</span>&#160;                </div><div class="line"><a name="l00515"></a><span class="lineno">  515</span>&#160;                            <span class="keywordflow">for</span> (<a class="code" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#ab312674a156498a72bd5e4aca800b098">SizeType</a> current = 0; current &lt; length; current++) {</div><div class="line"><a name="l00516"></a><span class="lineno">  516</span>&#160;                                this-&gt;construct(&amp;newData[current], std::move(data[current]));</div><div class="line"><a name="l00517"></a><span class="lineno">  517</span>&#160;                            }</div><div class="line"><a name="l00518"></a><span class="lineno">  518</span>&#160;                            this-&gt;deallocate(data, tmp);</div><div class="line"><a name="l00519"></a><span class="lineno">  519</span>&#160;                            data = newData;</div><div class="line"><a name="l00520"></a><span class="lineno">  520</span>&#160;                        }</div><div class="line"><a name="l00525"></a><span class="lineno">  525</span>&#160;                        <span class="keyword">template</span> &lt;<span class="keyword">class</span> K = T, <span class="keyword">typename</span> Utility::UseIfTriviallyCopyable&lt;K&gt; = 0&gt;</div><div class="line"><a name="l00526"></a><span class="lineno">  526</span>&#160;                        <span class="keywordtype">void</span> reallocate(<a class="code" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#ab312674a156498a72bd5e4aca800b098">SizeType</a> newSize) {</div><div class="line"><a name="l00527"></a><span class="lineno">  527</span>&#160;                            <a class="code" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#ab312674a156498a72bd5e4aca800b098">SizeType</a> tmp = capacity;</div><div class="line"><a name="l00528"></a><span class="lineno">  528</span>&#160;                            capacity = newSize;</div><div class="line"><a name="l00529"></a><span class="lineno">  529</span>&#160;                            <a class="code" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#a031e5dcbd857faad81733cad07637ffe">Pointer</a> newData = this-&gt;allocate(capacity);</div><div class="line"><a name="l00530"></a><span class="lineno">  530</span>&#160;                </div><div class="line"><a name="l00531"></a><span class="lineno">  531</span>&#160;                            std::memmove(newData, data, length * <span class="keyword">sizeof</span>(T));</div><div class="line"><a name="l00532"></a><span class="lineno">  532</span>&#160;                            this-&gt;deallocate(data, tmp);</div><div class="line"><a name="l00533"></a><span class="lineno">  533</span>&#160;                            data = newData;</div><div class="line"><a name="l00534"></a><span class="lineno">  534</span>&#160;                        }</div><div class="line"><a name="l00539"></a><span class="lineno">  539</span>&#160;                        <span class="keywordtype">void</span> reserveWithGrowFactor(<a class="code" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#ab312674a156498a72bd5e4aca800b098">SizeType</a> size);</div><div class="line"><a name="l00545"></a><span class="lineno">  545</span>&#160;                        <span class="keyword">template</span> &lt;<span class="keyword">class</span> K = T, <span class="keyword">typename</span> Utility::UseIfNotTriviallyCopyable&lt;K&gt; = 0&gt;</div><div class="line"><a name="l00546"></a><span class="lineno">  546</span>&#160;                        <span class="keywordtype">void</span> shift(<a class="code" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#ab312674a156498a72bd5e4aca800b098">SizeType</a> start, <a class="code" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#ab312674a156498a72bd5e4aca800b098">SizeType</a> count) {</div><div class="line"><a name="l00547"></a><span class="lineno">  547</span>&#160;                            <span class="keywordflow">for</span> (<a class="code" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#ab312674a156498a72bd5e4aca800b098">SizeType</a> index = length + count - 1; index != start + count - 1; index--) {</div><div class="line"><a name="l00548"></a><span class="lineno">  548</span>&#160;                                this-&gt;construct(&amp;data[index], std::move(data[index - count]));</div><div class="line"><a name="l00549"></a><span class="lineno">  549</span>&#160;                            }</div><div class="line"><a name="l00550"></a><span class="lineno">  550</span>&#160;                        }</div><div class="line"><a name="l00556"></a><span class="lineno">  556</span>&#160;                        <span class="keyword">template</span> &lt;<span class="keyword">class</span> K = T, <span class="keyword">typename</span> Utility::UseIfTriviallyCopyable&lt;K&gt; = 0&gt;</div><div class="line"><a name="l00557"></a><span class="lineno">  557</span>&#160;                        <span class="keywordtype">void</span> shift(<a class="code" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#ab312674a156498a72bd5e4aca800b098">SizeType</a> start, <a class="code" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#ab312674a156498a72bd5e4aca800b098">SizeType</a> count) {</div><div class="line"><a name="l00558"></a><span class="lineno">  558</span>&#160;                            std::memmove(data + start + count, data + start, (length - start) * <span class="keyword">sizeof</span>(T));</div><div class="line"><a name="l00559"></a><span class="lineno">  559</span>&#160;                        }</div><div class="line"><a name="l00565"></a><span class="lineno">  565</span>&#160;                        <span class="keyword">template</span> &lt;<span class="keyword">class</span> K = T, <span class="keyword">typename</span> Utility::UseIfNotTriviallyCopyable&lt;K&gt; = 0&gt;</div><div class="line"><a name="l00566"></a><span class="lineno">  566</span>&#160;                        <span class="keywordtype">void</span> shiftBack(<a class="code" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#ab312674a156498a72bd5e4aca800b098">SizeType</a> start, <a class="code" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#ab312674a156498a72bd5e4aca800b098">SizeType</a> count) {</div><div class="line"><a name="l00567"></a><span class="lineno">  567</span>&#160;                            <span class="keywordflow">for</span> (<a class="code" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#ab312674a156498a72bd5e4aca800b098">SizeType</a> index = start; index &lt; start + count; index++) {</div><div class="line"><a name="l00568"></a><span class="lineno">  568</span>&#160;                                this-&gt;construct(&amp;data[index], std::move(data[index + count]));</div><div class="line"><a name="l00569"></a><span class="lineno">  569</span>&#160;                            }</div><div class="line"><a name="l00570"></a><span class="lineno">  570</span>&#160;                        }</div><div class="line"><a name="l00576"></a><span class="lineno">  576</span>&#160;                        <span class="keyword">template</span> &lt;<span class="keyword">class</span> K = T, <span class="keyword">typename</span> Utility::UseIfTriviallyCopyable&lt;K&gt; = 0&gt;</div><div class="line"><a name="l00577"></a><span class="lineno">  577</span>&#160;                        <span class="keywordtype">void</span> shiftBack(<a class="code" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#ab312674a156498a72bd5e4aca800b098">SizeType</a> start, <a class="code" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#ab312674a156498a72bd5e4aca800b098">SizeType</a> count) {</div><div class="line"><a name="l00578"></a><span class="lineno">  578</span>&#160;                            std::memmove(data + start, data + start + count, (length - start) * <span class="keyword">sizeof</span>(T));</div><div class="line"><a name="l00579"></a><span class="lineno">  579</span>&#160;                        }</div><div class="line"><a name="l00584"></a><span class="lineno">  584</span>&#160;                        <span class="keyword">template</span> &lt;<span class="keyword">class</span> K = T, <span class="keyword">typename</span> Utility::UseIfNotTriviallyCopyable&lt;K&gt; = 0&gt;</div><div class="line"><a name="l00585"></a><span class="lineno">  585</span>&#160;                        <span class="keywordtype">void</span> copy(<a class="code" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php">Vector</a> <span class="keyword">const</span>&amp; vec) {</div><div class="line"><a name="l00586"></a><span class="lineno">  586</span>&#160;                            <a class="code" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#ab312674a156498a72bd5e4aca800b098">SizeType</a> current = 0;</div><div class="line"><a name="l00587"></a><span class="lineno">  587</span>&#160;                            <span class="keywordflow">for</span> (<a class="code" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#a6502afbd7a842a3d6e61c7bd811ecff7">ConstReference</a> it : vec) {</div><div class="line"><a name="l00588"></a><span class="lineno">  588</span>&#160;                                this-&gt;construct(&amp;data[current], it);</div><div class="line"><a name="l00589"></a><span class="lineno">  589</span>&#160;                                current++;</div><div class="line"><a name="l00590"></a><span class="lineno">  590</span>&#160;                            }</div><div class="line"><a name="l00591"></a><span class="lineno">  591</span>&#160;                        }</div><div class="line"><a name="l00596"></a><span class="lineno">  596</span>&#160;                        <span class="keyword">template</span> &lt;<span class="keyword">class</span> K = T, <span class="keyword">typename</span> Utility::UseIfTriviallyCopyable&lt;K&gt; = 0&gt;</div><div class="line"><a name="l00597"></a><span class="lineno">  597</span>&#160;                        <span class="keywordtype">void</span> copy(<a class="code" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php">Vector</a> <span class="keyword">const</span>&amp; vec) {</div><div class="line"><a name="l00598"></a><span class="lineno">  598</span>&#160;                            std::memcpy(data, vec.data, vec.length * <span class="keyword">sizeof</span>(T));</div><div class="line"><a name="l00599"></a><span class="lineno">  599</span>&#160;                        }</div><div class="line"><a name="l00600"></a><span class="lineno">  600</span>&#160;        </div><div class="line"><a name="l00601"></a><span class="lineno">  601</span>&#160;                    <span class="keyword">private</span> :    <span class="comment">// Static</span></div><div class="line"><a name="l00602"></a><span class="lineno">  602</span>&#160;                        <span class="keyword">static</span> constexpr <span class="keywordtype">float</span> GROW_FACTOR = 2;                 </div><div class="line"><a name="l00603"></a><span class="lineno">  603</span>&#160;                        <span class="keyword">static</span> constexpr <a class="code" href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#ab312674a156498a72bd5e4aca800b098">SizeType</a> BASE_ALLOCATION_SIZE = 16;    </div><div class="line"><a name="l00604"></a><span class="lineno">  604</span>&#160;                };</div><div class="line"><a name="l00605"></a><span class="lineno">  605</span>&#160;            }</div><div class="line"><a name="l00606"></a><span class="lineno">  606</span>&#160;        }</div><div class="line"><a name="l00607"></a><span class="lineno">  607</span>&#160;    }</div><div class="line"><a name="l00608"></a><span class="lineno">  608</span>&#160;</div><div class="line"><a name="l00609"></a><span class="lineno">  609</span>&#160;<span class="preprocessor">    #include &quot;NRE_Vector.tpp&quot;</span></div><div class="ttc" id="class_n_r_e_1_1_utility_1_1_detail_1_1_vector_php_ae8b416315bae841565efbf9c23e668f8"><div class="ttname"><a href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#ae8b416315bae841565efbf9c23e668f8">NRE::Utility::Detail::Vector::emplaceBack</a></div><div class="ttdeci">void emplaceBack(Args &amp;&amp;...args)</div></div>
<div class="ttc" id="class_n_r_e_1_1_utility_1_1_detail_1_1_vector_php_afe57483f5b5e6af2694a084a372d224c"><div class="ttname"><a href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#afe57483f5b5e6af2694a084a372d224c">NRE::Utility::Detail::Vector::ValueType</a></div><div class="ttdeci">T ValueType</div><div class="ttdef"><b>Definition:</b> NRE_Vector.hpp:47</div></div>
<div class="ttc" id="class_n_r_e_1_1_utility_1_1_detail_1_1_vector_php_a0fbc2d4eab54cf9dd85d0f2c8215a6bf"><div class="ttname"><a href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#a0fbc2d4eab54cf9dd85d0f2c8215a6bf">NRE::Utility::Detail::Vector::getAllocator</a></div><div class="ttdeci">Allocator getAllocator() const </div></div>
<div class="ttc" id="class_n_r_e_1_1_utility_1_1_detail_1_1_vector_php_aef9f09e0e013ec41084a035533df3fd3"><div class="ttname"><a href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#aef9f09e0e013ec41084a035533df3fd3">NRE::Utility::Detail::Vector::cend</a></div><div class="ttdeci">ConstIterator cend() const </div></div>
<div class="ttc" id="class_n_r_e_1_1_utility_1_1_detail_1_1_vector_php_a8710259caea8c9b2eebca8dded618ffe"><div class="ttname"><a href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#a8710259caea8c9b2eebca8dded618ffe">NRE::Utility::Detail::Vector::assign</a></div><div class="ttdeci">void assign(SizeType count, ConstReference value)</div></div>
<div class="ttc" id="class_n_r_e_1_1_utility_1_1_detail_1_1_vector_php_a6502afbd7a842a3d6e61c7bd811ecff7"><div class="ttname"><a href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#a6502afbd7a842a3d6e61c7bd811ecff7">NRE::Utility::Detail::Vector&lt; Observer * &gt;::ConstReference</a></div><div class="ttdeci">ValueType const &amp; ConstReference</div><div class="ttdef"><b>Definition:</b> NRE_Vector.hpp:57</div></div>
<div class="ttc" id="class_n_r_e_1_1_utility_1_1_detail_1_1_vector_php_a64cce560b28cbb50d5f712e1516f8c47"><div class="ttname"><a href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#a64cce560b28cbb50d5f712e1516f8c47">NRE::Utility::Detail::Vector&lt; Observer * &gt;::iterator</a></div><div class="ttdeci">Iterator iterator</div><div class="ttdef"><b>Definition:</b> NRE_Vector.hpp:87</div></div>
<div class="ttc" id="class_n_r_e_1_1_utility_1_1_detail_1_1_vector_php_a0b5a2e2891ec0bb69091a0903f2165b8"><div class="ttname"><a href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#a0b5a2e2891ec0bb69091a0903f2165b8">NRE::Utility::Detail::Vector::getSize</a></div><div class="ttdeci">SizeType getSize() const </div></div>
<div class="ttc" id="class_n_r_e_1_1_utility_1_1_detail_1_1_vector_php_a3c485155d0937170d9f0d8b437f34682"><div class="ttname"><a href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#a3c485155d0937170d9f0d8b437f34682">NRE::Utility::Detail::Vector::erase</a></div><div class="ttdeci">Iterator erase(ConstIterator pos)</div></div>
<div class="ttc" id="class_n_r_e_1_1_utility_1_1_detail_1_1_vector_php_aeba47a9a6c630be01d06ddd2d26eb6ea"><div class="ttname"><a href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#aeba47a9a6c630be01d06ddd2d26eb6ea">NRE::Utility::Detail::Vector&lt; Observer * &gt;::const_iterator</a></div><div class="ttdeci">ConstIterator const_iterator</div><div class="ttdef"><b>Definition:</b> NRE_Vector.hpp:89</div></div>
<div class="ttc" id="class_n_r_e_1_1_utility_1_1_detail_1_1_vector_php_a8e58558b1c1dc784df060e26acf9e6b3"><div class="ttname"><a href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#a8e58558b1c1dc784df060e26acf9e6b3">NRE::Utility::Detail::Vector&lt; Observer * &gt;::ConstReverseIterator</a></div><div class="ttdeci">std::reverse_iterator&lt; ConstIterator &gt; ConstReverseIterator</div><div class="ttdef"><b>Definition:</b> NRE_Vector.hpp:69</div></div>
<div class="ttc" id="class_n_r_e_1_1_utility_1_1_detail_1_1_vector_php_afa4905e29539752688529b811a7c86af"><div class="ttname"><a href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#afa4905e29539752688529b811a7c86af">NRE::Utility::Detail::Vector&lt; Observer * &gt;::ReverseIterator</a></div><div class="ttdeci">std::reverse_iterator&lt; Iterator &gt; ReverseIterator</div><div class="ttdef"><b>Definition:</b> NRE_Vector.hpp:67</div></div>
<div class="ttc" id="class_n_r_e_1_1_utility_1_1_detail_1_1_vector_php_ada0ffe9ca30025badc0f9b7ad29624ef"><div class="ttname"><a href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#ada0ffe9ca30025badc0f9b7ad29624ef">NRE::Utility::Detail::Vector::rend</a></div><div class="ttdeci">ReverseIterator rend()</div></div>
<div class="ttc" id="class_n_r_e_1_1_utility_1_1_stringable_php"><div class="ttname"><a href="class_n_r_e_1_1_utility_1_1_stringable.php">NRE::Utility::Stringable</a></div><div class="ttdoc">Describe an stringable object. </div><div class="ttdef"><b>Definition:</b> NRE_Stringable.hpp:33</div></div>
<div class="ttc" id="class_n_r_e_1_1_utility_1_1_detail_1_1_vector_php_a0c23d4206db910b24d944da31548806a"><div class="ttname"><a href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#a0c23d4206db910b24d944da31548806a">NRE::Utility::Detail::Vector::~Vector</a></div><div class="ttdeci">~Vector()</div></div>
<div class="ttc" id="class_n_r_e_1_1_utility_1_1_detail_1_1_vector_php_ad92da6acc69662d67d7460f2d054e174"><div class="ttname"><a href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#ad92da6acc69662d67d7460f2d054e174">NRE::Utility::Detail::Vector::operator=</a></div><div class="ttdeci">Vector &amp; operator=(Vector const &amp;vec)</div></div>
<div class="ttc" id="class_n_r_e_1_1_utility_1_1_detail_1_1_vector_php_ac13d1c1303680cc7bcd0ec2d3a407af4"><div class="ttname"><a href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#ac13d1c1303680cc7bcd0ec2d3a407af4">NRE::Utility::Detail::Vector::rbegin</a></div><div class="ttdeci">ReverseIterator rbegin()</div></div>
<div class="ttc" id="class_n_r_e_1_1_utility_1_1_detail_1_1_vector_php_afd29351c483eaf1b8b1322463b1ae11f"><div class="ttname"><a href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#afd29351c483eaf1b8b1322463b1ae11f">NRE::Utility::Detail::Vector&lt; Observer * &gt;::ConstIterator</a></div><div class="ttdeci">ConstPointer ConstIterator</div><div class="ttdef"><b>Definition:</b> NRE_Vector.hpp:65</div></div>
<div class="ttc" id="class_n_r_e_1_1_utility_1_1_detail_1_1_vector_php_a7631518ee078f3464da147c4d52d4868"><div class="ttname"><a href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#a7631518ee078f3464da147c4d52d4868">NRE::Utility::Detail::Vector::Reference</a></div><div class="ttdeci">ValueType &amp; Reference</div><div class="ttdef"><b>Definition:</b> NRE_Vector.hpp:55</div></div>
<div class="ttc" id="class_n_r_e_1_1_utility_1_1_detail_1_1_vector_php_a1c2cdf70435eb56895d6ea0464aadc0f"><div class="ttname"><a href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#a1c2cdf70435eb56895d6ea0464aadc0f">NRE::Utility::Detail::Vector&lt; Observer * &gt;::AllocatorType</a></div><div class="ttdeci">Allocator AllocatorType</div><div class="ttdef"><b>Definition:</b> NRE_Vector.hpp:49</div></div>
<div class="ttc" id="class_n_r_e_1_1_utility_1_1_detail_1_1_vector_php_aa261e992e18ec32649868349768dc497"><div class="ttname"><a href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#aa261e992e18ec32649868349768dc497">NRE::Utility::Detail::Vector&lt; Observer * &gt;::const_pointer</a></div><div class="ttdeci">ConstPointer const_pointer</div><div class="ttdef"><b>Definition:</b> NRE_Vector.hpp:85</div></div>
<div class="ttc" id="class_n_r_e_1_1_utility_1_1_detail_1_1_vector_php_a6f8483736c3ab10b3c801351f0f7c544"><div class="ttname"><a href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#a6f8483736c3ab10b3c801351f0f7c544">NRE::Utility::Detail::Vector&lt; Observer * &gt;::allocator_type</a></div><div class="ttdeci">AllocatorType allocator_type</div><div class="ttdef"><b>Definition:</b> NRE_Vector.hpp:73</div></div>
<div class="ttc" id="class_n_r_e_1_1_utility_1_1_detail_1_1_vector_php_acd4227df24559a4ac1d0b762c1ed2cf5"><div class="ttname"><a href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#acd4227df24559a4ac1d0b762c1ed2cf5">NRE::Utility::Detail::Vector&lt; Observer * &gt;::size_type</a></div><div class="ttdeci">SizeType size_type</div><div class="ttdef"><b>Definition:</b> NRE_Vector.hpp:75</div></div>
<div class="ttc" id="class_n_r_e_1_1_utility_1_1_detail_1_1_vector_php_ab1a52d0f6f9194d1040373c1baba7509"><div class="ttname"><a href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#ab1a52d0f6f9194d1040373c1baba7509">NRE::Utility::Detail::Vector&lt; Observer * &gt;::const_reference</a></div><div class="ttdeci">ConstReference const_reference</div><div class="ttdef"><b>Definition:</b> NRE_Vector.hpp:81</div></div>
<div class="ttc" id="class_n_r_e_1_1_utility_1_1_detail_1_1_vector_php_a3b34427c33713e00605fa1847d50d298"><div class="ttname"><a href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#a3b34427c33713e00605fa1847d50d298">NRE::Utility::Detail::Vector&lt; Observer * &gt;::const_reverse_iterator</a></div><div class="ttdeci">ConstReverseIterator const_reverse_iterator</div><div class="ttdef"><b>Definition:</b> NRE_Vector.hpp:93</div></div>
<div class="ttc" id="class_n_r_e_1_1_utility_1_1_detail_1_1_vector_php_ac807a2b9a37baaecd2a01efa79edc03d"><div class="ttname"><a href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#ac807a2b9a37baaecd2a01efa79edc03d">NRE::Utility::Detail::Vector::pushBack</a></div><div class="ttdeci">void pushBack(ConstReference value)</div></div>
<div class="ttc" id="class_n_r_e_1_1_utility_1_1_detail_1_1_vector_php_a6336c5fb6c7e89d27ca76c8f22a75c02"><div class="ttname"><a href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#a6336c5fb6c7e89d27ca76c8f22a75c02">NRE::Utility::Detail::Vector::operator[]</a></div><div class="ttdeci">Reference operator[](SizeType index)</div></div>
<div class="ttc" id="class_n_r_e_1_1_utility_1_1_detail_1_1_vector_php_ab94a642fcd8f776e2efefd858c27b878"><div class="ttname"><a href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#ab94a642fcd8f776e2efefd858c27b878">NRE::Utility::Detail::Vector::getFront</a></div><div class="ttdeci">Reference getFront()</div></div>
<div class="ttc" id="class_n_r_e_1_1_utility_1_1_detail_1_1_vector_php_a04ab36fc8f70ddfa0016d01c8b896bed"><div class="ttname"><a href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#a04ab36fc8f70ddfa0016d01c8b896bed">NRE::Utility::Detail::Vector::toString</a></div><div class="ttdeci">String toString() const </div></div>
<div class="ttc" id="class_n_r_e_1_1_utility_1_1_detail_1_1_vector_php_ad6197e58dd5d5e23a2ddedbc3087e22d"><div class="ttname"><a href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#ad6197e58dd5d5e23a2ddedbc3087e22d">NRE::Utility::Detail::Vector::crbegin</a></div><div class="ttdeci">ConstReverseIterator crbegin() const </div></div>
<div class="ttc" id="class_n_r_e_1_1_utility_1_1_detail_1_1_vector_php_a2c3f2ffdf73b574662795a0fc6512b9c"><div class="ttname"><a href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#a2c3f2ffdf73b574662795a0fc6512b9c">NRE::Utility::Detail::Vector::end</a></div><div class="ttdeci">Iterator end()</div></div>
<div class="ttc" id="class_n_r_e_1_1_utility_1_1_detail_1_1_vector_php_ac6b7e9c39526b1e8561b7f0f7d38ebce"><div class="ttname"><a href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#ac6b7e9c39526b1e8561b7f0f7d38ebce">NRE::Utility::Detail::Vector::swap</a></div><div class="ttdeci">void swap(Vector &amp;vec)</div></div>
<div class="ttc" id="class_n_r_e_1_1_utility_1_1_detail_1_1_vector_php_a95239c62edf4a9d822f3477e160b3384"><div class="ttname"><a href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#a95239c62edf4a9d822f3477e160b3384">NRE::Utility::Detail::Vector::Vector</a></div><div class="ttdeci">Vector(Allocator const &amp;alloc=Allocator())</div></div>
<div class="ttc" id="class_n_r_e_1_1_utility_1_1_detail_1_1_vector_php_a94796177211da4f68e8b2cb02ee14801"><div class="ttname"><a href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#a94796177211da4f68e8b2cb02ee14801">NRE::Utility::Detail::Vector::getCapacity</a></div><div class="ttdeci">SizeType getCapacity() const </div></div>
<div class="ttc" id="class_n_r_e_1_1_utility_1_1_detail_1_1_vector_php_a031e5dcbd857faad81733cad07637ffe"><div class="ttname"><a href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#a031e5dcbd857faad81733cad07637ffe">NRE::Utility::Detail::Vector&lt; Observer * &gt;::Pointer</a></div><div class="ttdeci">typename AllocatorType::Pointer Pointer</div><div class="ttdef"><b>Definition:</b> NRE_Vector.hpp:59</div></div>
<div class="ttc" id="class_n_r_e_1_1_utility_1_1_detail_1_1_vector_php_a3cfc497f11ae9e5c6fc0199443b758a6"><div class="ttname"><a href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#a3cfc497f11ae9e5c6fc0199443b758a6">NRE::Utility::Detail::Vector::insert</a></div><div class="ttdeci">Iterator insert(ConstIterator start, ConstReference value)</div></div>
<div class="ttc" id="class_n_r_e_1_1_utility_1_1_detail_1_1_vector_php_abcadcf54eacb239586f40c09fb0d97f5"><div class="ttname"><a href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#abcadcf54eacb239586f40c09fb0d97f5">NRE::Utility::Detail::Vector::emplace</a></div><div class="ttdeci">Iterator emplace(ConstIterator start, Args &amp;&amp;...args)</div></div>
<div class="ttc" id="class_n_r_e_1_1_utility_1_1_detail_1_1_vector_php_acbb7cb5832ddc4d40051ab6bd28f5617"><div class="ttname"><a href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#acbb7cb5832ddc4d40051ab6bd28f5617">NRE::Utility::Detail::Vector&lt; Observer * &gt;::ConstPointer</a></div><div class="ttdeci">typename AllocatorType::ConstPointer ConstPointer</div><div class="ttdef"><b>Definition:</b> NRE_Vector.hpp:61</div></div>
<div class="ttc" id="class_n_r_e_1_1_utility_1_1_detail_1_1_vector_php_ac13bd8ac0869f6529a677462ded42de3"><div class="ttname"><a href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#ac13bd8ac0869f6529a677462ded42de3">NRE::Utility::Detail::Vector::isEmpty</a></div><div class="ttdeci">bool isEmpty() const </div></div>
<div class="ttc" id="namespace_n_r_e_php"><div class="ttname"><a href="namespace_n_r_e.php">NRE</a></div><div class="ttdoc">The NearlyRealEngine&amp;#39;s global namespace. </div></div>
<div class="ttc" id="class_n_r_e_1_1_utility_1_1_detail_1_1_vector_php_aea32f67a58479e471b62b19fd4b4b3e0"><div class="ttname"><a href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#aea32f67a58479e471b62b19fd4b4b3e0">NRE::Utility::Detail::Vector::getLast</a></div><div class="ttdeci">Reference getLast()</div></div>
<div class="ttc" id="class_n_r_e_1_1_utility_1_1_basic_string_php"><div class="ttname"><a href="class_n_r_e_1_1_utility_1_1_basic_string.php">NRE::Utility::BasicString</a></div><div class="ttdoc">A basic template string, with dynamic size, guarantee to be in contiguous memory. ...</div><div class="ttdef"><b>Definition:</b> NRE_String.hpp:38</div></div>
<div class="ttc" id="class_n_r_e_1_1_utility_1_1_detail_1_1_vector_php_ab0406623da13793f246b93577acfbb01"><div class="ttname"><a href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#ab0406623da13793f246b93577acfbb01">NRE::Utility::Detail::Vector::getCData</a></div><div class="ttdeci">ConstPointer getCData() const </div></div>
<div class="ttc" id="class_n_r_e_1_1_utility_1_1_detail_1_1_vector_php_a0bb6bac0fb6bf6094ef30743b5a3b5eb"><div class="ttname"><a href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#a0bb6bac0fb6bf6094ef30743b5a3b5eb">NRE::Utility::Detail::Vector::operator==</a></div><div class="ttdeci">bool operator==(Vector const &amp;vec) const </div><div class="ttdef"><b>Definition:</b> NRE_Vector.hpp:465</div></div>
<div class="ttc" id="class_n_r_e_1_1_utility_1_1_detail_1_1_vector_php_a23fb70800379b23cf7810e7bbc36ef72"><div class="ttname"><a href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#a23fb70800379b23cf7810e7bbc36ef72">NRE::Utility::Detail::Vector::clear</a></div><div class="ttdeci">void clear() noexcept</div><div class="ttdef"><b>Definition:</b> NRE_Vector.hpp:308</div></div>
<div class="ttc" id="class_n_r_e_1_1_utility_1_1_observer_php"><div class="ttname"><a href="class_n_r_e_1_1_utility_1_1_observer.php">NRE::Utility::Observer</a></div><div class="ttdoc">Describe an observer object attached to an Observable. </div><div class="ttdef"><b>Definition:</b> NRE_Observer.hpp:29</div></div>
<div class="ttc" id="class_n_r_e_1_1_utility_1_1_detail_1_1_vector_php_a72fad357a18fe48e6b8a34fa5702e042"><div class="ttname"><a href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#a72fad357a18fe48e6b8a34fa5702e042">NRE::Utility::Detail::Vector::operator!=</a></div><div class="ttdeci">bool operator!=(Vector const &amp;vec) const </div></div>
<div class="ttc" id="class_n_r_e_1_1_utility_1_1_detail_1_1_vector_php_a94c32d30b090c68244c77db1cd60a169"><div class="ttname"><a href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#a94c32d30b090c68244c77db1cd60a169">NRE::Utility::Detail::Vector&lt; Observer * &gt;::reverse_iterator</a></div><div class="ttdeci">ReverseIterator reverse_iterator</div><div class="ttdef"><b>Definition:</b> NRE_Vector.hpp:91</div></div>
<div class="ttc" id="struct_n_r_e_1_1_utility_1_1_input_iterator_php"><div class="ttname"><a href="struct_n_r_e_1_1_utility_1_1_input_iterator.php">NRE::Utility::InputIterator</a></div><div class="ttdoc">Used in IteratorBase to detect InputIterator category. </div><div class="ttdef"><b>Definition:</b> NRE_IteratorTraits.hpp:29</div></div>
<div class="ttc" id="namespace_utility_php"><div class="ttname"><a href="namespace_utility.php">Utility</a></div><div class="ttdoc">Utility&amp;#39;s API. </div></div>
<div class="ttc" id="class_n_r_e_1_1_utility_1_1_detail_1_1_vector_php_a35bce7ca703d329523b019d1ab878426"><div class="ttname"><a href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#a35bce7ca703d329523b019d1ab878426">NRE::Utility::Detail::Vector&lt; Observer * &gt;::pointer</a></div><div class="ttdeci">Pointer pointer</div><div class="ttdef"><b>Definition:</b> NRE_Vector.hpp:83</div></div>
<div class="ttc" id="class_n_r_e_1_1_utility_1_1_detail_1_1_vector_php_a4e77cf42a0a643c430e9a2b2f11eff24"><div class="ttname"><a href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#a4e77cf42a0a643c430e9a2b2f11eff24">NRE::Utility::Detail::Vector::popBack</a></div><div class="ttdeci">void popBack()</div><div class="ttdef"><b>Definition:</b> NRE_Vector.hpp:398</div></div>
<div class="ttc" id="class_n_r_e_1_1_utility_1_1_detail_1_1_vector_php_ab9fb5fc358fabd54d8561c60c472574a"><div class="ttname"><a href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#ab9fb5fc358fabd54d8561c60c472574a">NRE::Utility::Detail::Vector::getMaxSize</a></div><div class="ttdeci">constexpr SizeType getMaxSize() const </div></div>
<div class="ttc" id="class_n_r_e_1_1_utility_1_1_detail_1_1_vector_php_aa26af279a6a53b910b4455f87e6baff6"><div class="ttname"><a href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#aa26af279a6a53b910b4455f87e6baff6">NRE::Utility::Detail::Vector::crend</a></div><div class="ttdeci">ConstReverseIterator crend() const </div></div>
<div class="ttc" id="class_n_r_e_1_1_utility_1_1_detail_1_1_vector_php_ab312674a156498a72bd5e4aca800b098"><div class="ttname"><a href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#ab312674a156498a72bd5e4aca800b098">NRE::Utility::Detail::Vector&lt; Observer * &gt;::SizeType</a></div><div class="ttdeci">std::size_t SizeType</div><div class="ttdef"><b>Definition:</b> NRE_Vector.hpp:51</div></div>
<div class="ttc" id="class_n_r_e_1_1_utility_1_1_detail_1_1_vector_php_a46a4c0422c3f42e1d742e31610e98026"><div class="ttname"><a href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#a46a4c0422c3f42e1d742e31610e98026">NRE::Utility::Detail::Vector::shrinkToFit</a></div><div class="ttdeci">void shrinkToFit()</div></div>
<div class="ttc" id="class_n_r_e_1_1_utility_1_1_detail_1_1_vector_php_a1df24fb0383b319fd7c3112ac2a190aa"><div class="ttname"><a href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#a1df24fb0383b319fd7c3112ac2a190aa">NRE::Utility::Detail::Vector::cbegin</a></div><div class="ttdeci">ConstIterator cbegin() const </div></div>
<div class="ttc" id="class_n_r_e_1_1_utility_1_1_detail_1_1_vector_php_acfb6ea52f582a024ab8f43d4c540b6fb"><div class="ttname"><a href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#acfb6ea52f582a024ab8f43d4c540b6fb">NRE::Utility::Detail::Vector&lt; Observer * &gt;::DifferenceType</a></div><div class="ttdeci">std::ptrdiff_t DifferenceType</div><div class="ttdef"><b>Definition:</b> NRE_Vector.hpp:53</div></div>
<div class="ttc" id="class_n_r_e_1_1_utility_1_1_detail_1_1_vector_php"><div class="ttname"><a href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php">NRE::Utility::Detail::Vector</a></div><div class="ttdoc">A dynamic array, guarantee to be in contiguous memory. </div><div class="ttdef"><b>Definition:</b> NRE_Vector.hpp:41</div></div>
<div class="ttc" id="class_n_r_e_1_1_utility_1_1_detail_1_1_vector_php_aa7ea52aac53280651fd22821760d01b1"><div class="ttname"><a href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#aa7ea52aac53280651fd22821760d01b1">NRE::Utility::Detail::Vector&lt; Observer * &gt;::difference_type</a></div><div class="ttdeci">DifferenceType difference_type</div><div class="ttdef"><b>Definition:</b> NRE_Vector.hpp:77</div></div>
<div class="ttc" id="class_n_r_e_1_1_utility_1_1_detail_1_1_vector_php_ab25363b62250ec80597b37304db65a43"><div class="ttname"><a href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#ab25363b62250ec80597b37304db65a43">NRE::Utility::Detail::Vector::reserve</a></div><div class="ttdeci">void reserve(SizeType size)</div></div>
<div class="ttc" id="class_n_r_e_1_1_utility_1_1_detail_1_1_vector_php_a1abe614a22ed274e9ebac84e520c3524"><div class="ttname"><a href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#a1abe614a22ed274e9ebac84e520c3524">NRE::Utility::Detail::Vector::begin</a></div><div class="ttdeci">Iterator begin()</div></div>
<div class="ttc" id="class_n_r_e_1_1_utility_1_1_detail_1_1_vector_php_a94c1b7c9da2e6f16737dfca98e9a2c6d"><div class="ttname"><a href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#a94c1b7c9da2e6f16737dfca98e9a2c6d">NRE::Utility::Detail::Vector::getData</a></div><div class="ttdeci">Pointer getData()</div></div>
<div class="ttc" id="class_n_r_e_1_1_utility_1_1_detail_1_1_vector_php_aedc34798595924837f67fe06ae52dde7"><div class="ttname"><a href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#aedc34798595924837f67fe06ae52dde7">NRE::Utility::Detail::Vector&lt; Observer * &gt;::Iterator</a></div><div class="ttdeci">Pointer Iterator</div><div class="ttdef"><b>Definition:</b> NRE_Vector.hpp:63</div></div>
<div class="ttc" id="class_n_r_e_1_1_utility_1_1_detail_1_1_vector_php_a6d452642de72eb8ce9f74266738c304a"><div class="ttname"><a href="class_n_r_e_1_1_utility_1_1_detail_1_1_vector.php#a6d452642de72eb8ce9f74266738c304a">NRE::Utility::Detail::Vector::resize</a></div><div class="ttdeci">void resize(SizeType count)</div></div>
</div><!-- fragment --></div><!-- contents -->
<!-- HTML footer for doxygen 1.8.8-->
<!-- start footer part -->
</div>
</div>
</div>
</div>
</body>
</html>
