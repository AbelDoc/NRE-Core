<!-- HTML header for doxygen 1.8.8-->
<!DOCTYPE html>
<html>
    <head>
        <meta http-equiv="X-UA-Compatible" content="IE=edge">
        <!-- For Mobile Devices -->
        <meta name="viewport" content="width=device-width, initial-scale=1">
        <meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
        <meta name="generator" content="Doxygen 1.8.11"/>
        <script type="text/javascript" src="../../js/jquery-2.1.1.min.js"></script>
        <title>NRE-Utility: NRE::Utility::ForwardList&lt; T &gt; Class Template Reference</title>
        <!--<link href="tabs.css" rel="stylesheet" type="text/css"/>-->
        <script type="text/javascript" src="dynsections.js"></script>
        <link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
        <link href="doxygen.css" rel="stylesheet" type="text/css" />
        <link href="style.css" rel="stylesheet" type="text/css"/>
        <link href='https://fonts.googleapis.com/css?family=Roboto+Slab' rel='stylesheet' type='text/css'>
        <?php
            include '../../php/navigation.php';
            if (!isset($_COOKIE["theme"]) || $_COOKIE["theme"] == "dark") {
                echo '<link href="../../css/dark/bootstrap.css" rel="stylesheet">';
            } else {
                echo '<link href="../../css/light/bootstrap.css" rel="stylesheet">';
            }
        ?>
        <script src="../../js/bootstrap.min.js"></script>
        <script type="text/javascript" src="doxy-boot.js"></script>
    </head>
    <body>
        <div class="container-fluid">
            <header class="page-header">
                <a href="../../../index.php">
                    <img src="../../img/Logo.png" class="logo img-responsive"/>
                </a>
            </header>
            <?php addNavigationBarInl(false); ?>
            <div id="top" class="row"><!-- do not remove this div, it is closed by doxygen! -->
                <div class="col-lg-12">
                    <div class="panel panel-default">
                        <div class="panel-body">
<!-- end header part -->
<!-- Generated by Doxygen 1.8.11 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.php"><span>Main&#160;Page</span></a></li>
      <li><a href="namespaces.php"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.php"><span>Classes</span></a></li>
      <li><a href="files.php"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.php"><span>Class&#160;List</span></a></li>
      <li><a href="classes.php"><span>Class&#160;Index</span></a></li>
      <li><a href="hierarchy.php"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.php"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespace_n_r_e.php">NRE</a></li><li class="navelem"><b>Utility</b></li><li class="navelem"><a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list.php">ForwardList</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#nested-classes">Classes</a> &#124;
<a href="#pub-types">Public Types</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="class_n_r_e_1_1_utility_1_1_forward_list-members.php">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">NRE::Utility::ForwardList&lt; T &gt; Class Template Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>A simple linked list.  
 <a href="class_n_r_e_1_1_utility_1_1_forward_list.php#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="_n_r_e___forward_list_8hpp_source.php">NRE_ForwardList.hpp</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"></a>
Classes</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list_1_1_forward_iterator.php">ForwardIterator</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Internal iterator for forward list.  <a href="class_n_r_e_1_1_utility_1_1_forward_list_1_1_forward_iterator.php#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-types"></a>
Public Types</h2></td></tr>
<tr class="memitem:a3acc0d8cec711c5199f9f50b438819a2"><td class="memItemLeft" align="right" valign="top">typedef <a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list_1_1_forward_iterator.php">ForwardIterator</a>&lt; T &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list.php#a3acc0d8cec711c5199f9f50b438819a2">Iterator</a></td></tr>
<tr class="separator:a3acc0d8cec711c5199f9f50b438819a2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad800b851bfbe86ba516c1390dc013329"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ad800b851bfbe86ba516c1390dc013329"></a>
typedef <a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list_1_1_forward_iterator.php">ForwardIterator</a>&lt; const T &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>ConstIterator</b></td></tr>
<tr class="separator:ad800b851bfbe86ba516c1390dc013329"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:aaed4b4106b2447738514d68d823015de"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list.php#aaed4b4106b2447738514d68d823015de">ForwardList</a> ()</td></tr>
<tr class="separator:aaed4b4106b2447738514d68d823015de"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a366f482372ef3df67253bbe5ce581d97"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list.php#a366f482372ef3df67253bbe5ce581d97">ForwardList</a> (std::size_t count, T const &amp;value=T())</td></tr>
<tr class="separator:a366f482372ef3df67253bbe5ce581d97"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:add0b8c98590bfa1c901e74cd0435a053"><td class="memTemplParams" colspan="2">template&lt;class InputIterator &gt; </td></tr>
<tr class="memitem:add0b8c98590bfa1c901e74cd0435a053"><td class="memTemplItemLeft" align="right" valign="top">&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list.php#add0b8c98590bfa1c901e74cd0435a053">ForwardList</a> (InputIterator <a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list.php#a7b03fbc213155287dc80a64098d4614f">begin</a>, InputIterator <a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list.php#afb02bba9f3b0f4c654a3e8447a8c29df">end</a>)</td></tr>
<tr class="separator:add0b8c98590bfa1c901e74cd0435a053"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8010429464500437c2eaf6fd5001d790"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list.php#a8010429464500437c2eaf6fd5001d790">ForwardList</a> (std::initializer_list&lt; T &gt; list)</td></tr>
<tr class="separator:a8010429464500437c2eaf6fd5001d790"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a372631e24124da0f8f1908623a5e30f7"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list.php#a372631e24124da0f8f1908623a5e30f7">ForwardList</a> (<a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list.php">ForwardList</a> const &amp;list)</td></tr>
<tr class="separator:a372631e24124da0f8f1908623a5e30f7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1a209396ee1b9243aca529eff663b50b"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list.php#a1a209396ee1b9243aca529eff663b50b">ForwardList</a> (<a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list.php">ForwardList</a> &amp;&amp;list)</td></tr>
<tr class="separator:a1a209396ee1b9243aca529eff663b50b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0eb628d246691f5df775d4d0b11b9f43"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list.php#a0eb628d246691f5df775d4d0b11b9f43">~ForwardList</a> ()</td></tr>
<tr class="separator:a0eb628d246691f5df775d4d0b11b9f43"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adfc013e87d5c3b3d7fe06cb516c583ee"><td class="memItemLeft" align="right" valign="top">T &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list.php#adfc013e87d5c3b3d7fe06cb516c583ee">getFront</a> ()</td></tr>
<tr class="separator:adfc013e87d5c3b3d7fe06cb516c583ee"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1da224f1b24067cfcd05c9fb0f8624a8"><td class="memItemLeft" align="right" valign="top">T const &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list.php#a1da224f1b24067cfcd05c9fb0f8624a8">getFront</a> () const </td></tr>
<tr class="separator:a1da224f1b24067cfcd05c9fb0f8624a8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6887f6266bc1df288976812b94022a9a"><td class="memItemLeft" align="right" valign="top">constexpr std::size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list.php#a6887f6266bc1df288976812b94022a9a">getMaxSize</a> () const </td></tr>
<tr class="separator:a6887f6266bc1df288976812b94022a9a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae8340f5c369b0d637cbeca498fdaff36"><td class="memItemLeft" align="right" valign="top">std::size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list.php#ae8340f5c369b0d637cbeca498fdaff36">getSize</a> () const </td></tr>
<tr class="separator:ae8340f5c369b0d637cbeca498fdaff36"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4230e7e0d342c0f60ebe575be23794ae"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list.php#a4230e7e0d342c0f60ebe575be23794ae">isEmpty</a> () const </td></tr>
<tr class="separator:a4230e7e0d342c0f60ebe575be23794ae"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af91bfba8464020782207b29026012ef0"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list.php#a3acc0d8cec711c5199f9f50b438819a2">Iterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list.php#af91bfba8464020782207b29026012ef0">beforeBegin</a> ()</td></tr>
<tr class="separator:af91bfba8464020782207b29026012ef0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad1a40ce9bb371aa4cc979019c8eed3ef"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list_1_1_forward_iterator.php">ConstIterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list.php#ad1a40ce9bb371aa4cc979019c8eed3ef">beforeBegin</a> () const </td></tr>
<tr class="separator:ad1a40ce9bb371aa4cc979019c8eed3ef"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af5014ccf5a5fe77c4dde26b29685c195"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list_1_1_forward_iterator.php">ConstIterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list.php#af5014ccf5a5fe77c4dde26b29685c195">cbeforeBegin</a> () const </td></tr>
<tr class="separator:af5014ccf5a5fe77c4dde26b29685c195"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7b03fbc213155287dc80a64098d4614f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list.php#a3acc0d8cec711c5199f9f50b438819a2">Iterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list.php#a7b03fbc213155287dc80a64098d4614f">begin</a> ()</td></tr>
<tr class="separator:a7b03fbc213155287dc80a64098d4614f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a33a45e05297f0a4809590e2986024906"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list_1_1_forward_iterator.php">ConstIterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list.php#a33a45e05297f0a4809590e2986024906">begin</a> () const </td></tr>
<tr class="separator:a33a45e05297f0a4809590e2986024906"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a939eccb99f521e6cab28486fd8ef691a"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list_1_1_forward_iterator.php">ConstIterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list.php#a939eccb99f521e6cab28486fd8ef691a">cbegin</a> () const </td></tr>
<tr class="separator:a939eccb99f521e6cab28486fd8ef691a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afb02bba9f3b0f4c654a3e8447a8c29df"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list.php#a3acc0d8cec711c5199f9f50b438819a2">Iterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list.php#afb02bba9f3b0f4c654a3e8447a8c29df">end</a> ()</td></tr>
<tr class="separator:afb02bba9f3b0f4c654a3e8447a8c29df"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0c5d44b978a994cb02de53dca37c2c55"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list_1_1_forward_iterator.php">ConstIterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list.php#a0c5d44b978a994cb02de53dca37c2c55">end</a> () const </td></tr>
<tr class="separator:a0c5d44b978a994cb02de53dca37c2c55"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a48bf1da33895bd7cf048e6f741006f75"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list_1_1_forward_iterator.php">ConstIterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list.php#a48bf1da33895bd7cf048e6f741006f75">cend</a> () const </td></tr>
<tr class="separator:a48bf1da33895bd7cf048e6f741006f75"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1f3169ea97a042f3735b0a880e0ccca0"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list.php#a1f3169ea97a042f3735b0a880e0ccca0">assign</a> (std::size_t count, T const &amp;value)</td></tr>
<tr class="separator:a1f3169ea97a042f3735b0a880e0ccca0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0f5ac4158ce1ee6ec5211e54e108346d"><td class="memTemplParams" colspan="2">template&lt;class InputIterator &gt; </td></tr>
<tr class="memitem:a0f5ac4158ce1ee6ec5211e54e108346d"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list.php#a0f5ac4158ce1ee6ec5211e54e108346d">assign</a> (InputIterator <a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list.php#a7b03fbc213155287dc80a64098d4614f">begin</a>, InputIterator <a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list.php#afb02bba9f3b0f4c654a3e8447a8c29df">end</a>)</td></tr>
<tr class="separator:a0f5ac4158ce1ee6ec5211e54e108346d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8a315981e2175311a4be04307ca4d598"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list.php#a8a315981e2175311a4be04307ca4d598">clear</a> ()</td></tr>
<tr class="separator:a8a315981e2175311a4be04307ca4d598"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7a886342ded3b3ea531d6c1a0b1afdfc"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list.php#a3acc0d8cec711c5199f9f50b438819a2">Iterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list.php#a7a886342ded3b3ea531d6c1a0b1afdfc">insertAfter</a> (<a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list_1_1_forward_iterator.php">ConstIterator</a> pos, T const &amp;value)</td></tr>
<tr class="separator:a7a886342ded3b3ea531d6c1a0b1afdfc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a155d6241e59b61619b18fee7be830712"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list.php#a3acc0d8cec711c5199f9f50b438819a2">Iterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list.php#a155d6241e59b61619b18fee7be830712">insertAfter</a> (<a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list_1_1_forward_iterator.php">ConstIterator</a> pos, T &amp;&amp;value)</td></tr>
<tr class="separator:a155d6241e59b61619b18fee7be830712"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a896bc120a5bb01cce28f015ba055cba7"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list.php#a3acc0d8cec711c5199f9f50b438819a2">Iterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list.php#a896bc120a5bb01cce28f015ba055cba7">insertAfter</a> (<a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list_1_1_forward_iterator.php">ConstIterator</a> pos, std::size_t count, T const &amp;value)</td></tr>
<tr class="separator:a896bc120a5bb01cce28f015ba055cba7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1fabe6acc7fbc75e4a33d088ed0092c6"><td class="memTemplParams" colspan="2">template&lt;class InputIterator &gt; </td></tr>
<tr class="memitem:a1fabe6acc7fbc75e4a33d088ed0092c6"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list.php#a3acc0d8cec711c5199f9f50b438819a2">Iterator</a>&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list.php#a1fabe6acc7fbc75e4a33d088ed0092c6">insertAfter</a> (<a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list_1_1_forward_iterator.php">ConstIterator</a> pos, InputIterator <a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list.php#a7b03fbc213155287dc80a64098d4614f">begin</a>, InputIterator <a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list.php#afb02bba9f3b0f4c654a3e8447a8c29df">end</a>)</td></tr>
<tr class="separator:a1fabe6acc7fbc75e4a33d088ed0092c6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae9b7323fb710148930ece9ff55762664"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list.php#a3acc0d8cec711c5199f9f50b438819a2">Iterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list.php#ae9b7323fb710148930ece9ff55762664">insertAfter</a> (<a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list_1_1_forward_iterator.php">ConstIterator</a> pos, std::initializer_list&lt; T &gt; list)</td></tr>
<tr class="separator:ae9b7323fb710148930ece9ff55762664"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a556c44fdc228e15b754486c2e7e05119"><td class="memTemplParams" colspan="2">template&lt;class... Args&gt; </td></tr>
<tr class="memitem:a556c44fdc228e15b754486c2e7e05119"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list.php#a3acc0d8cec711c5199f9f50b438819a2">Iterator</a>&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list.php#a556c44fdc228e15b754486c2e7e05119">emplaceAfter</a> (<a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list_1_1_forward_iterator.php">ConstIterator</a> pos, Args &amp;&amp;...args)</td></tr>
<tr class="separator:a556c44fdc228e15b754486c2e7e05119"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7292c79d580d66cc78e47871672e1c99"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list.php#a3acc0d8cec711c5199f9f50b438819a2">Iterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list.php#a7292c79d580d66cc78e47871672e1c99">eraseAfter</a> (<a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list_1_1_forward_iterator.php">ConstIterator</a> pos)</td></tr>
<tr class="separator:a7292c79d580d66cc78e47871672e1c99"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a10135bd1cc61618203b95b0fc8d9bb4f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list.php#a3acc0d8cec711c5199f9f50b438819a2">Iterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list.php#a10135bd1cc61618203b95b0fc8d9bb4f">eraseAfter</a> (<a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list_1_1_forward_iterator.php">ConstIterator</a> <a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list.php#a7b03fbc213155287dc80a64098d4614f">begin</a>, <a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list_1_1_forward_iterator.php">ConstIterator</a> <a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list.php#afb02bba9f3b0f4c654a3e8447a8c29df">end</a>)</td></tr>
<tr class="separator:a10135bd1cc61618203b95b0fc8d9bb4f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5720966108c053486764488b175c8236"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list.php#a5720966108c053486764488b175c8236">pushFront</a> (T const &amp;value)</td></tr>
<tr class="separator:a5720966108c053486764488b175c8236"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a833cba92bec5201dc68285da899a6c91"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list.php#a833cba92bec5201dc68285da899a6c91">pushFront</a> (T &amp;&amp;value)</td></tr>
<tr class="separator:a833cba92bec5201dc68285da899a6c91"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a69d90b2dfebcf8f0d6785bca2a6269de"><td class="memTemplParams" colspan="2">template&lt;class... Args&gt; </td></tr>
<tr class="memitem:a69d90b2dfebcf8f0d6785bca2a6269de"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list.php#a69d90b2dfebcf8f0d6785bca2a6269de">emplaceFront</a> (Args &amp;&amp;...args)</td></tr>
<tr class="separator:a69d90b2dfebcf8f0d6785bca2a6269de"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afd08bbd64f1332e2846332faf05edf0c"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list.php#afd08bbd64f1332e2846332faf05edf0c">popFront</a> ()</td></tr>
<tr class="separator:afd08bbd64f1332e2846332faf05edf0c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a20f9fa2f08136e35abd328d181894efe"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list.php#a20f9fa2f08136e35abd328d181894efe">resize</a> (std::size_t count)</td></tr>
<tr class="separator:a20f9fa2f08136e35abd328d181894efe"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aec2b33767a48b922718c48537d170a8f"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list.php#aec2b33767a48b922718c48537d170a8f">resize</a> (std::size_t count, T const &amp;value)</td></tr>
<tr class="separator:aec2b33767a48b922718c48537d170a8f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7ea1219016b9a78be086cf0295c5b30a"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list.php#a7ea1219016b9a78be086cf0295c5b30a">swap</a> (<a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list.php">ForwardList</a> &amp;list)</td></tr>
<tr class="separator:a7ea1219016b9a78be086cf0295c5b30a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:affd684c8979b6b1119398924def150df"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list.php#affd684c8979b6b1119398924def150df">merge</a> (<a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list.php">ForwardList</a> &amp;list)</td></tr>
<tr class="separator:affd684c8979b6b1119398924def150df"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a90cd056f82691122f678b2cce634da03"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list.php#a90cd056f82691122f678b2cce634da03">merge</a> (<a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list.php">ForwardList</a> &amp;&amp;list)</td></tr>
<tr class="separator:a90cd056f82691122f678b2cce634da03"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adf59962f569662f41d7f388fb399eb02"><td class="memTemplParams" colspan="2">template&lt;class Comparator &gt; </td></tr>
<tr class="memitem:adf59962f569662f41d7f388fb399eb02"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list.php#adf59962f569662f41d7f388fb399eb02">merge</a> (<a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list.php">ForwardList</a> &amp;list, Comparator comp)</td></tr>
<tr class="separator:adf59962f569662f41d7f388fb399eb02"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa3fb766673028cfab038d208b6359885"><td class="memTemplParams" colspan="2">template&lt;class Comparator &gt; </td></tr>
<tr class="memitem:aa3fb766673028cfab038d208b6359885"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list.php#aa3fb766673028cfab038d208b6359885">merge</a> (<a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list.php">ForwardList</a> &amp;&amp;list, Comparator comp)</td></tr>
<tr class="separator:aa3fb766673028cfab038d208b6359885"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a23399cdf79c7d2e629f9da7754c1904a"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list.php#a23399cdf79c7d2e629f9da7754c1904a">spliceAfter</a> (<a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list_1_1_forward_iterator.php">ConstIterator</a> pos, <a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list.php">ForwardList</a> &amp;list)</td></tr>
<tr class="separator:a23399cdf79c7d2e629f9da7754c1904a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2b2f731617fa5f35695a7b8ce4b52dea"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list.php#a2b2f731617fa5f35695a7b8ce4b52dea">spliceAfter</a> (<a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list_1_1_forward_iterator.php">ConstIterator</a> pos, <a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list.php">ForwardList</a> &amp;&amp;list)</td></tr>
<tr class="separator:a2b2f731617fa5f35695a7b8ce4b52dea"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aabfb374871e0e9eb95c11815e37f1ef4"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list.php#aabfb374871e0e9eb95c11815e37f1ef4">spliceAfter</a> (<a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list_1_1_forward_iterator.php">ConstIterator</a> pos, <a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list.php">ForwardList</a> &amp;list, <a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list_1_1_forward_iterator.php">ConstIterator</a> it)</td></tr>
<tr class="separator:aabfb374871e0e9eb95c11815e37f1ef4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aba199f48b1039faf136811335a78bc21"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list.php#aba199f48b1039faf136811335a78bc21">spliceAfter</a> (<a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list_1_1_forward_iterator.php">ConstIterator</a> pos, <a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list.php">ForwardList</a> &amp;&amp;list, <a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list_1_1_forward_iterator.php">ConstIterator</a> it)</td></tr>
<tr class="separator:aba199f48b1039faf136811335a78bc21"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a102090f38874878cb656a5482b26d861"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list.php#a102090f38874878cb656a5482b26d861">spliceAfter</a> (<a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list_1_1_forward_iterator.php">ConstIterator</a> pos, <a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list.php">ForwardList</a> &amp;list, <a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list_1_1_forward_iterator.php">ConstIterator</a> <a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list.php#a7b03fbc213155287dc80a64098d4614f">begin</a>, <a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list_1_1_forward_iterator.php">ConstIterator</a> <a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list.php#afb02bba9f3b0f4c654a3e8447a8c29df">end</a>)</td></tr>
<tr class="separator:a102090f38874878cb656a5482b26d861"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa28f27244f2d0ac15d3f65bfd50ccb2e"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list.php#aa28f27244f2d0ac15d3f65bfd50ccb2e">spliceAfter</a> (<a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list_1_1_forward_iterator.php">ConstIterator</a> pos, <a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list.php">ForwardList</a> &amp;&amp;list, <a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list_1_1_forward_iterator.php">ConstIterator</a> <a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list.php#a7b03fbc213155287dc80a64098d4614f">begin</a>, <a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list_1_1_forward_iterator.php">ConstIterator</a> <a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list.php#afb02bba9f3b0f4c654a3e8447a8c29df">end</a>)</td></tr>
<tr class="separator:aa28f27244f2d0ac15d3f65bfd50ccb2e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2ede32aba63daeaf90c27ba7b76449a1"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list.php#a2ede32aba63daeaf90c27ba7b76449a1">remove</a> (T const &amp;value)</td></tr>
<tr class="separator:a2ede32aba63daeaf90c27ba7b76449a1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adf7c2c901e9862da8eee8bd3456a7230"><td class="memTemplParams" colspan="2">template&lt;class UnaryPredicate &gt; </td></tr>
<tr class="memitem:adf7c2c901e9862da8eee8bd3456a7230"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list.php#adf7c2c901e9862da8eee8bd3456a7230">removeIf</a> (UnaryPredicate p)</td></tr>
<tr class="separator:adf7c2c901e9862da8eee8bd3456a7230"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a287e094c67d23dbe207322a545abf6a8"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list.php#a287e094c67d23dbe207322a545abf6a8">reverse</a> ()</td></tr>
<tr class="separator:a287e094c67d23dbe207322a545abf6a8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a95a00f5843333bc8e849403aa33eb736"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list.php#a95a00f5843333bc8e849403aa33eb736">unique</a> ()</td></tr>
<tr class="separator:a95a00f5843333bc8e849403aa33eb736"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a518040ca55236bc4b6311d3e4b81c4e1"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list.php">ForwardList</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list.php#a518040ca55236bc4b6311d3e4b81c4e1">operator=</a> (<a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list.php">ForwardList</a> const &amp;list)</td></tr>
<tr class="separator:a518040ca55236bc4b6311d3e4b81c4e1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1175326969d7c703a49b301fcec00808"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list.php">ForwardList</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list.php#a1175326969d7c703a49b301fcec00808">operator=</a> (<a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list.php">ForwardList</a> &amp;&amp;list)</td></tr>
<tr class="separator:a1175326969d7c703a49b301fcec00808"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a179773ca079ad121d576e1f968e4dd3d"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list.php#a179773ca079ad121d576e1f968e4dd3d">operator==</a> (<a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list.php">ForwardList</a> const &amp;list) const </td></tr>
<tr class="separator:a179773ca079ad121d576e1f968e4dd3d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad0fd2ac4cb1bdf018495f6883d1f6abd"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list.php#ad0fd2ac4cb1bdf018495f6883d1f6abd">operator!=</a> (<a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list.php">ForwardList</a> const &amp;list) const </td></tr>
<tr class="separator:ad0fd2ac4cb1bdf018495f6883d1f6abd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aafa290016886ac3246f976789186ab75"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">String</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list.php#aafa290016886ac3246f976789186ab75">toString</a> () const </td></tr>
<tr class="separator:aafa290016886ac3246f976789186ab75"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><h3>template&lt;class T&gt;<br />
class NRE::Utility::ForwardList&lt; T &gt;</h3>

<p>A simple linked list. </p>
</div><h2 class="groupheader">Member Typedef Documentation</h2>
<a class="anchor" id="a3acc0d8cec711c5199f9f50b438819a2"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">typedef <a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list_1_1_forward_iterator.php">ForwardIterator</a>&lt;T&gt; <a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list.php">NRE::Utility::ForwardList</a>&lt; T &gt;::<a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list.php#a3acc0d8cec711c5199f9f50b438819a2">Iterator</a></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Shortcut to hide ConstIterator implementation </p>

</div>
</div>
<h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="aaed4b4106b2447738514d68d823015de"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list.php">NRE::Utility::ForwardList</a>&lt; T &gt;::<a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list.php">ForwardList</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Construct an empty list </p>

</div>
</div>
<a class="anchor" id="a366f482372ef3df67253bbe5ce581d97"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list.php">NRE::Utility::ForwardList</a>&lt; T &gt;::<a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list.php">ForwardList</a> </td>
          <td>(</td>
          <td class="paramtype">std::size_t&#160;</td>
          <td class="paramname"><em>count</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">T const &amp;&#160;</td>
          <td class="paramname"><em>value</em> = <code>T()</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Construct a list with count copy of value </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">count</td><td>the number of copy </td></tr>
    <tr><td class="paramname">value</td><td>the value to use for copy </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="add0b8c98590bfa1c901e74cd0435a053"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T &gt; </div>
<div class="memtemplate">
template&lt;class InputIterator &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list.php">NRE::Utility::ForwardList</a>&lt; T &gt;::<a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list.php">ForwardList</a> </td>
          <td>(</td>
          <td class="paramtype">InputIterator&#160;</td>
          <td class="paramname"><em>begin</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">InputIterator&#160;</td>
          <td class="paramname"><em>end</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Construct a list using elements in the given range </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">begin</td><td>the iterator on the first element </td></tr>
    <tr><td class="paramname">end</td><td>the iterator after the last element </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a8010429464500437c2eaf6fd5001d790"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list.php">NRE::Utility::ForwardList</a>&lt; T &gt;::<a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list.php">ForwardList</a> </td>
          <td>(</td>
          <td class="paramtype">std::initializer_list&lt; T &gt;&#160;</td>
          <td class="paramname"><em>list</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Construct a list using elements in the given list </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">list</td><td>the initializer list </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a372631e24124da0f8f1908623a5e30f7"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list.php">NRE::Utility::ForwardList</a>&lt; T &gt;::<a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list.php">ForwardList</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list.php">ForwardList</a>&lt; T &gt; const &amp;&#160;</td>
          <td class="paramname"><em>list</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Copy list into this </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">list</td><td>the list to copy </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a1a209396ee1b9243aca529eff663b50b"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list.php">NRE::Utility::ForwardList</a>&lt; T &gt;::<a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list.php">ForwardList</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list.php">ForwardList</a>&lt; T &gt; &amp;&amp;&#160;</td>
          <td class="paramname"><em>list</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Move list into this </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">list</td><td>the list to move </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a0eb628d246691f5df775d4d0b11b9f43"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list.php">NRE::Utility::ForwardList</a>&lt; T &gt;::~<a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list.php">ForwardList</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p><a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list.php" title="A simple linked list. ">ForwardList</a> Deconstructor </p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a class="anchor" id="a1f3169ea97a042f3735b0a880e0ccca0"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list.php">NRE::Utility::ForwardList</a>&lt; T &gt;::assign </td>
          <td>(</td>
          <td class="paramtype">std::size_t&#160;</td>
          <td class="paramname"><em>count</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">T const &amp;&#160;</td>
          <td class="paramname"><em>value</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Assign count copy of value in the list </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">count</td><td>the number of copy </td></tr>
    <tr><td class="paramname">value</td><td>the value to use for copy </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a0f5ac4158ce1ee6ec5211e54e108346d"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T &gt; </div>
<div class="memtemplate">
template&lt;class InputIterator &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list.php">NRE::Utility::ForwardList</a>&lt; T &gt;::assign </td>
          <td>(</td>
          <td class="paramtype">InputIterator&#160;</td>
          <td class="paramname"><em>begin</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">InputIterator&#160;</td>
          <td class="paramname"><em>end</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Assign the list with element in the given range </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">begin</td><td>the iterator on the first element </td></tr>
    <tr><td class="paramname">end</td><td>the iterator after the last element </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="af91bfba8464020782207b29026012ef0"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list.php#a3acc0d8cec711c5199f9f50b438819a2">Iterator</a> <a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list.php">NRE::Utility::ForwardList</a>&lt; T &gt;::beforeBegin </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>an iterator on the element before the first element </dd></dl>

</div>
</div>
<a class="anchor" id="ad1a40ce9bb371aa4cc979019c8eed3ef"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list_1_1_forward_iterator.php">ConstIterator</a> <a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list.php">NRE::Utility::ForwardList</a>&lt; T &gt;::beforeBegin </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>a const iterator on the element before the first element </dd></dl>

</div>
</div>
<a class="anchor" id="a7b03fbc213155287dc80a64098d4614f"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list.php#a3acc0d8cec711c5199f9f50b438819a2">Iterator</a> <a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list.php">NRE::Utility::ForwardList</a>&lt; T &gt;::begin </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>an iterator on the first element </dd></dl>

</div>
</div>
<a class="anchor" id="a33a45e05297f0a4809590e2986024906"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list_1_1_forward_iterator.php">ConstIterator</a> <a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list.php">NRE::Utility::ForwardList</a>&lt; T &gt;::begin </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>a const iterator on the first element </dd></dl>

</div>
</div>
<a class="anchor" id="af5014ccf5a5fe77c4dde26b29685c195"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list_1_1_forward_iterator.php">ConstIterator</a> <a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list.php">NRE::Utility::ForwardList</a>&lt; T &gt;::cbeforeBegin </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>a const iterator on the element before the first element </dd></dl>

</div>
</div>
<a class="anchor" id="a939eccb99f521e6cab28486fd8ef691a"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list_1_1_forward_iterator.php">ConstIterator</a> <a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list.php">NRE::Utility::ForwardList</a>&lt; T &gt;::cbegin </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>a const iterator on the first element </dd></dl>

</div>
</div>
<a class="anchor" id="a48bf1da33895bd7cf048e6f741006f75"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list_1_1_forward_iterator.php">ConstIterator</a> <a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list.php">NRE::Utility::ForwardList</a>&lt; T &gt;::cend </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>a const iterator on the end of the container </dd></dl>

</div>
</div>
<a class="anchor" id="a8a315981e2175311a4be04307ca4d598"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list.php">NRE::Utility::ForwardList</a>&lt; T &gt;::clear </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Clear all objects in the list </p>

</div>
</div>
<a class="anchor" id="a556c44fdc228e15b754486c2e7e05119"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T &gt; </div>
<div class="memtemplate">
template&lt;class... Args&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list.php#a3acc0d8cec711c5199f9f50b438819a2">Iterator</a> <a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list.php">NRE::Utility::ForwardList</a>&lt; T &gt;::emplaceAfter </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list_1_1_forward_iterator.php">ConstIterator</a>&#160;</td>
          <td class="paramname"><em>pos</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">Args &amp;&amp;...&#160;</td>
          <td class="paramname"><em>args</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Emplace an element after the given position </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pos</td><td>the position to insert after </td></tr>
    <tr><td class="paramname">args</td><td>the parameters pack used to create the element </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an interator on the inserted element </dd></dl>

</div>
</div>
<a class="anchor" id="a69d90b2dfebcf8f0d6785bca2a6269de"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T &gt; </div>
<div class="memtemplate">
template&lt;class... Args&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list.php">NRE::Utility::ForwardList</a>&lt; T &gt;::emplaceFront </td>
          <td>(</td>
          <td class="paramtype">Args &amp;&amp;...&#160;</td>
          <td class="paramname"><em>args</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Emplace an element to the the front of the list </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">args</td><td>the parameters pack used to create the element </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="afb02bba9f3b0f4c654a3e8447a8c29df"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list.php#a3acc0d8cec711c5199f9f50b438819a2">Iterator</a> <a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list.php">NRE::Utility::ForwardList</a>&lt; T &gt;::end </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>an iterator on the end of the container </dd></dl>

</div>
</div>
<a class="anchor" id="a0c5d44b978a994cb02de53dca37c2c55"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list_1_1_forward_iterator.php">ConstIterator</a> <a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list.php">NRE::Utility::ForwardList</a>&lt; T &gt;::end </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>a const iterator on the end of the container </dd></dl>

</div>
</div>
<a class="anchor" id="a7292c79d580d66cc78e47871672e1c99"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list.php#a3acc0d8cec711c5199f9f50b438819a2">Iterator</a> <a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list.php">NRE::Utility::ForwardList</a>&lt; T &gt;::eraseAfter </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list_1_1_forward_iterator.php">ConstIterator</a>&#160;</td>
          <td class="paramname"><em>pos</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Erase the element after the given position </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pos</td><td>the position to erase after </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the iterator on the element after the erased element </dd></dl>

</div>
</div>
<a class="anchor" id="a10135bd1cc61618203b95b0fc8d9bb4f"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list.php#a3acc0d8cec711c5199f9f50b438819a2">Iterator</a> <a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list.php">NRE::Utility::ForwardList</a>&lt; T &gt;::eraseAfter </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list_1_1_forward_iterator.php">ConstIterator</a>&#160;</td>
          <td class="paramname"><em>begin</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list_1_1_forward_iterator.php">ConstIterator</a>&#160;</td>
          <td class="paramname"><em>end</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Erase all element in the given range except the begin and end </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">begin</td><td>the begin position to erase after </td></tr>
    <tr><td class="paramname">end</td><td>the end iterator </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the end iterator </dd></dl>

</div>
</div>
<a class="anchor" id="adfc013e87d5c3b3d7fe06cb516c583ee"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">T&amp; <a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list.php">NRE::Utility::ForwardList</a>&lt; T &gt;::getFront </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>the list head </dd></dl>

</div>
</div>
<a class="anchor" id="a1da224f1b24067cfcd05c9fb0f8624a8"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">T const&amp; <a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list.php">NRE::Utility::ForwardList</a>&lt; T &gt;::getFront </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>the list head </dd></dl>

</div>
</div>
<a class="anchor" id="a6887f6266bc1df288976812b94022a9a"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">constexpr std::size_t <a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list.php">NRE::Utility::ForwardList</a>&lt; T &gt;::getMaxSize </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>the maximum list size </dd></dl>

</div>
</div>
<a class="anchor" id="ae8340f5c369b0d637cbeca498fdaff36"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">std::size_t <a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list.php">NRE::Utility::ForwardList</a>&lt; T &gt;::getSize </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>the list size </dd></dl>

</div>
</div>
<a class="anchor" id="a7a886342ded3b3ea531d6c1a0b1afdfc"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list.php#a3acc0d8cec711c5199f9f50b438819a2">Iterator</a> <a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list.php">NRE::Utility::ForwardList</a>&lt; T &gt;::insertAfter </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list_1_1_forward_iterator.php">ConstIterator</a>&#160;</td>
          <td class="paramname"><em>pos</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">T const &amp;&#160;</td>
          <td class="paramname"><em>value</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Insert a copy of the given element after the given position </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pos</td><td>the position to insert after </td></tr>
    <tr><td class="paramname">value</td><td>the element to insert </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an iterator on the inserted element </dd></dl>

</div>
</div>
<a class="anchor" id="a155d6241e59b61619b18fee7be830712"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list.php#a3acc0d8cec711c5199f9f50b438819a2">Iterator</a> <a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list.php">NRE::Utility::ForwardList</a>&lt; T &gt;::insertAfter </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list_1_1_forward_iterator.php">ConstIterator</a>&#160;</td>
          <td class="paramname"><em>pos</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">T &amp;&amp;&#160;</td>
          <td class="paramname"><em>value</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Insert the given element after the given position </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pos</td><td>the position to insert after </td></tr>
    <tr><td class="paramname">value</td><td>the element to insert </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an iterator on the inserted element </dd></dl>

</div>
</div>
<a class="anchor" id="a896bc120a5bb01cce28f015ba055cba7"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list.php#a3acc0d8cec711c5199f9f50b438819a2">Iterator</a> <a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list.php">NRE::Utility::ForwardList</a>&lt; T &gt;::insertAfter </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list_1_1_forward_iterator.php">ConstIterator</a>&#160;</td>
          <td class="paramname"><em>pos</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::size_t&#160;</td>
          <td class="paramname"><em>count</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">T const &amp;&#160;</td>
          <td class="paramname"><em>value</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Insert count copy of the given element after the given position </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pos</td><td>the position to insert after </td></tr>
    <tr><td class="paramname">count</td><td>the number of copy to insert </td></tr>
    <tr><td class="paramname">value</td><td>the element to insert </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an iterator on the last copy </dd></dl>

</div>
</div>
<a class="anchor" id="a1fabe6acc7fbc75e4a33d088ed0092c6"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T &gt; </div>
<div class="memtemplate">
template&lt;class InputIterator &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list.php#a3acc0d8cec711c5199f9f50b438819a2">Iterator</a> <a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list.php">NRE::Utility::ForwardList</a>&lt; T &gt;::insertAfter </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list_1_1_forward_iterator.php">ConstIterator</a>&#160;</td>
          <td class="paramname"><em>pos</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">InputIterator&#160;</td>
          <td class="paramname"><em>begin</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">InputIterator&#160;</td>
          <td class="paramname"><em>end</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Insert copy of elements in the given range after the given position </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pos</td><td>the position to insert after </td></tr>
    <tr><td class="paramname">begin</td><td>the iterator on the first element </td></tr>
    <tr><td class="paramname">end</td><td>the iterator after the last element </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an iterator on the last inserted element </dd></dl>

</div>
</div>
<a class="anchor" id="ae9b7323fb710148930ece9ff55762664"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list.php#a3acc0d8cec711c5199f9f50b438819a2">Iterator</a> <a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list.php">NRE::Utility::ForwardList</a>&lt; T &gt;::insertAfter </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list_1_1_forward_iterator.php">ConstIterator</a>&#160;</td>
          <td class="paramname"><em>pos</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::initializer_list&lt; T &gt;&#160;</td>
          <td class="paramname"><em>list</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Insert copy of elements in the given list after the given position </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pos</td><td>the position to insert after </td></tr>
    <tr><td class="paramname">list</td><td>the list containing elements </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an iterator on the last inserted element </dd></dl>

</div>
</div>
<a class="anchor" id="a4230e7e0d342c0f60ebe575be23794ae"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">bool <a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list.php">NRE::Utility::ForwardList</a>&lt; T &gt;::isEmpty </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>if the list is empty </dd></dl>

</div>
</div>
<a class="anchor" id="affd684c8979b6b1119398924def150df"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list.php">NRE::Utility::ForwardList</a>&lt; T &gt;::merge </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list.php">ForwardList</a>&lt; T &gt; &amp;&#160;</td>
          <td class="paramname"><em>list</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Merge this with list, both need to be sorted, list becomes empty </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">list</td><td>the other list to merge with this </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a90cd056f82691122f678b2cce634da03"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list.php">NRE::Utility::ForwardList</a>&lt; T &gt;::merge </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list.php">ForwardList</a>&lt; T &gt; &amp;&amp;&#160;</td>
          <td class="paramname"><em>list</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Merge this with list, both need to be sorted, list becomes empty </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">list</td><td>the other list to merge with this </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="adf59962f569662f41d7f388fb399eb02"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T &gt; </div>
<div class="memtemplate">
template&lt;class Comparator &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list.php">NRE::Utility::ForwardList</a>&lt; T &gt;::merge </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list.php">ForwardList</a>&lt; T &gt; &amp;&#160;</td>
          <td class="paramname"><em>list</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">Comparator&#160;</td>
          <td class="paramname"><em>comp</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Merge this with list, both need to be sorted, list becomes empty </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">list</td><td>the other list to merge with this </td></tr>
    <tr><td class="paramname">comp</td><td>function which returns ​true if the first argument is less than the second </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="aa3fb766673028cfab038d208b6359885"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T &gt; </div>
<div class="memtemplate">
template&lt;class Comparator &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list.php">NRE::Utility::ForwardList</a>&lt; T &gt;::merge </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list.php">ForwardList</a>&lt; T &gt; &amp;&amp;&#160;</td>
          <td class="paramname"><em>list</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">Comparator&#160;</td>
          <td class="paramname"><em>comp</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Merge this with list, both need to be sorted, list becomes empty </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">list</td><td>the other list to merge with this </td></tr>
    <tr><td class="paramname">comp</td><td>function which returns ​true if the first argument is less than the second </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="ad0fd2ac4cb1bdf018495f6883d1f6abd"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">bool <a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list.php">NRE::Utility::ForwardList</a>&lt; T &gt;::operator!= </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list.php">ForwardList</a>&lt; T &gt; const &amp;&#160;</td>
          <td class="paramname"><em>list</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Inequality test between this and list </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">list</td><td>the other list to compare with this </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the test result </dd></dl>

</div>
</div>
<a class="anchor" id="a518040ca55236bc4b6311d3e4b81c4e1"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list.php">ForwardList</a>&amp; <a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list.php">NRE::Utility::ForwardList</a>&lt; T &gt;::operator= </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list.php">ForwardList</a>&lt; T &gt; const &amp;&#160;</td>
          <td class="paramname"><em>list</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Copy list into this </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">list</td><td>the list to copy into this </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the reference of himself </dd></dl>

</div>
</div>
<a class="anchor" id="a1175326969d7c703a49b301fcec00808"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list.php">ForwardList</a>&amp; <a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list.php">NRE::Utility::ForwardList</a>&lt; T &gt;::operator= </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list.php">ForwardList</a>&lt; T &gt; &amp;&amp;&#160;</td>
          <td class="paramname"><em>list</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Move list into this </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">list</td><td>the list to move into this </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the reference of himself </dd></dl>

</div>
</div>
<a class="anchor" id="a179773ca079ad121d576e1f968e4dd3d"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">bool <a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list.php">NRE::Utility::ForwardList</a>&lt; T &gt;::operator== </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list.php">ForwardList</a>&lt; T &gt; const &amp;&#160;</td>
          <td class="paramname"><em>list</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Equality test between this and list </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">list</td><td>the other list to compare with this </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the test result </dd></dl>

</div>
</div>
<a class="anchor" id="afd08bbd64f1332e2846332faf05edf0c"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list.php">NRE::Utility::ForwardList</a>&lt; T &gt;::popFront </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Pop the front of the list </p>

</div>
</div>
<a class="anchor" id="a5720966108c053486764488b175c8236"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list.php">NRE::Utility::ForwardList</a>&lt; T &gt;::pushFront </td>
          <td>(</td>
          <td class="paramtype">T const &amp;&#160;</td>
          <td class="paramname"><em>value</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Insert a copy of the given element to the front of the list </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">value</td><td>the value to insert </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a833cba92bec5201dc68285da899a6c91"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list.php">NRE::Utility::ForwardList</a>&lt; T &gt;::pushFront </td>
          <td>(</td>
          <td class="paramtype">T &amp;&amp;&#160;</td>
          <td class="paramname"><em>value</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Insert the given element to the front of the list </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">value</td><td>the value to insert </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a2ede32aba63daeaf90c27ba7b76449a1"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list.php">NRE::Utility::ForwardList</a>&lt; T &gt;::remove </td>
          <td>(</td>
          <td class="paramtype">T const &amp;&#160;</td>
          <td class="paramname"><em>value</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Remove all elements in the list equals to the given value </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">value</td><td>the value to erase </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="adf7c2c901e9862da8eee8bd3456a7230"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T &gt; </div>
<div class="memtemplate">
template&lt;class UnaryPredicate &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list.php">NRE::Utility::ForwardList</a>&lt; T &gt;::removeIf </td>
          <td>(</td>
          <td class="paramtype">UnaryPredicate&#160;</td>
          <td class="paramname"><em>p</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Remove all elements in the list where p return true </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">p</td><td>the predicate used to remove </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a20f9fa2f08136e35abd328d181894efe"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list.php">NRE::Utility::ForwardList</a>&lt; T &gt;::resize </td>
          <td>(</td>
          <td class="paramtype">std::size_t&#160;</td>
          <td class="paramname"><em>count</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Resize the container up the given size, insert value if needed </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">count</td><td>the new capacity </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="aec2b33767a48b922718c48537d170a8f"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list.php">NRE::Utility::ForwardList</a>&lt; T &gt;::resize </td>
          <td>(</td>
          <td class="paramtype">std::size_t&#160;</td>
          <td class="paramname"><em>count</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">T const &amp;&#160;</td>
          <td class="paramname"><em>value</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Resize the container up the given size, insert value if needed </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">count</td><td>the new capacity </td></tr>
    <tr><td class="paramname">value</td><td>the value used when inserting </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a287e094c67d23dbe207322a545abf6a8"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list.php">NRE::Utility::ForwardList</a>&lt; T &gt;::reverse </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Reverse the list </p>

</div>
</div>
<a class="anchor" id="a23399cdf79c7d2e629f9da7754c1904a"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list.php">NRE::Utility::ForwardList</a>&lt; T &gt;::spliceAfter </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list_1_1_forward_iterator.php">ConstIterator</a>&#160;</td>
          <td class="paramname"><em>pos</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list.php">ForwardList</a>&lt; T &gt; &amp;&#160;</td>
          <td class="paramname"><em>list</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Move elements from list into this, insertion start after pos </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pos</td><td>the position to insert after </td></tr>
    <tr><td class="paramname">list</td><td>the list to empty </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a2b2f731617fa5f35695a7b8ce4b52dea"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list.php">NRE::Utility::ForwardList</a>&lt; T &gt;::spliceAfter </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list_1_1_forward_iterator.php">ConstIterator</a>&#160;</td>
          <td class="paramname"><em>pos</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list.php">ForwardList</a>&lt; T &gt; &amp;&amp;&#160;</td>
          <td class="paramname"><em>list</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Move elements from list into this, insertion start after pos </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pos</td><td>the position to insert after </td></tr>
    <tr><td class="paramname">list</td><td>the list to empty </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="aabfb374871e0e9eb95c11815e37f1ef4"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list.php">NRE::Utility::ForwardList</a>&lt; T &gt;::spliceAfter </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list_1_1_forward_iterator.php">ConstIterator</a>&#160;</td>
          <td class="paramname"><em>pos</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list.php">ForwardList</a>&lt; T &gt; &amp;&#160;</td>
          <td class="paramname"><em>list</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list_1_1_forward_iterator.php">ConstIterator</a>&#160;</td>
          <td class="paramname"><em>it</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Move the element pointed by it from list into this, insertion start after pos </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pos</td><td>the position to insert after </td></tr>
    <tr><td class="paramname">list</td><td>the list to empty </td></tr>
    <tr><td class="paramname">it</td><td>the element to move </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="aba199f48b1039faf136811335a78bc21"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list.php">NRE::Utility::ForwardList</a>&lt; T &gt;::spliceAfter </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list_1_1_forward_iterator.php">ConstIterator</a>&#160;</td>
          <td class="paramname"><em>pos</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list.php">ForwardList</a>&lt; T &gt; &amp;&amp;&#160;</td>
          <td class="paramname"><em>list</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list_1_1_forward_iterator.php">ConstIterator</a>&#160;</td>
          <td class="paramname"><em>it</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Move the element pointed by it from list into this, insertion start after pos </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pos</td><td>the position to insert after </td></tr>
    <tr><td class="paramname">list</td><td>the list to empty </td></tr>
    <tr><td class="paramname">it</td><td>the element to move </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a102090f38874878cb656a5482b26d861"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list.php">NRE::Utility::ForwardList</a>&lt; T &gt;::spliceAfter </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list_1_1_forward_iterator.php">ConstIterator</a>&#160;</td>
          <td class="paramname"><em>pos</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list.php">ForwardList</a>&lt; T &gt; &amp;&#160;</td>
          <td class="paramname"><em>list</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list_1_1_forward_iterator.php">ConstIterator</a>&#160;</td>
          <td class="paramname"><em>begin</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list_1_1_forward_iterator.php">ConstIterator</a>&#160;</td>
          <td class="paramname"><em>end</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Move elements in the given range (begin, end) from list into this, insertion start after pos </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pos</td><td>the position to insert after </td></tr>
    <tr><td class="paramname">list</td><td>the list to empty </td></tr>
    <tr><td class="paramname">begin</td><td>the range start to take elements from </td></tr>
    <tr><td class="paramname">end</td><td>the range end to take elements from </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="aa28f27244f2d0ac15d3f65bfd50ccb2e"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list.php">NRE::Utility::ForwardList</a>&lt; T &gt;::spliceAfter </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list_1_1_forward_iterator.php">ConstIterator</a>&#160;</td>
          <td class="paramname"><em>pos</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list.php">ForwardList</a>&lt; T &gt; &amp;&amp;&#160;</td>
          <td class="paramname"><em>list</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list_1_1_forward_iterator.php">ConstIterator</a>&#160;</td>
          <td class="paramname"><em>begin</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list_1_1_forward_iterator.php">ConstIterator</a>&#160;</td>
          <td class="paramname"><em>end</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Move elements in the given range (begin, end) from list into this, insertion start after pos </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pos</td><td>the position to insert after </td></tr>
    <tr><td class="paramname">list</td><td>the list to empty </td></tr>
    <tr><td class="paramname">begin</td><td>the range start to take elements from </td></tr>
    <tr><td class="paramname">end</td><td>the range end to take elements from </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a7ea1219016b9a78be086cf0295c5b30a"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list.php">NRE::Utility::ForwardList</a>&lt; T &gt;::swap </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list.php">ForwardList</a>&lt; T &gt; &amp;&#160;</td>
          <td class="paramname"><em>list</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Swap the content of the given list with this </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">list</td><td>the other list </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="aafa290016886ac3246f976789186ab75"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">String</a> <a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list.php">NRE::Utility::ForwardList</a>&lt; T &gt;::toString </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Convert the object into a string representation </p><dl class="section return"><dt>Returns</dt><dd>the converted object </dd></dl>

</div>
</div>
<a class="anchor" id="a95a00f5843333bc8e849403aa33eb736"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="class_n_r_e_1_1_utility_1_1_forward_list.php">NRE::Utility::ForwardList</a>&lt; T &gt;::unique </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Remove successive redondants elements </p>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>/mnt/c/Users/abell/Documents/GitHub/NRE-Utility/src/Utility/ForwardList/<a class="el" href="_n_r_e___forward_list_8hpp_source.php">NRE_ForwardList.hpp</a></li>
</ul>
</div><!-- contents -->
<!-- HTML footer for doxygen 1.8.8-->
<!-- start footer part -->
</div>
</div>
</div>
</div>
</body>
</html>
