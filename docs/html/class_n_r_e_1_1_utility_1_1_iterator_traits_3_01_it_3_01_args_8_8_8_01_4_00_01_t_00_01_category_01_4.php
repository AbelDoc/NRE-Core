<!-- HTML header for doxygen 1.8.8-->
<!DOCTYPE html>
<html>
    <head>
        <meta http-equiv="X-UA-Compatible" content="IE=edge">
        <!-- For Mobile Devices -->
        <meta name="viewport" content="width=device-width, initial-scale=1">
        <meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
        <meta name="generator" content="Doxygen 1.8.11"/>
        <script type="text/javascript" src="../../js/jquery-2.1.1.min.js"></script>
        <title>NRE-Utility: NRE::Utility::IteratorTraits&lt; It&lt; Args... &gt;, T, Category &gt; Class Template Reference</title>
        <!--<link href="tabs.css" rel="stylesheet" type="text/css"/>-->
        <script type="text/javascript" src="dynsections.js"></script>
        <link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
        <link href="doxygen.css" rel="stylesheet" type="text/css" />
        <link href="style.css" rel="stylesheet" type="text/css"/>
        <link href='https://fonts.googleapis.com/css?family=Roboto+Slab' rel='stylesheet' type='text/css'>
        <?php
            include '../../php/navigation.php';
            if (!isset($_COOKIE["theme"]) || $_COOKIE["theme"] == "dark") {
                echo '<link href="../../css/dark/bootstrap.css" rel="stylesheet">';
            } else {
                echo '<link href="../../css/light/bootstrap.css" rel="stylesheet">';
            }
        ?>
        <script src="../../js/bootstrap.min.js"></script>
        <script type="text/javascript" src="doxy-boot.js"></script>
    </head>
    <body>
        <div class="container-fluid">
            <header class="page-header">
                <a href="../../../index.php">
                    <img src="../../img/Logo.png" class="logo img-responsive"/>
                </a>
            </header>
            <?php addNavigationBarInl(false); ?>
            <div id="top" class="row"><!-- do not remove this div, it is closed by doxygen! -->
                <div class="col-lg-12">
                    <div class="panel panel-default">
                        <div class="panel-body">
<!-- end header part -->
<!-- Generated by Doxygen 1.8.11 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.php"><span>Main&#160;Page</span></a></li>
      <li><a href="namespaces.php"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.php"><span>Classes</span></a></li>
      <li><a href="files.php"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.php"><span>Class&#160;List</span></a></li>
      <li><a href="classes.php"><span>Class&#160;Index</span></a></li>
      <li><a href="hierarchy.php"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.php"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespace_n_r_e.php">NRE</a></li><li class="navelem"><b>Utility</b></li><li class="navelem"><a class="el" href="class_n_r_e_1_1_utility_1_1_iterator_traits_3_01_it_3_01_args_8_8_8_01_4_00_01_t_00_01_category_01_4.php">IteratorTraits&lt; It&lt; Args... &gt;, T, Category &gt;</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-types">Public Types</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="class_n_r_e_1_1_utility_1_1_iterator_traits_3_01_it_3_01_args_8_8_8_01_4_00_01_t_00_01_category_01_4-members.php">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">NRE::Utility::IteratorTraits&lt; It&lt; Args... &gt;, T, Category &gt; Class Template Reference</div>  </div>
</div><!--header-->
<div class="contents">
<div class="dynheader">
Inheritance diagram for NRE::Utility::IteratorTraits&lt; It&lt; Args... &gt;, T, Category &gt;:</div>
<div class="dyncontent">
 <div class="center">
  <img src="class_n_r_e_1_1_utility_1_1_iterator_traits_3_01_it_3_01_args_8_8_8_01_4_00_01_t_00_01_category_01_4.png" usemap="#NRE::Utility::IteratorTraits_3C_20It_3C_20Args..._20_3E_2C_20T_2C_20Category_20_3E_map" alt=""/>
  <map id="NRE::Utility::IteratorTraits_3C_20It_3C_20Args..._20_3E_2C_20T_2C_20Category_20_3E_map" name="NRE::Utility::IteratorTraits&lt; It&lt; Args... &gt;, T, Category &gt;_map">
<area href="class_n_r_e_1_1_utility_1_1_static_interface.php" alt="NRE::Utility::StaticInterface&lt; IteratorTraits&lt; It&lt; Args... &gt;, T, Category &gt; &gt;" shape="rect" coords="0,0,425,24"/>
</map>
 </div></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-types"></a>
Public Types</h2></td></tr>
<tr class="memitem:a80c6f9a2479727528c4fd0e2c63bd87b"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_iterator_traits_3_01_it_3_01_args_8_8_8_01_4_00_01_t_00_01_category_01_4.php#a80c6f9a2479727528c4fd0e2c63bd87b">Iterator</a> = It&lt; Args... &gt;</td></tr>
<tr class="separator:a80c6f9a2479727528c4fd0e2c63bd87b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a631b61a5a6c5428c030e2ee53680672c"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_iterator_traits_3_01_it_3_01_args_8_8_8_01_4_00_01_t_00_01_category_01_4.php#a631b61a5a6c5428c030e2ee53680672c">ValueType</a> = T</td></tr>
<tr class="separator:a631b61a5a6c5428c030e2ee53680672c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4dcab47463b6dc136ec7ac6fb19e6c79"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_iterator_traits_3_01_it_3_01_args_8_8_8_01_4_00_01_t_00_01_category_01_4.php#a4dcab47463b6dc136ec7ac6fb19e6c79">Pointer</a> = std::conditional_t&lt; IsOutputIteratorV&lt; Category &gt;, <a class="el" href="class_n_r_e_1_1_utility_1_1_iterator_traits_3_01_it_3_01_args_8_8_8_01_4_00_01_t_00_01_category_01_4.php#a631b61a5a6c5428c030e2ee53680672c">ValueType</a> *, const <a class="el" href="class_n_r_e_1_1_utility_1_1_iterator_traits_3_01_it_3_01_args_8_8_8_01_4_00_01_t_00_01_category_01_4.php#a631b61a5a6c5428c030e2ee53680672c">ValueType</a> * &gt;</td></tr>
<tr class="separator:a4dcab47463b6dc136ec7ac6fb19e6c79"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5f751860a94ddc303784f5d9f2e81569"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_iterator_traits_3_01_it_3_01_args_8_8_8_01_4_00_01_t_00_01_category_01_4.php#a5f751860a94ddc303784f5d9f2e81569">Reference</a> = std::conditional_t&lt; IsOutputIteratorV&lt; Category &gt;, <a class="el" href="class_n_r_e_1_1_utility_1_1_iterator_traits_3_01_it_3_01_args_8_8_8_01_4_00_01_t_00_01_category_01_4.php#a631b61a5a6c5428c030e2ee53680672c">ValueType</a> &amp;, <a class="el" href="class_n_r_e_1_1_utility_1_1_iterator_traits_3_01_it_3_01_args_8_8_8_01_4_00_01_t_00_01_category_01_4.php#a631b61a5a6c5428c030e2ee53680672c">ValueType</a> const &amp; &gt;</td></tr>
<tr class="separator:a5f751860a94ddc303784f5d9f2e81569"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9eb6cb5f8b139377cb59f390cdd19204"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_iterator_traits_3_01_it_3_01_args_8_8_8_01_4_00_01_t_00_01_category_01_4.php#a9eb6cb5f8b139377cb59f390cdd19204">DifferenceType</a> = std::ptrdiff_t</td></tr>
<tr class="separator:a9eb6cb5f8b139377cb59f390cdd19204"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a514afaebd5ebefb537558c76b2e9a4de"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_iterator_traits_3_01_it_3_01_args_8_8_8_01_4_00_01_t_00_01_category_01_4.php#a514afaebd5ebefb537558c76b2e9a4de">value_type</a> = <a class="el" href="class_n_r_e_1_1_utility_1_1_iterator_traits_3_01_it_3_01_args_8_8_8_01_4_00_01_t_00_01_category_01_4.php#a631b61a5a6c5428c030e2ee53680672c">ValueType</a></td></tr>
<tr class="separator:a514afaebd5ebefb537558c76b2e9a4de"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac5fed734bb18a765a42300e9df123ada"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_iterator_traits_3_01_it_3_01_args_8_8_8_01_4_00_01_t_00_01_category_01_4.php#ac5fed734bb18a765a42300e9df123ada">pointer</a> = <a class="el" href="class_n_r_e_1_1_utility_1_1_iterator_traits_3_01_it_3_01_args_8_8_8_01_4_00_01_t_00_01_category_01_4.php#a4dcab47463b6dc136ec7ac6fb19e6c79">Pointer</a></td></tr>
<tr class="separator:ac5fed734bb18a765a42300e9df123ada"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a808f9cd48084bc1603a85ad48a7a7236"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_iterator_traits_3_01_it_3_01_args_8_8_8_01_4_00_01_t_00_01_category_01_4.php#a808f9cd48084bc1603a85ad48a7a7236">reference</a> = <a class="el" href="class_n_r_e_1_1_utility_1_1_iterator_traits_3_01_it_3_01_args_8_8_8_01_4_00_01_t_00_01_category_01_4.php#a5f751860a94ddc303784f5d9f2e81569">Reference</a></td></tr>
<tr class="separator:a808f9cd48084bc1603a85ad48a7a7236"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae14ab9a6fd5ca93051b2cb004a86016e"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_iterator_traits_3_01_it_3_01_args_8_8_8_01_4_00_01_t_00_01_category_01_4.php#ae14ab9a6fd5ca93051b2cb004a86016e">difference_type</a> = <a class="el" href="class_n_r_e_1_1_utility_1_1_iterator_traits_3_01_it_3_01_args_8_8_8_01_4_00_01_t_00_01_category_01_4.php#a9eb6cb5f8b139377cb59f390cdd19204">DifferenceType</a></td></tr>
<tr class="separator:ae14ab9a6fd5ca93051b2cb004a86016e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a616c7cbcb2833d40d3e3961bdd18919e"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_iterator_traits_3_01_it_3_01_args_8_8_8_01_4_00_01_t_00_01_category_01_4.php#a616c7cbcb2833d40d3e3961bdd18919e">iterator_category</a> = std::conditional_t&lt; std::is_pointer_v&lt; T &gt;, std::random_access_iterator_tag, typename Category::iterator_category &gt;</td></tr>
<tr class="separator:a616c7cbcb2833d40d3e3961bdd18919e"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a2e078d50b1fe97a291edf3243da54665"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_utility_1_1_iterator_traits_3_01_it_3_01_args_8_8_8_01_4_00_01_t_00_01_category_01_4.php#a5f751860a94ddc303784f5d9f2e81569">Reference</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_iterator_traits_3_01_it_3_01_args_8_8_8_01_4_00_01_t_00_01_category_01_4.php#a2e078d50b1fe97a291edf3243da54665">dereference</a> () const </td></tr>
<tr class="separator:a2e078d50b1fe97a291edf3243da54665"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a77704782bef390fd71dd185643d63de6"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_iterator_traits_3_01_it_3_01_args_8_8_8_01_4_00_01_t_00_01_category_01_4.php#a77704782bef390fd71dd185643d63de6">increment</a> ()</td></tr>
<tr class="separator:a77704782bef390fd71dd185643d63de6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acb1d748e3e4f6f84227cc2f79bdc7bcd"><td class="memTemplParams" colspan="2">template&lt;class K  = Category, typename  = UseIfBidirectionalIterator&lt;K&gt;&gt; </td></tr>
<tr class="memitem:acb1d748e3e4f6f84227cc2f79bdc7bcd"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_iterator_traits_3_01_it_3_01_args_8_8_8_01_4_00_01_t_00_01_category_01_4.php#acb1d748e3e4f6f84227cc2f79bdc7bcd">decrement</a> ()</td></tr>
<tr class="separator:acb1d748e3e4f6f84227cc2f79bdc7bcd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6c4bdfbe2f20d2fa4b551fc1429a3616"><td class="memTemplParams" colspan="2">template&lt;class K  = Category, typename  = UseIfRandomAccessIterator&lt;K&gt;&gt; </td></tr>
<tr class="memitem:a6c4bdfbe2f20d2fa4b551fc1429a3616"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_iterator_traits_3_01_it_3_01_args_8_8_8_01_4_00_01_t_00_01_category_01_4.php#a6c4bdfbe2f20d2fa4b551fc1429a3616">advance</a> (<a class="el" href="class_n_r_e_1_1_utility_1_1_iterator_traits_3_01_it_3_01_args_8_8_8_01_4_00_01_t_00_01_category_01_4.php#a9eb6cb5f8b139377cb59f390cdd19204">DifferenceType</a> n)</td></tr>
<tr class="separator:a6c4bdfbe2f20d2fa4b551fc1429a3616"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a04efe14b0c268a99b3275d4eab6b9688"><td class="memTemplParams" colspan="2">template&lt;class K  = Category, typename  = UseIfRandomAccessIterator&lt;K&gt;&gt; </td></tr>
<tr class="memitem:a04efe14b0c268a99b3275d4eab6b9688"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_utility_1_1_iterator_traits_3_01_it_3_01_args_8_8_8_01_4_00_01_t_00_01_category_01_4.php#a9eb6cb5f8b139377cb59f390cdd19204">DifferenceType</a>&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_iterator_traits_3_01_it_3_01_args_8_8_8_01_4_00_01_t_00_01_category_01_4.php#a04efe14b0c268a99b3275d4eab6b9688">distanceTo</a> (<a class="el" href="class_n_r_e_1_1_utility_1_1_iterator_traits_3_01_it_3_01_args_8_8_8_01_4_00_01_t_00_01_category_01_4.php#a80c6f9a2479727528c4fd0e2c63bd87b">Iterator</a> const &amp;it) const </td></tr>
<tr class="separator:a04efe14b0c268a99b3275d4eab6b9688"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afcbccad2752950750f002f3ab8666d6c"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_iterator_traits_3_01_it_3_01_args_8_8_8_01_4_00_01_t_00_01_category_01_4.php#afcbccad2752950750f002f3ab8666d6c">equal</a> (<a class="el" href="class_n_r_e_1_1_utility_1_1_iterator_traits_3_01_it_3_01_args_8_8_8_01_4_00_01_t_00_01_category_01_4.php#a80c6f9a2479727528c4fd0e2c63bd87b">Iterator</a> const &amp;it) const </td></tr>
<tr class="separator:afcbccad2752950750f002f3ab8666d6c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac62c9e772174e3841532d682e4bbc568"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_utility_1_1_iterator_traits_3_01_it_3_01_args_8_8_8_01_4_00_01_t_00_01_category_01_4.php#a5f751860a94ddc303784f5d9f2e81569">Reference</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_iterator_traits_3_01_it_3_01_args_8_8_8_01_4_00_01_t_00_01_category_01_4.php#ac62c9e772174e3841532d682e4bbc568">operator*</a> () const </td></tr>
<tr class="separator:ac62c9e772174e3841532d682e4bbc568"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a43b37c613bfbd57853d4825b15fcdd6c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_utility_1_1_iterator_traits_3_01_it_3_01_args_8_8_8_01_4_00_01_t_00_01_category_01_4.php#a4dcab47463b6dc136ec7ac6fb19e6c79">Pointer</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_iterator_traits_3_01_it_3_01_args_8_8_8_01_4_00_01_t_00_01_category_01_4.php#a43b37c613bfbd57853d4825b15fcdd6c">operator-&gt;</a> ()</td></tr>
<tr class="separator:a43b37c613bfbd57853d4825b15fcdd6c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1e4fd3771e7955bb221bbd5c853cfe76"><td class="memTemplParams" colspan="2">template&lt;class K  = Category, typename  = UseIfRandomAccessIterator&lt;K&gt;&gt; </td></tr>
<tr class="memitem:a1e4fd3771e7955bb221bbd5c853cfe76"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_utility_1_1_iterator_traits_3_01_it_3_01_args_8_8_8_01_4_00_01_t_00_01_category_01_4.php#a5f751860a94ddc303784f5d9f2e81569">Reference</a>&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_iterator_traits_3_01_it_3_01_args_8_8_8_01_4_00_01_t_00_01_category_01_4.php#a1e4fd3771e7955bb221bbd5c853cfe76">operator[]</a> (<a class="el" href="class_n_r_e_1_1_utility_1_1_iterator_traits_3_01_it_3_01_args_8_8_8_01_4_00_01_t_00_01_category_01_4.php#a9eb6cb5f8b139377cb59f390cdd19204">DifferenceType</a> n) const </td></tr>
<tr class="separator:a1e4fd3771e7955bb221bbd5c853cfe76"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8354684924f0f2ac6ead214a737880af"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_utility_1_1_iterator_traits_3_01_it_3_01_args_8_8_8_01_4_00_01_t_00_01_category_01_4.php#a80c6f9a2479727528c4fd0e2c63bd87b">Iterator</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_iterator_traits_3_01_it_3_01_args_8_8_8_01_4_00_01_t_00_01_category_01_4.php#a8354684924f0f2ac6ead214a737880af">operator++</a> ()</td></tr>
<tr class="separator:a8354684924f0f2ac6ead214a737880af"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a610cb00e9d3ac424530ee0e0071562af"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_utility_1_1_iterator_traits_3_01_it_3_01_args_8_8_8_01_4_00_01_t_00_01_category_01_4.php#a80c6f9a2479727528c4fd0e2c63bd87b">Iterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_iterator_traits_3_01_it_3_01_args_8_8_8_01_4_00_01_t_00_01_category_01_4.php#a610cb00e9d3ac424530ee0e0071562af">operator++</a> (int)</td></tr>
<tr class="separator:a610cb00e9d3ac424530ee0e0071562af"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acdce086fbf55172cf9d5531c391f27d4"><td class="memTemplParams" colspan="2">template&lt;class K  = Category, typename  = UseIfBidirectionalIterator&lt;K&gt;&gt; </td></tr>
<tr class="memitem:acdce086fbf55172cf9d5531c391f27d4"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_utility_1_1_iterator_traits_3_01_it_3_01_args_8_8_8_01_4_00_01_t_00_01_category_01_4.php#a80c6f9a2479727528c4fd0e2c63bd87b">Iterator</a> &amp;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_iterator_traits_3_01_it_3_01_args_8_8_8_01_4_00_01_t_00_01_category_01_4.php#acdce086fbf55172cf9d5531c391f27d4">operator--</a> ()</td></tr>
<tr class="separator:acdce086fbf55172cf9d5531c391f27d4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a29de60e24b4102ea12d083ef827d6a35"><td class="memTemplParams" colspan="2">template&lt;class K  = Category, typename  = UseIfBidirectionalIterator&lt;K&gt;&gt; </td></tr>
<tr class="memitem:a29de60e24b4102ea12d083ef827d6a35"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_utility_1_1_iterator_traits_3_01_it_3_01_args_8_8_8_01_4_00_01_t_00_01_category_01_4.php#a80c6f9a2479727528c4fd0e2c63bd87b">Iterator</a>&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_iterator_traits_3_01_it_3_01_args_8_8_8_01_4_00_01_t_00_01_category_01_4.php#a29de60e24b4102ea12d083ef827d6a35">operator--</a> (int)</td></tr>
<tr class="separator:a29de60e24b4102ea12d083ef827d6a35"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a24c42e69ece105ea175b32a6a1ddc42b"><td class="memTemplParams" colspan="2">template&lt;class K  = Category, typename  = UseIfRandomAccessIterator&lt;K&gt;&gt; </td></tr>
<tr class="memitem:a24c42e69ece105ea175b32a6a1ddc42b"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_utility_1_1_iterator_traits_3_01_it_3_01_args_8_8_8_01_4_00_01_t_00_01_category_01_4.php#a80c6f9a2479727528c4fd0e2c63bd87b">Iterator</a> &amp;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_iterator_traits_3_01_it_3_01_args_8_8_8_01_4_00_01_t_00_01_category_01_4.php#a24c42e69ece105ea175b32a6a1ddc42b">operator+=</a> (<a class="el" href="class_n_r_e_1_1_utility_1_1_iterator_traits_3_01_it_3_01_args_8_8_8_01_4_00_01_t_00_01_category_01_4.php#a9eb6cb5f8b139377cb59f390cdd19204">DifferenceType</a> k)</td></tr>
<tr class="separator:a24c42e69ece105ea175b32a6a1ddc42b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a29c65157a7f06d1434dd509571df4db5"><td class="memTemplParams" colspan="2">template&lt;class K  = Category, typename  = UseIfRandomAccessIterator&lt;K&gt;&gt; </td></tr>
<tr class="memitem:a29c65157a7f06d1434dd509571df4db5"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_utility_1_1_iterator_traits_3_01_it_3_01_args_8_8_8_01_4_00_01_t_00_01_category_01_4.php#a80c6f9a2479727528c4fd0e2c63bd87b">Iterator</a> &amp;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_iterator_traits_3_01_it_3_01_args_8_8_8_01_4_00_01_t_00_01_category_01_4.php#a29c65157a7f06d1434dd509571df4db5">operator-=</a> (<a class="el" href="class_n_r_e_1_1_utility_1_1_iterator_traits_3_01_it_3_01_args_8_8_8_01_4_00_01_t_00_01_category_01_4.php#a9eb6cb5f8b139377cb59f390cdd19204">DifferenceType</a> k)</td></tr>
<tr class="separator:a29c65157a7f06d1434dd509571df4db5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a76ab1d155709da6fc5899a04e21112f6"><td class="memTemplParams" colspan="2">template&lt;class K  = Category, typename  = UseIfRandomAccessIterator&lt;K&gt;&gt; </td></tr>
<tr class="memitem:a76ab1d155709da6fc5899a04e21112f6"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_utility_1_1_iterator_traits_3_01_it_3_01_args_8_8_8_01_4_00_01_t_00_01_category_01_4.php#a80c6f9a2479727528c4fd0e2c63bd87b">Iterator</a>&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_iterator_traits_3_01_it_3_01_args_8_8_8_01_4_00_01_t_00_01_category_01_4.php#a76ab1d155709da6fc5899a04e21112f6">operator+</a> (<a class="el" href="class_n_r_e_1_1_utility_1_1_iterator_traits_3_01_it_3_01_args_8_8_8_01_4_00_01_t_00_01_category_01_4.php#a9eb6cb5f8b139377cb59f390cdd19204">DifferenceType</a> k) const </td></tr>
<tr class="separator:a76ab1d155709da6fc5899a04e21112f6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a67374d67073569d90fa8ab19219df8af"><td class="memTemplParams" colspan="2">template&lt;class K  = Category, typename  = UseIfRandomAccessIterator&lt;K&gt;&gt; </td></tr>
<tr class="memitem:a67374d67073569d90fa8ab19219df8af"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_utility_1_1_iterator_traits_3_01_it_3_01_args_8_8_8_01_4_00_01_t_00_01_category_01_4.php#a80c6f9a2479727528c4fd0e2c63bd87b">Iterator</a>&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_iterator_traits_3_01_it_3_01_args_8_8_8_01_4_00_01_t_00_01_category_01_4.php#a67374d67073569d90fa8ab19219df8af">operator-</a> (<a class="el" href="class_n_r_e_1_1_utility_1_1_iterator_traits_3_01_it_3_01_args_8_8_8_01_4_00_01_t_00_01_category_01_4.php#a9eb6cb5f8b139377cb59f390cdd19204">DifferenceType</a> k) const </td></tr>
<tr class="separator:a67374d67073569d90fa8ab19219df8af"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9089b79f999e51b2817f994e59525050"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_iterator_traits_3_01_it_3_01_args_8_8_8_01_4_00_01_t_00_01_category_01_4.php#a9089b79f999e51b2817f994e59525050">operator==</a> (<a class="el" href="class_n_r_e_1_1_utility_1_1_iterator_traits_3_01_it_3_01_args_8_8_8_01_4_00_01_t_00_01_category_01_4.php#a80c6f9a2479727528c4fd0e2c63bd87b">Iterator</a> const &amp;it) const </td></tr>
<tr class="separator:a9089b79f999e51b2817f994e59525050"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5f894f371f4134f6d1f0f1c241fe6e64"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_iterator_traits_3_01_it_3_01_args_8_8_8_01_4_00_01_t_00_01_category_01_4.php#a5f894f371f4134f6d1f0f1c241fe6e64">operator!=</a> (<a class="el" href="class_n_r_e_1_1_utility_1_1_iterator_traits_3_01_it_3_01_args_8_8_8_01_4_00_01_t_00_01_category_01_4.php#a80c6f9a2479727528c4fd0e2c63bd87b">Iterator</a> const &amp;it) const </td></tr>
<tr class="separator:a5f894f371f4134f6d1f0f1c241fe6e64"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af62b854ca7fe9ca6f4e799997f0f4b24"><td class="memTemplParams" colspan="2">template&lt;class K  = Category, typename  = UseIfRandomAccessIterator&lt;K&gt;&gt; </td></tr>
<tr class="memitem:af62b854ca7fe9ca6f4e799997f0f4b24"><td class="memTemplItemLeft" align="right" valign="top">bool&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_iterator_traits_3_01_it_3_01_args_8_8_8_01_4_00_01_t_00_01_category_01_4.php#af62b854ca7fe9ca6f4e799997f0f4b24">operator&lt;</a> (<a class="el" href="class_n_r_e_1_1_utility_1_1_iterator_traits_3_01_it_3_01_args_8_8_8_01_4_00_01_t_00_01_category_01_4.php#a80c6f9a2479727528c4fd0e2c63bd87b">Iterator</a> const &amp;it) const </td></tr>
<tr class="separator:af62b854ca7fe9ca6f4e799997f0f4b24"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9f133f1ec0eaffe1681fb0f49a925813"><td class="memTemplParams" colspan="2">template&lt;class K  = Category, typename  = UseIfRandomAccessIterator&lt;K&gt;&gt; </td></tr>
<tr class="memitem:a9f133f1ec0eaffe1681fb0f49a925813"><td class="memTemplItemLeft" align="right" valign="top">bool&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_iterator_traits_3_01_it_3_01_args_8_8_8_01_4_00_01_t_00_01_category_01_4.php#a9f133f1ec0eaffe1681fb0f49a925813">operator&gt;</a> (<a class="el" href="class_n_r_e_1_1_utility_1_1_iterator_traits_3_01_it_3_01_args_8_8_8_01_4_00_01_t_00_01_category_01_4.php#a80c6f9a2479727528c4fd0e2c63bd87b">Iterator</a> const &amp;it) const </td></tr>
<tr class="separator:a9f133f1ec0eaffe1681fb0f49a925813"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af966202da0631b190fe8f7b57756aeb1"><td class="memTemplParams" colspan="2">template&lt;class K  = Category, typename  = UseIfRandomAccessIterator&lt;K&gt;&gt; </td></tr>
<tr class="memitem:af966202da0631b190fe8f7b57756aeb1"><td class="memTemplItemLeft" align="right" valign="top">bool&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_iterator_traits_3_01_it_3_01_args_8_8_8_01_4_00_01_t_00_01_category_01_4.php#af966202da0631b190fe8f7b57756aeb1">operator&lt;=</a> (<a class="el" href="class_n_r_e_1_1_utility_1_1_iterator_traits_3_01_it_3_01_args_8_8_8_01_4_00_01_t_00_01_category_01_4.php#a80c6f9a2479727528c4fd0e2c63bd87b">Iterator</a> const &amp;it) const </td></tr>
<tr class="separator:af966202da0631b190fe8f7b57756aeb1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac65e2f9bd43e6a65974315e1e24832ca"><td class="memTemplParams" colspan="2">template&lt;class K  = Category, typename  = UseIfRandomAccessIterator&lt;K&gt;&gt; </td></tr>
<tr class="memitem:ac65e2f9bd43e6a65974315e1e24832ca"><td class="memTemplItemLeft" align="right" valign="top">bool&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_iterator_traits_3_01_it_3_01_args_8_8_8_01_4_00_01_t_00_01_category_01_4.php#ac65e2f9bd43e6a65974315e1e24832ca">operator&gt;=</a> (<a class="el" href="class_n_r_e_1_1_utility_1_1_iterator_traits_3_01_it_3_01_args_8_8_8_01_4_00_01_t_00_01_category_01_4.php#a80c6f9a2479727528c4fd0e2c63bd87b">Iterator</a> const &amp;it) const </td></tr>
<tr class="separator:ac65e2f9bd43e6a65974315e1e24832ca"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Member Typedef Documentation</h2>
<a class="anchor" id="ae14ab9a6fd5ca93051b2cb004a86016e"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;template&lt; class... &gt; class It, class T , class Category , class... Args&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="class_n_r_e_1_1_utility_1_1_iterator_traits.php">NRE::Utility::IteratorTraits</a>&lt; It&lt; Args... &gt;, T, Category &gt;::<a class="el" href="class_n_r_e_1_1_utility_1_1_iterator_traits_3_01_it_3_01_args_8_8_8_01_4_00_01_t_00_01_category_01_4.php#ae14ab9a6fd5ca93051b2cb004a86016e">difference_type</a> =  <a class="el" href="class_n_r_e_1_1_utility_1_1_iterator_traits_3_01_it_3_01_args_8_8_8_01_4_00_01_t_00_01_category_01_4.php#a9eb6cb5f8b139377cb59f390cdd19204">DifferenceType</a></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>STL compatibility </p>

</div>
</div>
<a class="anchor" id="a9eb6cb5f8b139377cb59f390cdd19204"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;template&lt; class... &gt; class It, class T , class Category , class... Args&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="class_n_r_e_1_1_utility_1_1_iterator_traits.php">NRE::Utility::IteratorTraits</a>&lt; It&lt; Args... &gt;, T, Category &gt;::<a class="el" href="class_n_r_e_1_1_utility_1_1_iterator_traits_3_01_it_3_01_args_8_8_8_01_4_00_01_t_00_01_category_01_4.php#a9eb6cb5f8b139377cb59f390cdd19204">DifferenceType</a> =  std::ptrdiff_t</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>The iterator difference type </p>

</div>
</div>
<a class="anchor" id="a80c6f9a2479727528c4fd0e2c63bd87b"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;template&lt; class... &gt; class It, class T , class Category , class... Args&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="class_n_r_e_1_1_utility_1_1_iterator_traits.php">NRE::Utility::IteratorTraits</a>&lt; It&lt; Args... &gt;, T, Category &gt;::<a class="el" href="class_n_r_e_1_1_utility_1_1_iterator_traits_3_01_it_3_01_args_8_8_8_01_4_00_01_t_00_01_category_01_4.php#a80c6f9a2479727528c4fd0e2c63bd87b">Iterator</a> =  It&lt;Args...&gt;</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>You must at least be an input iterator or output iterator The iterator object </p>

</div>
</div>
<a class="anchor" id="a616c7cbcb2833d40d3e3961bdd18919e"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;template&lt; class... &gt; class It, class T , class Category , class... Args&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="class_n_r_e_1_1_utility_1_1_iterator_traits.php">NRE::Utility::IteratorTraits</a>&lt; It&lt; Args... &gt;, T, Category &gt;::<a class="el" href="class_n_r_e_1_1_utility_1_1_iterator_traits_3_01_it_3_01_args_8_8_8_01_4_00_01_t_00_01_category_01_4.php#a616c7cbcb2833d40d3e3961bdd18919e">iterator_category</a> =  std::conditional_t&lt;std::is_pointer_v&lt;T&gt;, std::random_access_iterator_tag, typename Category::iterator_category&gt;</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>STL compatibility </p>

</div>
</div>
<a class="anchor" id="a4dcab47463b6dc136ec7ac6fb19e6c79"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;template&lt; class... &gt; class It, class T , class Category , class... Args&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="class_n_r_e_1_1_utility_1_1_iterator_traits.php">NRE::Utility::IteratorTraits</a>&lt; It&lt; Args... &gt;, T, Category &gt;::<a class="el" href="class_n_r_e_1_1_utility_1_1_iterator_traits_3_01_it_3_01_args_8_8_8_01_4_00_01_t_00_01_category_01_4.php#a4dcab47463b6dc136ec7ac6fb19e6c79">Pointer</a> =  std::conditional_t&lt;IsOutputIteratorV&lt;Category&gt;, <a class="el" href="class_n_r_e_1_1_utility_1_1_iterator_traits_3_01_it_3_01_args_8_8_8_01_4_00_01_t_00_01_category_01_4.php#a631b61a5a6c5428c030e2ee53680672c">ValueType</a>*, const <a class="el" href="class_n_r_e_1_1_utility_1_1_iterator_traits_3_01_it_3_01_args_8_8_8_01_4_00_01_t_00_01_category_01_4.php#a631b61a5a6c5428c030e2ee53680672c">ValueType</a>*&gt;</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>The pointer on iterated object </p>

</div>
</div>
<a class="anchor" id="ac5fed734bb18a765a42300e9df123ada"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;template&lt; class... &gt; class It, class T , class Category , class... Args&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="class_n_r_e_1_1_utility_1_1_iterator_traits.php">NRE::Utility::IteratorTraits</a>&lt; It&lt; Args... &gt;, T, Category &gt;::<a class="el" href="class_n_r_e_1_1_utility_1_1_iterator_traits_3_01_it_3_01_args_8_8_8_01_4_00_01_t_00_01_category_01_4.php#ac5fed734bb18a765a42300e9df123ada">pointer</a> =  <a class="el" href="class_n_r_e_1_1_utility_1_1_iterator_traits_3_01_it_3_01_args_8_8_8_01_4_00_01_t_00_01_category_01_4.php#a4dcab47463b6dc136ec7ac6fb19e6c79">Pointer</a></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>STL compatibility </p>

</div>
</div>
<a class="anchor" id="a5f751860a94ddc303784f5d9f2e81569"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;template&lt; class... &gt; class It, class T , class Category , class... Args&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="class_n_r_e_1_1_utility_1_1_iterator_traits.php">NRE::Utility::IteratorTraits</a>&lt; It&lt; Args... &gt;, T, Category &gt;::<a class="el" href="class_n_r_e_1_1_utility_1_1_iterator_traits_3_01_it_3_01_args_8_8_8_01_4_00_01_t_00_01_category_01_4.php#a5f751860a94ddc303784f5d9f2e81569">Reference</a> =  std::conditional_t&lt;IsOutputIteratorV&lt;Category&gt;, <a class="el" href="class_n_r_e_1_1_utility_1_1_iterator_traits_3_01_it_3_01_args_8_8_8_01_4_00_01_t_00_01_category_01_4.php#a631b61a5a6c5428c030e2ee53680672c">ValueType</a>&amp;, <a class="el" href="class_n_r_e_1_1_utility_1_1_iterator_traits_3_01_it_3_01_args_8_8_8_01_4_00_01_t_00_01_category_01_4.php#a631b61a5a6c5428c030e2ee53680672c">ValueType</a> const&amp;&gt;</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>The reference on iterated object </p>

</div>
</div>
<a class="anchor" id="a808f9cd48084bc1603a85ad48a7a7236"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;template&lt; class... &gt; class It, class T , class Category , class... Args&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="class_n_r_e_1_1_utility_1_1_iterator_traits.php">NRE::Utility::IteratorTraits</a>&lt; It&lt; Args... &gt;, T, Category &gt;::<a class="el" href="class_n_r_e_1_1_utility_1_1_iterator_traits_3_01_it_3_01_args_8_8_8_01_4_00_01_t_00_01_category_01_4.php#a808f9cd48084bc1603a85ad48a7a7236">reference</a> =  <a class="el" href="class_n_r_e_1_1_utility_1_1_iterator_traits_3_01_it_3_01_args_8_8_8_01_4_00_01_t_00_01_category_01_4.php#a5f751860a94ddc303784f5d9f2e81569">Reference</a></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>STL compatibility </p>

</div>
</div>
<a class="anchor" id="a514afaebd5ebefb537558c76b2e9a4de"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;template&lt; class... &gt; class It, class T , class Category , class... Args&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="class_n_r_e_1_1_utility_1_1_iterator_traits.php">NRE::Utility::IteratorTraits</a>&lt; It&lt; Args... &gt;, T, Category &gt;::<a class="el" href="class_n_r_e_1_1_utility_1_1_iterator_traits_3_01_it_3_01_args_8_8_8_01_4_00_01_t_00_01_category_01_4.php#a514afaebd5ebefb537558c76b2e9a4de">value_type</a> =  <a class="el" href="class_n_r_e_1_1_utility_1_1_iterator_traits_3_01_it_3_01_args_8_8_8_01_4_00_01_t_00_01_category_01_4.php#a631b61a5a6c5428c030e2ee53680672c">ValueType</a></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>STL compatibility </p>

</div>
</div>
<a class="anchor" id="a631b61a5a6c5428c030e2ee53680672c"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;template&lt; class... &gt; class It, class T , class Category , class... Args&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="class_n_r_e_1_1_utility_1_1_iterator_traits.php">NRE::Utility::IteratorTraits</a>&lt; It&lt; Args... &gt;, T, Category &gt;::<a class="el" href="class_n_r_e_1_1_utility_1_1_iterator_traits_3_01_it_3_01_args_8_8_8_01_4_00_01_t_00_01_category_01_4.php#a631b61a5a6c5428c030e2ee53680672c">ValueType</a> =  T</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>The iterated object </p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a class="anchor" id="a6c4bdfbe2f20d2fa4b551fc1429a3616"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;template&lt; class... &gt; class It, class T , class Category , class... Args&gt; </div>
<div class="memtemplate">
template&lt;class K  = Category, typename  = UseIfRandomAccessIterator&lt;K&gt;&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="class_n_r_e_1_1_utility_1_1_iterator_traits.php">NRE::Utility::IteratorTraits</a>&lt; It&lt; Args... &gt;, T, Category &gt;::advance </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_iterator_traits_3_01_it_3_01_args_8_8_8_01_4_00_01_t_00_01_category_01_4.php#a9eb6cb5f8b139377cb59f390cdd19204">DifferenceType</a>&#160;</td>
          <td class="paramname"><em>n</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Move the iterator by a given number (can be negative) </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">n</td><td>the distance to move </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="acb1d748e3e4f6f84227cc2f79bdc7bcd"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;template&lt; class... &gt; class It, class T , class Category , class... Args&gt; </div>
<div class="memtemplate">
template&lt;class K  = Category, typename  = UseIfBidirectionalIterator&lt;K&gt;&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="class_n_r_e_1_1_utility_1_1_iterator_traits.php">NRE::Utility::IteratorTraits</a>&lt; It&lt; Args... &gt;, T, Category &gt;::decrement </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Decrement the iterator position by one </p>

</div>
</div>
<a class="anchor" id="a2e078d50b1fe97a291edf3243da54665"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;template&lt; class... &gt; class It, class T , class Category , class... Args&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_iterator_traits_3_01_it_3_01_args_8_8_8_01_4_00_01_t_00_01_category_01_4.php#a5f751860a94ddc303784f5d9f2e81569">Reference</a> <a class="el" href="class_n_r_e_1_1_utility_1_1_iterator_traits.php">NRE::Utility::IteratorTraits</a>&lt; It&lt; Args... &gt;, T, Category &gt;::dereference </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>a reference on the iterated data </dd></dl>

</div>
</div>
<a class="anchor" id="a04efe14b0c268a99b3275d4eab6b9688"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;template&lt; class... &gt; class It, class T , class Category , class... Args&gt; </div>
<div class="memtemplate">
template&lt;class K  = Category, typename  = UseIfRandomAccessIterator&lt;K&gt;&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_iterator_traits_3_01_it_3_01_args_8_8_8_01_4_00_01_t_00_01_category_01_4.php#a9eb6cb5f8b139377cb59f390cdd19204">DifferenceType</a> <a class="el" href="class_n_r_e_1_1_utility_1_1_iterator_traits.php">NRE::Utility::IteratorTraits</a>&lt; It&lt; Args... &gt;, T, Category &gt;::distanceTo </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_iterator_traits_3_01_it_3_01_args_8_8_8_01_4_00_01_t_00_01_category_01_4.php#a80c6f9a2479727528c4fd0e2c63bd87b">Iterator</a> const &amp;&#160;</td>
          <td class="paramname"><em>it</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Tell the distance between the given iterator </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">it</td><td>the other iterator </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the distance between it and this </dd></dl>

</div>
</div>
<a class="anchor" id="afcbccad2752950750f002f3ab8666d6c"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;template&lt; class... &gt; class It, class T , class Category , class... Args&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool <a class="el" href="class_n_r_e_1_1_utility_1_1_iterator_traits.php">NRE::Utility::IteratorTraits</a>&lt; It&lt; Args... &gt;, T, Category &gt;::equal </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_iterator_traits_3_01_it_3_01_args_8_8_8_01_4_00_01_t_00_01_category_01_4.php#a80c6f9a2479727528c4fd0e2c63bd87b">Iterator</a> const &amp;&#160;</td>
          <td class="paramname"><em>it</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Test if the given iterator point to the same position </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">it</td><td>the other iterator </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the test's result </dd></dl>

</div>
</div>
<a class="anchor" id="a77704782bef390fd71dd185643d63de6"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;template&lt; class... &gt; class It, class T , class Category , class... Args&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="class_n_r_e_1_1_utility_1_1_iterator_traits.php">NRE::Utility::IteratorTraits</a>&lt; It&lt; Args... &gt;, T, Category &gt;::increment </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Increment the iterator position by one </p>

</div>
</div>
<a class="anchor" id="a5f894f371f4134f6d1f0f1c241fe6e64"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;template&lt; class... &gt; class It, class T , class Category , class... Args&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool <a class="el" href="class_n_r_e_1_1_utility_1_1_iterator_traits.php">NRE::Utility::IteratorTraits</a>&lt; It&lt; Args... &gt;, T, Category &gt;::operator!= </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_iterator_traits_3_01_it_3_01_args_8_8_8_01_4_00_01_t_00_01_category_01_4.php#a80c6f9a2479727528c4fd0e2c63bd87b">Iterator</a> const &amp;&#160;</td>
          <td class="paramname"><em>it</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Inequality test between this and it </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">it</td><td>the other iterator </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the test result </dd></dl>

</div>
</div>
<a class="anchor" id="ac62c9e772174e3841532d682e4bbc568"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;template&lt; class... &gt; class It, class T , class Category , class... Args&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_iterator_traits_3_01_it_3_01_args_8_8_8_01_4_00_01_t_00_01_category_01_4.php#a5f751860a94ddc303784f5d9f2e81569">Reference</a> <a class="el" href="class_n_r_e_1_1_utility_1_1_iterator_traits.php">NRE::Utility::IteratorTraits</a>&lt; It&lt; Args... &gt;, T, Category &gt;::operator* </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Dereference operator, allow access to the data </p><dl class="section return"><dt>Returns</dt><dd>the iterator data </dd></dl>

</div>
</div>
<a class="anchor" id="a76ab1d155709da6fc5899a04e21112f6"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;template&lt; class... &gt; class It, class T , class Category , class... Args&gt; </div>
<div class="memtemplate">
template&lt;class K  = Category, typename  = UseIfRandomAccessIterator&lt;K&gt;&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_iterator_traits_3_01_it_3_01_args_8_8_8_01_4_00_01_t_00_01_category_01_4.php#a80c6f9a2479727528c4fd0e2c63bd87b">Iterator</a> <a class="el" href="class_n_r_e_1_1_utility_1_1_iterator_traits.php">NRE::Utility::IteratorTraits</a>&lt; It&lt; Args... &gt;, T, Category &gt;::operator+ </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_iterator_traits_3_01_it_3_01_args_8_8_8_01_4_00_01_t_00_01_category_01_4.php#a9eb6cb5f8b139377cb59f390cdd19204">DifferenceType</a>&#160;</td>
          <td class="paramname"><em>k</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Create an iterator resulting in the move of this by k </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">k</td><td>the distance to add </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the new iterator </dd></dl>

</div>
</div>
<a class="anchor" id="a8354684924f0f2ac6ead214a737880af"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;template&lt; class... &gt; class It, class T , class Category , class... Args&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_iterator_traits_3_01_it_3_01_args_8_8_8_01_4_00_01_t_00_01_category_01_4.php#a80c6f9a2479727528c4fd0e2c63bd87b">Iterator</a>&amp; <a class="el" href="class_n_r_e_1_1_utility_1_1_iterator_traits.php">NRE::Utility::IteratorTraits</a>&lt; It&lt; Args... &gt;, T, Category &gt;::operator++ </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Pre increment operator, access the next element </p><dl class="section return"><dt>Returns</dt><dd>the reference of himself </dd></dl>

</div>
</div>
<a class="anchor" id="a610cb00e9d3ac424530ee0e0071562af"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;template&lt; class... &gt; class It, class T , class Category , class... Args&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_iterator_traits_3_01_it_3_01_args_8_8_8_01_4_00_01_t_00_01_category_01_4.php#a80c6f9a2479727528c4fd0e2c63bd87b">Iterator</a> <a class="el" href="class_n_r_e_1_1_utility_1_1_iterator_traits.php">NRE::Utility::IteratorTraits</a>&lt; It&lt; Args... &gt;, T, Category &gt;::operator++ </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Post increment operator, access the next element </p><dl class="section return"><dt>Returns</dt><dd>the iterator on the current element </dd></dl>

</div>
</div>
<a class="anchor" id="a24c42e69ece105ea175b32a6a1ddc42b"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;template&lt; class... &gt; class It, class T , class Category , class... Args&gt; </div>
<div class="memtemplate">
template&lt;class K  = Category, typename  = UseIfRandomAccessIterator&lt;K&gt;&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_iterator_traits_3_01_it_3_01_args_8_8_8_01_4_00_01_t_00_01_category_01_4.php#a80c6f9a2479727528c4fd0e2c63bd87b">Iterator</a>&amp; <a class="el" href="class_n_r_e_1_1_utility_1_1_iterator_traits.php">NRE::Utility::IteratorTraits</a>&lt; It&lt; Args... &gt;, T, Category &gt;::operator+= </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_iterator_traits_3_01_it_3_01_args_8_8_8_01_4_00_01_t_00_01_category_01_4.php#a9eb6cb5f8b139377cb59f390cdd19204">DifferenceType</a>&#160;</td>
          <td class="paramname"><em>k</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Move the iterator by k </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">k</td><td>the distance to add </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the reference of himself </dd></dl>

</div>
</div>
<a class="anchor" id="a67374d67073569d90fa8ab19219df8af"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;template&lt; class... &gt; class It, class T , class Category , class... Args&gt; </div>
<div class="memtemplate">
template&lt;class K  = Category, typename  = UseIfRandomAccessIterator&lt;K&gt;&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_iterator_traits_3_01_it_3_01_args_8_8_8_01_4_00_01_t_00_01_category_01_4.php#a80c6f9a2479727528c4fd0e2c63bd87b">Iterator</a> <a class="el" href="class_n_r_e_1_1_utility_1_1_iterator_traits.php">NRE::Utility::IteratorTraits</a>&lt; It&lt; Args... &gt;, T, Category &gt;::operator- </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_iterator_traits_3_01_it_3_01_args_8_8_8_01_4_00_01_t_00_01_category_01_4.php#a9eb6cb5f8b139377cb59f390cdd19204">DifferenceType</a>&#160;</td>
          <td class="paramname"><em>k</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Create an iterator resulting in the move of this by k </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">k</td><td>the distance to subtract </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the new iterator </dd></dl>

</div>
</div>
<a class="anchor" id="acdce086fbf55172cf9d5531c391f27d4"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;template&lt; class... &gt; class It, class T , class Category , class... Args&gt; </div>
<div class="memtemplate">
template&lt;class K  = Category, typename  = UseIfBidirectionalIterator&lt;K&gt;&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_iterator_traits_3_01_it_3_01_args_8_8_8_01_4_00_01_t_00_01_category_01_4.php#a80c6f9a2479727528c4fd0e2c63bd87b">Iterator</a>&amp; <a class="el" href="class_n_r_e_1_1_utility_1_1_iterator_traits.php">NRE::Utility::IteratorTraits</a>&lt; It&lt; Args... &gt;, T, Category &gt;::operator-- </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Pre decrement operator, access the previous element </p><dl class="section return"><dt>Returns</dt><dd>the reference of himself </dd></dl>

</div>
</div>
<a class="anchor" id="a29de60e24b4102ea12d083ef827d6a35"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;template&lt; class... &gt; class It, class T , class Category , class... Args&gt; </div>
<div class="memtemplate">
template&lt;class K  = Category, typename  = UseIfBidirectionalIterator&lt;K&gt;&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_iterator_traits_3_01_it_3_01_args_8_8_8_01_4_00_01_t_00_01_category_01_4.php#a80c6f9a2479727528c4fd0e2c63bd87b">Iterator</a> <a class="el" href="class_n_r_e_1_1_utility_1_1_iterator_traits.php">NRE::Utility::IteratorTraits</a>&lt; It&lt; Args... &gt;, T, Category &gt;::operator-- </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Post decrement operator, access the previous element </p><dl class="section return"><dt>Returns</dt><dd>the iterator on the current element </dd></dl>

</div>
</div>
<a class="anchor" id="a29c65157a7f06d1434dd509571df4db5"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;template&lt; class... &gt; class It, class T , class Category , class... Args&gt; </div>
<div class="memtemplate">
template&lt;class K  = Category, typename  = UseIfRandomAccessIterator&lt;K&gt;&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_iterator_traits_3_01_it_3_01_args_8_8_8_01_4_00_01_t_00_01_category_01_4.php#a80c6f9a2479727528c4fd0e2c63bd87b">Iterator</a>&amp; <a class="el" href="class_n_r_e_1_1_utility_1_1_iterator_traits.php">NRE::Utility::IteratorTraits</a>&lt; It&lt; Args... &gt;, T, Category &gt;::operator-= </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_iterator_traits_3_01_it_3_01_args_8_8_8_01_4_00_01_t_00_01_category_01_4.php#a9eb6cb5f8b139377cb59f390cdd19204">DifferenceType</a>&#160;</td>
          <td class="paramname"><em>k</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Move the iterator by k </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">k</td><td>the distance to subtract </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the reference of himself </dd></dl>

</div>
</div>
<a class="anchor" id="a43b37c613bfbd57853d4825b15fcdd6c"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;template&lt; class... &gt; class It, class T , class Category , class... Args&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_iterator_traits_3_01_it_3_01_args_8_8_8_01_4_00_01_t_00_01_category_01_4.php#a4dcab47463b6dc136ec7ac6fb19e6c79">Pointer</a> <a class="el" href="class_n_r_e_1_1_utility_1_1_iterator_traits.php">NRE::Utility::IteratorTraits</a>&lt; It&lt; Args... &gt;, T, Category &gt;::operator-&gt; </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Arrow dereference operator, allow access to the data </p><dl class="section return"><dt>Returns</dt><dd>the iterator data pointer </dd></dl>

</div>
</div>
<a class="anchor" id="af62b854ca7fe9ca6f4e799997f0f4b24"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;template&lt; class... &gt; class It, class T , class Category , class... Args&gt; </div>
<div class="memtemplate">
template&lt;class K  = Category, typename  = UseIfRandomAccessIterator&lt;K&gt;&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool <a class="el" href="class_n_r_e_1_1_utility_1_1_iterator_traits.php">NRE::Utility::IteratorTraits</a>&lt; It&lt; Args... &gt;, T, Category &gt;::operator&lt; </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_iterator_traits_3_01_it_3_01_args_8_8_8_01_4_00_01_t_00_01_category_01_4.php#a80c6f9a2479727528c4fd0e2c63bd87b">Iterator</a> const &amp;&#160;</td>
          <td class="paramname"><em>it</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Inferior test between this and it </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">it</td><td>the vector to test with this </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the test's result </dd></dl>

</div>
</div>
<a class="anchor" id="af966202da0631b190fe8f7b57756aeb1"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;template&lt; class... &gt; class It, class T , class Category , class... Args&gt; </div>
<div class="memtemplate">
template&lt;class K  = Category, typename  = UseIfRandomAccessIterator&lt;K&gt;&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool <a class="el" href="class_n_r_e_1_1_utility_1_1_iterator_traits.php">NRE::Utility::IteratorTraits</a>&lt; It&lt; Args... &gt;, T, Category &gt;::operator&lt;= </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_iterator_traits_3_01_it_3_01_args_8_8_8_01_4_00_01_t_00_01_category_01_4.php#a80c6f9a2479727528c4fd0e2c63bd87b">Iterator</a> const &amp;&#160;</td>
          <td class="paramname"><em>it</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Inferior or Equal test between this and it </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">it</td><td>the vector to test with this </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the test's result </dd></dl>

</div>
</div>
<a class="anchor" id="a9089b79f999e51b2817f994e59525050"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;template&lt; class... &gt; class It, class T , class Category , class... Args&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool <a class="el" href="class_n_r_e_1_1_utility_1_1_iterator_traits.php">NRE::Utility::IteratorTraits</a>&lt; It&lt; Args... &gt;, T, Category &gt;::operator== </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_iterator_traits_3_01_it_3_01_args_8_8_8_01_4_00_01_t_00_01_category_01_4.php#a80c6f9a2479727528c4fd0e2c63bd87b">Iterator</a> const &amp;&#160;</td>
          <td class="paramname"><em>it</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Equality test between this and it </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">it</td><td>the other iterator </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the test result </dd></dl>

</div>
</div>
<a class="anchor" id="a9f133f1ec0eaffe1681fb0f49a925813"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;template&lt; class... &gt; class It, class T , class Category , class... Args&gt; </div>
<div class="memtemplate">
template&lt;class K  = Category, typename  = UseIfRandomAccessIterator&lt;K&gt;&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool <a class="el" href="class_n_r_e_1_1_utility_1_1_iterator_traits.php">NRE::Utility::IteratorTraits</a>&lt; It&lt; Args... &gt;, T, Category &gt;::operator&gt; </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_iterator_traits_3_01_it_3_01_args_8_8_8_01_4_00_01_t_00_01_category_01_4.php#a80c6f9a2479727528c4fd0e2c63bd87b">Iterator</a> const &amp;&#160;</td>
          <td class="paramname"><em>it</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Superior test between this and it </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">it</td><td>the vector to test with this </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the test's result </dd></dl>

</div>
</div>
<a class="anchor" id="ac65e2f9bd43e6a65974315e1e24832ca"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;template&lt; class... &gt; class It, class T , class Category , class... Args&gt; </div>
<div class="memtemplate">
template&lt;class K  = Category, typename  = UseIfRandomAccessIterator&lt;K&gt;&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool <a class="el" href="class_n_r_e_1_1_utility_1_1_iterator_traits.php">NRE::Utility::IteratorTraits</a>&lt; It&lt; Args... &gt;, T, Category &gt;::operator&gt;= </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_iterator_traits_3_01_it_3_01_args_8_8_8_01_4_00_01_t_00_01_category_01_4.php#a80c6f9a2479727528c4fd0e2c63bd87b">Iterator</a> const &amp;&#160;</td>
          <td class="paramname"><em>it</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Superior or Equal test between this and it </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">it</td><td>the vector to test with this </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the test's result </dd></dl>

</div>
</div>
<a class="anchor" id="a1e4fd3771e7955bb221bbd5c853cfe76"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;template&lt; class... &gt; class It, class T , class Category , class... Args&gt; </div>
<div class="memtemplate">
template&lt;class K  = Category, typename  = UseIfRandomAccessIterator&lt;K&gt;&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_iterator_traits_3_01_it_3_01_args_8_8_8_01_4_00_01_t_00_01_category_01_4.php#a5f751860a94ddc303784f5d9f2e81569">Reference</a> <a class="el" href="class_n_r_e_1_1_utility_1_1_iterator_traits.php">NRE::Utility::IteratorTraits</a>&lt; It&lt; Args... &gt;, T, Category &gt;::operator[] </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_iterator_traits_3_01_it_3_01_args_8_8_8_01_4_00_01_t_00_01_category_01_4.php#a9eb6cb5f8b139377cb59f390cdd19204">DifferenceType</a>&#160;</td>
          <td class="paramname"><em>n</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Return a reference on an iterated element </p><dl class="section warning"><dt>Warning</dt><dd>No range check performed </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">n</td><td>the number of move from the current position </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the new element reference </dd></dl>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>/mnt/c/Users/abell/Documents/GitHub/NRE-Utility/src/Utility/Interfaces/Iterator/<a class="el" href="_n_r_e___iterator_traits_8hpp_source.php">NRE_IteratorTraits.hpp</a></li>
</ul>
</div><!-- contents -->
<!-- HTML footer for doxygen 1.8.8-->
<!-- start footer part -->
</div>
</div>
</div>
</div>
</body>
</html>
