<!-- HTML header for doxygen 1.8.8-->
<!DOCTYPE html>
<html>
    <head>
        <meta http-equiv="X-UA-Compatible" content="IE=edge">
        <!-- For Mobile Devices -->
        <meta name="viewport" content="width=device-width, initial-scale=1">
        <meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
        <meta name="generator" content="Doxygen 1.8.11"/>
        <script type="text/javascript" src="../../js/jquery-2.1.1.min.js"></script>
        <title>NRE-Utility: /mnt/c/Users/abell/Documents/GitHub/NRE-Utility/src/Utility/Interfaces/Iterator/NRE_IteratorTraits.hpp File Reference</title>
        <!--<link href="tabs.css" rel="stylesheet" type="text/css"/>-->
        <script type="text/javascript" src="dynsections.js"></script>
        <link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
        <link href="doxygen.css" rel="stylesheet" type="text/css" />
        <link href="style.css" rel="stylesheet" type="text/css"/>
        <link href='https://fonts.googleapis.com/css?family=Roboto+Slab' rel='stylesheet' type='text/css'>
        <?php
            include '../../php/navigation.php';
            if (!isset($_COOKIE["theme"]) || $_COOKIE["theme"] == "dark") {
                echo '<link href="../../css/dark/bootstrap.css" rel="stylesheet">';
            } else {
                echo '<link href="../../css/light/bootstrap.css" rel="stylesheet">';
            }
        ?>
        <script src="../../js/bootstrap.min.js"></script>
        <script type="text/javascript" src="doxy-boot.js"></script>
    </head>
    <body>
        <div class="container-fluid">
            <header class="page-header">
                <a href="../../../index.php">
                    <img src="../../img/Logo.png" class="logo img-responsive"/>
                </a>
            </header>
            <?php addNavigationBarInl(false); ?>
            <div id="top" class="row"><!-- do not remove this div, it is closed by doxygen! -->
                <div class="col-lg-12">
                    <div class="panel panel-default">
                        <div class="panel-body">
<!-- end header part -->
<!-- Generated by Doxygen 1.8.11 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.php"><span>Main&#160;Page</span></a></li>
      <li><a href="namespaces.php"><span>Namespaces</span></a></li>
      <li><a href="annotated.php"><span>Classes</span></a></li>
      <li class="current"><a href="files.php"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.php"><span>File&#160;List</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.php">src</a></li><li class="navelem"><a class="el" href="dir_9761b53e3d9349800c0cb59b71c8cd3d.php">Utility</a></li><li class="navelem"><a class="el" href="dir_b7017f46de0d068332e4c2d3bf7ed59e.php">Interfaces</a></li><li class="navelem"><a class="el" href="dir_eff9e37745a4775c17fef8aaf21a7af6.php">Iterator</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#nested-classes">Classes</a> &#124;
<a href="#namespaces">Namespaces</a> &#124;
<a href="#typedef-members">Typedefs</a> &#124;
<a href="#func-members">Functions</a> &#124;
<a href="#var-members">Variables</a>  </div>
  <div class="headertitle">
<div class="title">NRE_IteratorTraits.hpp File Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>Declaration of <a class="el" href="namespace_utility.php" title="Utility&#39;s API. ">Utility</a>'s API's Interface : IteratorTraits.  
<a href="#details">More...</a></p>
<div class="textblock"><code>#include &quot;<a class="el" href="_n_r_e___static_interface_8hpp_source.php">../NRE_StaticInterface.hpp</a>&quot;</code><br />
</div>
<p><a href="_n_r_e___iterator_traits_8hpp_source.php">Go to the source code of this file.</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"></a>
Classes</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_n_r_e_1_1_utility_1_1_input_iterator.php">NRE::Utility::InputIterator</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Used in <a class="el" href="class_n_r_e_1_1_utility_1_1_iterator_traits.php" title="Describe an iterator object. ">IteratorTraits</a> to detect <a class="el" href="struct_n_r_e_1_1_utility_1_1_input_iterator.php" title="Used in IteratorTraits to detect InputIterator category. ">InputIterator</a> category.  <a href="struct_n_r_e_1_1_utility_1_1_input_iterator.php#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_n_r_e_1_1_utility_1_1_output_iterator.php">NRE::Utility::OutputIterator</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Used in <a class="el" href="class_n_r_e_1_1_utility_1_1_iterator_traits.php" title="Describe an iterator object. ">IteratorTraits</a> to detect <a class="el" href="struct_n_r_e_1_1_utility_1_1_output_iterator.php" title="Used in IteratorTraits to detect OutputIterator category. ">OutputIterator</a> category.  <a href="struct_n_r_e_1_1_utility_1_1_output_iterator.php#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_n_r_e_1_1_utility_1_1_forward_iterator.php">NRE::Utility::ForwardIterator</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Used in <a class="el" href="class_n_r_e_1_1_utility_1_1_iterator_traits.php" title="Describe an iterator object. ">IteratorTraits</a> to detect <a class="el" href="struct_n_r_e_1_1_utility_1_1_forward_iterator.php" title="Used in IteratorTraits to detect ForwardIterator category. ">ForwardIterator</a> category.  <a href="struct_n_r_e_1_1_utility_1_1_forward_iterator.php#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_n_r_e_1_1_utility_1_1_bidirectional_iterator.php">NRE::Utility::BidirectionalIterator</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Used in <a class="el" href="class_n_r_e_1_1_utility_1_1_iterator_traits.php" title="Describe an iterator object. ">IteratorTraits</a> to detect <a class="el" href="struct_n_r_e_1_1_utility_1_1_bidirectional_iterator.php" title="Used in IteratorTraits to detect BidirectionalIterator category. ">BidirectionalIterator</a> category.  <a href="struct_n_r_e_1_1_utility_1_1_bidirectional_iterator.php#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_n_r_e_1_1_utility_1_1_random_access_iterator.php">NRE::Utility::RandomAccessIterator</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Used in <a class="el" href="class_n_r_e_1_1_utility_1_1_iterator_traits.php" title="Describe an iterator object. ">IteratorTraits</a> to detect <a class="el" href="struct_n_r_e_1_1_utility_1_1_random_access_iterator.php" title="Used in IteratorTraits to detect RandomAccessIterator category. ">RandomAccessIterator</a> category.  <a href="struct_n_r_e_1_1_utility_1_1_random_access_iterator.php#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_n_r_e_1_1_utility_1_1_in_out_forward_iterator.php">NRE::Utility::InOutForwardIterator</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Used in <a class="el" href="class_n_r_e_1_1_utility_1_1_iterator_traits.php" title="Describe an iterator object. ">IteratorTraits</a> to detect <a class="el" href="struct_n_r_e_1_1_utility_1_1_forward_iterator.php" title="Used in IteratorTraits to detect ForwardIterator category. ">ForwardIterator</a> category allowing Output operation.  <a href="struct_n_r_e_1_1_utility_1_1_in_out_forward_iterator.php#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_n_r_e_1_1_utility_1_1_in_out_bidirectional_iterator.php">NRE::Utility::InOutBidirectionalIterator</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Used in <a class="el" href="class_n_r_e_1_1_utility_1_1_iterator_traits.php" title="Describe an iterator object. ">IteratorTraits</a> to detect <a class="el" href="struct_n_r_e_1_1_utility_1_1_bidirectional_iterator.php" title="Used in IteratorTraits to detect BidirectionalIterator category. ">BidirectionalIterator</a> category allowing Output operation.  <a href="struct_n_r_e_1_1_utility_1_1_in_out_bidirectional_iterator.php#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_n_r_e_1_1_utility_1_1_in_out_random_access_iterator.php">NRE::Utility::InOutRandomAccessIterator</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Used in <a class="el" href="class_n_r_e_1_1_utility_1_1_iterator_traits.php" title="Describe an iterator object. ">IteratorTraits</a> to detect <a class="el" href="struct_n_r_e_1_1_utility_1_1_random_access_iterator.php" title="Used in IteratorTraits to detect RandomAccessIterator category. ">RandomAccessIterator</a> category allowing Output operation.  <a href="struct_n_r_e_1_1_utility_1_1_in_out_random_access_iterator.php#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_n_r_e_1_1_utility_1_1_is_iterator.php">NRE::Utility::IsIterator&lt; It &gt;</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Detect if the given template paramter is either an <a class="el" href="struct_n_r_e_1_1_utility_1_1_input_iterator.php" title="Used in IteratorTraits to detect InputIterator category. ">InputIterator</a> or an <a class="el" href="struct_n_r_e_1_1_utility_1_1_output_iterator.php" title="Used in IteratorTraits to detect OutputIterator category. ">OutputIterator</a> or directly iterable pointer.  <a href="struct_n_r_e_1_1_utility_1_1_is_iterator.php#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_n_r_e_1_1_utility_1_1_is_iterator_3_01_t_01_5_01_4.php">NRE::Utility::IsIterator&lt; T * &gt;</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_n_r_e_1_1_utility_1_1_is_iterator_3_01const_01_t_01_5_01_4.php">NRE::Utility::IsIterator&lt; const T * &gt;</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_n_r_e_1_1_utility_1_1_is_input_iterator.php">NRE::Utility::IsInputIterator&lt; It &gt;</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Detect if the given template paramter is an <a class="el" href="struct_n_r_e_1_1_utility_1_1_input_iterator.php" title="Used in IteratorTraits to detect InputIterator category. ">InputIterator</a>.  <a href="struct_n_r_e_1_1_utility_1_1_is_input_iterator.php#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_n_r_e_1_1_utility_1_1_is_output_iterator.php">NRE::Utility::IsOutputIterator&lt; It &gt;</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Detect if the given template paramter is an <a class="el" href="struct_n_r_e_1_1_utility_1_1_output_iterator.php" title="Used in IteratorTraits to detect OutputIterator category. ">OutputIterator</a>.  <a href="struct_n_r_e_1_1_utility_1_1_is_output_iterator.php#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_n_r_e_1_1_utility_1_1_is_bidirectional_iterator.php">NRE::Utility::IsBidirectionalIterator&lt; It &gt;</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Detect if the given template paramter is an <a class="el" href="struct_n_r_e_1_1_utility_1_1_bidirectional_iterator.php" title="Used in IteratorTraits to detect BidirectionalIterator category. ">BidirectionalIterator</a>.  <a href="struct_n_r_e_1_1_utility_1_1_is_bidirectional_iterator.php#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_n_r_e_1_1_utility_1_1_is_random_access_iterator.php">NRE::Utility::IsRandomAccessIterator&lt; It &gt;</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Detect if the given template paramter is an <a class="el" href="struct_n_r_e_1_1_utility_1_1_random_access_iterator.php" title="Used in IteratorTraits to detect RandomAccessIterator category. ">RandomAccessIterator</a>.  <a href="struct_n_r_e_1_1_utility_1_1_is_random_access_iterator.php#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_iterator_traits.php">NRE::Utility::IteratorTraits&lt; It, T, Category &gt;</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Describe an iterator object.  <a href="class_n_r_e_1_1_utility_1_1_iterator_traits.php#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_iterator_traits_3_01_it_3_01_args_8_8_8_01_4_00_01_t_00_01_category_01_4.php">NRE::Utility::IteratorTraits&lt; It&lt; Args... &gt;, T, Category &gt;</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="namespaces"></a>
Namespaces</h2></td></tr>
<tr class="memitem:namespace_n_r_e"><td class="memItemLeft" align="right" valign="top"> &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespace_n_r_e.php">NRE</a></td></tr>
<tr class="memdesc:namespace_n_r_e"><td class="mdescLeft">&#160;</td><td class="mdescRight">The NearlyRealEngine's global namespace. <br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:namespace_utility"><td class="memItemLeft" align="right" valign="top"> &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespace_utility.php">Utility</a></td></tr>
<tr class="memdesc:namespace_utility"><td class="mdescLeft">&#160;</td><td class="mdescRight"><a class="el" href="namespace_utility.php" title="Utility&#39;s API. ">Utility</a>'s API. <br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="typedef-members"></a>
Typedefs</h2></td></tr>
<tr class="memitem:a347ad77053344d917bf2e09386969119"><td class="memTemplParams" colspan="2">template&lt;class It &gt; </td></tr>
<tr class="memitem:a347ad77053344d917bf2e09386969119"><td class="memTemplItemLeft" align="right" valign="top">using&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="_n_r_e___iterator_traits_8hpp.php#a347ad77053344d917bf2e09386969119">NRE::Utility::UseIfOutputIterator</a> = std::enable_if_t&lt; IsOutputIteratorV&lt; It &gt;&gt;</td></tr>
<tr class="separator:a347ad77053344d917bf2e09386969119"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a82ea610cca156f4ca06b3d4c02f6b4bd"><td class="memTemplParams" colspan="2">template&lt;class It &gt; </td></tr>
<tr class="memitem:a82ea610cca156f4ca06b3d4c02f6b4bd"><td class="memTemplItemLeft" align="right" valign="top">using&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="_n_r_e___iterator_traits_8hpp.php#a82ea610cca156f4ca06b3d4c02f6b4bd">NRE::Utility::UseIfBidirectionalIterator</a> = std::enable_if_t&lt; IsBidirectionalIteratorV&lt; It &gt;&gt;</td></tr>
<tr class="separator:a82ea610cca156f4ca06b3d4c02f6b4bd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a53baabcd5053b28657b91592b1368aa1"><td class="memTemplParams" colspan="2">template&lt;class It &gt; </td></tr>
<tr class="memitem:a53baabcd5053b28657b91592b1368aa1"><td class="memTemplItemLeft" align="right" valign="top">using&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="_n_r_e___iterator_traits_8hpp.php#a53baabcd5053b28657b91592b1368aa1">NRE::Utility::UseIfRandomAccessIterator</a> = std::enable_if_t&lt; IsRandomAccessIteratorV&lt; It &gt;&gt;</td></tr>
<tr class="separator:a53baabcd5053b28657b91592b1368aa1"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:ab58822dcc8597b044ba3437b8edf1621"><td class="memTemplParams" colspan="2">template&lt;template&lt; class... &gt; class It, class T , class Category , class... Args, class K  = Category, typename  = UseIfRandomAccessIterator&lt;K&gt;&gt; </td></tr>
<tr class="memitem:ab58822dcc8597b044ba3437b8edf1621"><td class="memTemplItemLeft" align="right" valign="top">It&lt; Args... &gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="_n_r_e___iterator_traits_8hpp.php#ab58822dcc8597b044ba3437b8edf1621">NRE::Utility::operator+</a> (std::ptrdiff_t k, IteratorTraits&lt; It&lt; Args... &gt;, T, Category &gt; const &amp;it)</td></tr>
<tr class="separator:ab58822dcc8597b044ba3437b8edf1621"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0e60164197464f02174ee43d3a77f154"><td class="memTemplParams" colspan="2">template&lt;template&lt; class... &gt; class It, class T , class Category , class... Args, class K  = Category, typename  = UseIfRandomAccessIterator&lt;K&gt;&gt; </td></tr>
<tr class="memitem:a0e60164197464f02174ee43d3a77f154"><td class="memTemplItemLeft" align="right" valign="top">It&lt; Args... &gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="_n_r_e___iterator_traits_8hpp.php#a0e60164197464f02174ee43d3a77f154">NRE::Utility::operator-</a> (std::ptrdiff_t k, IteratorTraits&lt; It&lt; Args... &gt;, T, Category &gt; const &amp;it)</td></tr>
<tr class="separator:a0e60164197464f02174ee43d3a77f154"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="var-members"></a>
Variables</h2></td></tr>
<tr class="memitem:a9519b95ddb31e0d557081f15e2a04141"><td class="memTemplParams" colspan="2">template&lt;class T &gt; </td></tr>
<tr class="memitem:a9519b95ddb31e0d557081f15e2a04141"><td class="memTemplItemLeft" align="right" valign="top">constexpr bool&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="_n_r_e___iterator_traits_8hpp.php#a9519b95ddb31e0d557081f15e2a04141">NRE::Utility::IsIteratorV</a> = IsIterator&lt;T&gt;::value</td></tr>
<tr class="separator:a9519b95ddb31e0d557081f15e2a04141"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5652f3427d2dd96d31e16f76c88ee79d"><td class="memTemplParams" colspan="2">template&lt;class It &gt; </td></tr>
<tr class="memitem:a5652f3427d2dd96d31e16f76c88ee79d"><td class="memTemplItemLeft" align="right" valign="top">constexpr bool&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="_n_r_e___iterator_traits_8hpp.php#a5652f3427d2dd96d31e16f76c88ee79d">NRE::Utility::IsInputIteratorV</a> = IsInputIterator&lt;It&gt;::value</td></tr>
<tr class="separator:a5652f3427d2dd96d31e16f76c88ee79d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aba5e36604ac76d35f47c7de203bcbd87"><td class="memTemplParams" colspan="2">template&lt;class It &gt; </td></tr>
<tr class="memitem:aba5e36604ac76d35f47c7de203bcbd87"><td class="memTemplItemLeft" align="right" valign="top">constexpr bool&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="_n_r_e___iterator_traits_8hpp.php#aba5e36604ac76d35f47c7de203bcbd87">NRE::Utility::IsOutputIteratorV</a> = IsOutputIterator&lt;It&gt;::value</td></tr>
<tr class="separator:aba5e36604ac76d35f47c7de203bcbd87"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2855aa04bca1b33d549b3efaf94c7ee8"><td class="memTemplParams" colspan="2">template&lt;class It &gt; </td></tr>
<tr class="memitem:a2855aa04bca1b33d549b3efaf94c7ee8"><td class="memTemplItemLeft" align="right" valign="top">constexpr bool&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="_n_r_e___iterator_traits_8hpp.php#a2855aa04bca1b33d549b3efaf94c7ee8">NRE::Utility::IsBidirectionalIteratorV</a> = IsBidirectionalIterator&lt;It&gt;::value</td></tr>
<tr class="separator:a2855aa04bca1b33d549b3efaf94c7ee8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab5e6435686c39af1017ae6bc84fb6d06"><td class="memTemplParams" colspan="2">template&lt;class It &gt; </td></tr>
<tr class="memitem:ab5e6435686c39af1017ae6bc84fb6d06"><td class="memTemplItemLeft" align="right" valign="top">constexpr bool&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="_n_r_e___iterator_traits_8hpp.php#ab5e6435686c39af1017ae6bc84fb6d06">NRE::Utility::IsRandomAccessIteratorV</a> = IsRandomAccessIterator&lt;It&gt;::value</td></tr>
<tr class="separator:ab5e6435686c39af1017ae6bc84fb6d06"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Declaration of <a class="el" href="namespace_utility.php" title="Utility&#39;s API. ">Utility</a>'s API's Interface : IteratorTraits. </p>
<dl class="section author"><dt>Author</dt><dd>Louis ABEL </dd></dl>
<dl class="section date"><dt>Date</dt><dd>20/10/2019 </dd></dl>
<dl class="section copyright"><dt>Copyright</dt><dd>CC-BY-NC-SA </dd></dl>
</div><h2 class="groupheader">Typedef Documentation</h2>
<a class="anchor" id="file_a82ea610cca156f4ca06b3d4c02f6b4bd"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class It &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="_n_r_e___iterator_traits_8hpp.php#a82ea610cca156f4ca06b3d4c02f6b4bd">NRE::Utility::UseIfBidirectionalIterator</a> = typedef std::enable_if_t&lt;IsBidirectionalIteratorV&lt;It&gt;&gt;</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Allow to enable a function if the given template parameter is a bidirectional iterator </p>

</div>
</div>
<a class="anchor" id="file_a347ad77053344d917bf2e09386969119"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class It &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="_n_r_e___iterator_traits_8hpp.php#a347ad77053344d917bf2e09386969119">NRE::Utility::UseIfOutputIterator</a> = typedef std::enable_if_t&lt;IsOutputIteratorV&lt;It&gt;&gt;</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Allow to enable a function if the given template parameter is an output iterator </p>

</div>
</div>
<a class="anchor" id="file_a53baabcd5053b28657b91592b1368aa1"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class It &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="_n_r_e___iterator_traits_8hpp.php#a53baabcd5053b28657b91592b1368aa1">NRE::Utility::UseIfRandomAccessIterator</a> = typedef std::enable_if_t&lt;IsRandomAccessIteratorV&lt;It&gt;&gt;</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Allow to enable a function if the given template parameter is a random access iterator </p>

</div>
</div>
<h2 class="groupheader">Function Documentation</h2>
<a class="anchor" id="file_ab58822dcc8597b044ba3437b8edf1621"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;template&lt; class... &gt; class It, class T , class Category , class... Args, class K  = Category, typename  = UseIfRandomAccessIterator&lt;K&gt;&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">It&lt;Args...&gt; NRE::Utility::operator+ </td>
          <td>(</td>
          <td class="paramtype">std::ptrdiff_t&#160;</td>
          <td class="paramname"><em>k</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_iterator_traits.php">IteratorTraits</a>&lt; It&lt; Args... &gt;, T, Category &gt; const &amp;&#160;</td>
          <td class="paramname"><em>it</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Create an iterator resulting in the move of it by k </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">k</td><td>the distance to add </td></tr>
    <tr><td class="paramname">it</td><td>the iterator to move </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the new iterator </dd></dl>

</div>
</div>
<a class="anchor" id="file_a0e60164197464f02174ee43d3a77f154"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;template&lt; class... &gt; class It, class T , class Category , class... Args, class K  = Category, typename  = UseIfRandomAccessIterator&lt;K&gt;&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">It&lt;Args...&gt; NRE::Utility::operator- </td>
          <td>(</td>
          <td class="paramtype">std::ptrdiff_t&#160;</td>
          <td class="paramname"><em>k</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_iterator_traits.php">IteratorTraits</a>&lt; It&lt; Args... &gt;, T, Category &gt; const &amp;&#160;</td>
          <td class="paramname"><em>it</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Create an iterator resulting in the move of it by k </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">k</td><td>the distance to subtract </td></tr>
    <tr><td class="paramname">it</td><td>the iterator to move </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the new iterator </dd></dl>

</div>
</div>
<h2 class="groupheader">Variable Documentation</h2>
<a class="anchor" id="file_a2855aa04bca1b33d549b3efaf94c7ee8"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class It &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">constexpr bool NRE::Utility::IsBidirectionalIteratorV = IsBidirectionalIterator&lt;It&gt;::value</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Shortcut to <a class="el" href="struct_n_r_e_1_1_utility_1_1_is_bidirectional_iterator.php" title="Detect if the given template paramter is an BidirectionalIterator. ">IsBidirectionalIterator</a> inner value </p>

</div>
</div>
<a class="anchor" id="file_a5652f3427d2dd96d31e16f76c88ee79d"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class It &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">constexpr bool NRE::Utility::IsInputIteratorV = IsInputIterator&lt;It&gt;::value</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Shortcut to <a class="el" href="struct_n_r_e_1_1_utility_1_1_is_input_iterator.php" title="Detect if the given template paramter is an InputIterator. ">IsInputIterator</a> inner value </p>

</div>
</div>
<a class="anchor" id="file_a9519b95ddb31e0d557081f15e2a04141"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">constexpr bool NRE::Utility::IsIteratorV = IsIterator&lt;T&gt;::value</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Shortcut to <a class="el" href="struct_n_r_e_1_1_utility_1_1_is_iterator.php" title="Detect if the given template paramter is either an InputIterator or an OutputIterator or directly ite...">IsIterator</a> inner value </p>

</div>
</div>
<a class="anchor" id="file_aba5e36604ac76d35f47c7de203bcbd87"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class It &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">constexpr bool NRE::Utility::IsOutputIteratorV = IsOutputIterator&lt;It&gt;::value</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Shortcut to <a class="el" href="struct_n_r_e_1_1_utility_1_1_is_output_iterator.php" title="Detect if the given template paramter is an OutputIterator. ">IsOutputIterator</a> inner value </p>

</div>
</div>
<a class="anchor" id="file_ab5e6435686c39af1017ae6bc84fb6d06"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class It &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">constexpr bool NRE::Utility::IsRandomAccessIteratorV = IsRandomAccessIterator&lt;It&gt;::value</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Shortcut to <a class="el" href="struct_n_r_e_1_1_utility_1_1_is_random_access_iterator.php" title="Detect if the given template paramter is an RandomAccessIterator. ">IsRandomAccessIterator</a> inner value </p>

</div>
</div>
</div><!-- contents -->
<!-- HTML footer for doxygen 1.8.8-->
<!-- start footer part -->
</div>
</div>
</div>
</div>
</body>
</html>
