<!-- HTML header for doxygen 1.8.8-->
<!DOCTYPE html>
<html>
    <head>
        <meta http-equiv="X-UA-Compatible" content="IE=edge">
        <!-- For Mobile Devices -->
        <meta name="viewport" content="width=device-width, initial-scale=1">
        <meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
        <meta name="generator" content="Doxygen 1.8.11"/>
        <script type="text/javascript" src="../../js/jquery-2.1.1.min.js"></script>
        <title>NRE-Utility: NRE::Utility::Detail::HashTable&lt; Key, T, StoreHash, Hash, KeyEqual &gt;::ForwardIterator&lt; K &gt; Class Template Reference</title>
        <!--<link href="tabs.css" rel="stylesheet" type="text/css"/>-->
        <script type="text/javascript" src="dynsections.js"></script>
        <link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
        <link href="doxygen.css" rel="stylesheet" type="text/css" />
        <link href="style.css" rel="stylesheet" type="text/css"/>
        <link href='https://fonts.googleapis.com/css?family=Roboto+Slab' rel='stylesheet' type='text/css'>
        <?php
            include '../../php/navigation.php';
            if (!isset($_COOKIE["theme"]) || $_COOKIE["theme"] == "dark") {
                echo '<link href="../../css/dark/bootstrap.css" rel="stylesheet">';
            } else {
                echo '<link href="../../css/light/bootstrap.css" rel="stylesheet">';
            }
        ?>
        <script src="../../js/bootstrap.min.js"></script>
        <script type="text/javascript" src="doxy-boot.js"></script>
    </head>
    <body>
        <div class="container-fluid">
            <header class="page-header">
                <a href="../../../index.php">
                    <img src="../../img/Logo.png" class="logo img-responsive"/>
                </a>
            </header>
            <?php addNavigationBarInl(false); ?>
            <div id="top" class="row"><!-- do not remove this div, it is closed by doxygen! -->
                <div class="col-lg-12">
                    <div class="panel panel-default">
                        <div class="panel-body">
<!-- end header part -->
<!-- Generated by Doxygen 1.8.11 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.php"><span>Main&#160;Page</span></a></li>
      <li><a href="namespaces.php"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.php"><span>Classes</span></a></li>
      <li><a href="files.php"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.php"><span>Class&#160;List</span></a></li>
      <li><a href="classes.php"><span>Class&#160;Index</span></a></li>
      <li><a href="hierarchy.php"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.php"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespace_n_r_e.php">NRE</a></li><li class="navelem"><b>Utility</b></li><li class="navelem"><b>Detail</b></li><li class="navelem"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_hash_table.php">HashTable</a></li><li class="navelem"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_hash_table_1_1_forward_iterator.php">ForwardIterator</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-types">Public Types</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#friends">Friends</a> &#124;
<a href="class_n_r_e_1_1_utility_1_1_detail_1_1_hash_table_1_1_forward_iterator-members.php">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">NRE::Utility::Detail::HashTable&lt; Key, T, StoreHash, Hash, KeyEqual &gt;::ForwardIterator&lt; K &gt; Class Template Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>Hash table forward iterator.  
 <a href="class_n_r_e_1_1_utility_1_1_detail_1_1_hash_table_1_1_forward_iterator.php#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="_n_r_e___hash_table_8hpp_source.php">NRE_HashTable.hpp</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-types"></a>
Public Types</h2></td></tr>
<tr class="memitem:a06a981bf61725283d2616fd31593266b"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a06a981bf61725283d2616fd31593266b"></a>
typedef std::ptrdiff_t&#160;</td><td class="memItemRight" valign="bottom"><b>difference_type</b></td></tr>
<tr class="separator:a06a981bf61725283d2616fd31593266b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6153d3e6deecc78dbf766f1fb704bfae"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a6153d3e6deecc78dbf766f1fb704bfae"></a>
typedef <a class="el" href="class_n_r_e_1_1_utility_1_1_pair.php">HashTable::ValueType</a>&#160;</td><td class="memItemRight" valign="bottom"><b>value_type</b></td></tr>
<tr class="separator:a6153d3e6deecc78dbf766f1fb704bfae"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2b40b6e84012951ad0d1f933e8d6ade4"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a2b40b6e84012951ad0d1f933e8d6ade4"></a>
typedef <a class="el" href="class_n_r_e_1_1_utility_1_1_pair.php">value_type</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>pointer</b></td></tr>
<tr class="separator:a2b40b6e84012951ad0d1f933e8d6ade4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afc50ca72a06d792123ee57971a8d5510"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="afc50ca72a06d792123ee57971a8d5510"></a>
typedef <a class="el" href="class_n_r_e_1_1_utility_1_1_pair.php">value_type</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><b>reference</b></td></tr>
<tr class="separator:afc50ca72a06d792123ee57971a8d5510"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4b817cb3d5c451d6a08d459d48426ef5"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a4b817cb3d5c451d6a08d459d48426ef5"></a>
typedef std::forward_iterator_tag&#160;</td><td class="memItemRight" valign="bottom"><b>iterator_category</b></td></tr>
<tr class="separator:a4b817cb3d5c451d6a08d459d48426ef5"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a7868b16575bdb95014e1b13f03a760a7"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_hash_table_1_1_forward_iterator.php#a7868b16575bdb95014e1b13f03a760a7">ForwardIterator</a> ()=default</td></tr>
<tr class="separator:a7868b16575bdb95014e1b13f03a760a7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad3a36be2544bb9f9bea0709bec7cc102"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_hash_table_1_1_forward_iterator.php#ad3a36be2544bb9f9bea0709bec7cc102">ForwardIterator</a> (<a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_bucket_entry.php">BucketEntry</a>&lt; <a class="el" href="class_n_r_e_1_1_utility_1_1_pair.php">ValueType</a>, STORE_HASH &gt; *bucket)</td></tr>
<tr class="separator:ad3a36be2544bb9f9bea0709bec7cc102"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a184e34bb170247f6276293f738011cab"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_hash_table_1_1_forward_iterator.php#a184e34bb170247f6276293f738011cab">ForwardIterator</a> (const <a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_bucket_entry.php">BucketEntry</a>&lt; <a class="el" href="class_n_r_e_1_1_utility_1_1_pair.php">ValueType</a>, STORE_HASH &gt; *bucket)</td></tr>
<tr class="separator:a184e34bb170247f6276293f738011cab"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a071e75c57ae5ec22d337e68fb5ea2648"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_hash_table_1_1_forward_iterator.php#a071e75c57ae5ec22d337e68fb5ea2648">ForwardIterator</a> (<a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_hash_table_1_1_forward_iterator.php">ForwardIterator</a> const &amp;it)=default</td></tr>
<tr class="separator:a071e75c57ae5ec22d337e68fb5ea2648"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a47f37804a81012f21e3d0d2b8ac05cd2"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_hash_table_1_1_forward_iterator.php#a47f37804a81012f21e3d0d2b8ac05cd2">~ForwardIterator</a> ()=default</td></tr>
<tr class="separator:a47f37804a81012f21e3d0d2b8ac05cd2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a424515c1614e1b2e45812cb82181c497"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_hash_table_1_1_forward_iterator.php">ForwardIterator</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_hash_table_1_1_forward_iterator.php#a424515c1614e1b2e45812cb82181c497">operator=</a> (<a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_hash_table_1_1_forward_iterator.php">ForwardIterator</a> const &amp;it)=default</td></tr>
<tr class="separator:a424515c1614e1b2e45812cb82181c497"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a14b5fb1e6e91670e47b179ccfedad92d"><td class="memItemLeft" align="right" valign="top">K &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_hash_table_1_1_forward_iterator.php#a14b5fb1e6e91670e47b179ccfedad92d">operator*</a> () const </td></tr>
<tr class="separator:a14b5fb1e6e91670e47b179ccfedad92d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5c24bcb7954fe6d5d313cf63be34114c"><td class="memItemLeft" align="right" valign="top">K *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_hash_table_1_1_forward_iterator.php#a5c24bcb7954fe6d5d313cf63be34114c">operator-&gt;</a> () const </td></tr>
<tr class="separator:a5c24bcb7954fe6d5d313cf63be34114c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a47c6aaed43aacea1aa0a4ce3e84c20d6"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_hash_table_1_1_forward_iterator.php">ForwardIterator</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_hash_table_1_1_forward_iterator.php#a47c6aaed43aacea1aa0a4ce3e84c20d6">operator++</a> ()</td></tr>
<tr class="separator:a47c6aaed43aacea1aa0a4ce3e84c20d6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7b50f330bd6b330e080d89c3dd3e4d84"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_hash_table_1_1_forward_iterator.php">ForwardIterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_hash_table_1_1_forward_iterator.php#a7b50f330bd6b330e080d89c3dd3e4d84">operator++</a> (int)</td></tr>
<tr class="separator:a7b50f330bd6b330e080d89c3dd3e4d84"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a592ad0ebb870db3c29b5ef0c8bc18acc"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_hash_table_1_1_forward_iterator.php#a592ad0ebb870db3c29b5ef0c8bc18acc">operator==</a> (<a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_hash_table_1_1_forward_iterator.php">ForwardIterator</a> const &amp;it) const </td></tr>
<tr class="separator:a592ad0ebb870db3c29b5ef0c8bc18acc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a36d9c2ac5d0990f15a2652c75ebf94bb"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_hash_table_1_1_forward_iterator.php#a36d9c2ac5d0990f15a2652c75ebf94bb">operator!=</a> (<a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_hash_table_1_1_forward_iterator.php">ForwardIterator</a> const &amp;it) const </td></tr>
<tr class="separator:a36d9c2ac5d0990f15a2652c75ebf94bb"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="friends"></a>
Friends</h2></td></tr>
<tr class="memitem:a574ea806a7ec4e2f0fa54ed7da67b628"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a574ea806a7ec4e2f0fa54ed7da67b628"></a>
class&#160;</td><td class="memItemRight" valign="bottom"><b>HashTable</b></td></tr>
<tr class="separator:a574ea806a7ec4e2f0fa54ed7da67b628"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><h3>template&lt;class Key, class T, bool StoreHash = false, class Hash = std::hash&lt;Key&gt;, class KeyEqual = std::equal_to&lt;Key&gt;&gt;<br />
template&lt;class K&gt;<br />
class NRE::Utility::Detail::HashTable&lt; Key, T, StoreHash, Hash, KeyEqual &gt;::ForwardIterator&lt; K &gt;</h3>

<p>Hash table forward iterator. </p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="a7868b16575bdb95014e1b13f03a760a7"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class Key, class T, bool StoreHash = false, class Hash = std::hash&lt;Key&gt;, class KeyEqual = std::equal_to&lt;Key&gt;&gt; </div>
<div class="memtemplate">
template&lt;class K &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_hash_table.php">NRE::Utility::Detail::HashTable</a>&lt; Key, T, StoreHash, Hash, KeyEqual &gt;::<a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_hash_table_1_1_forward_iterator.php">ForwardIterator</a>&lt; K &gt;::<a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_hash_table_1_1_forward_iterator.php">ForwardIterator</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Default constructor with nullptr node </p>

</div>
</div>
<a class="anchor" id="ad3a36be2544bb9f9bea0709bec7cc102"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class Key, class T, bool StoreHash = false, class Hash = std::hash&lt;Key&gt;, class KeyEqual = std::equal_to&lt;Key&gt;&gt; </div>
<div class="memtemplate">
template&lt;class K &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_hash_table.php">NRE::Utility::Detail::HashTable</a>&lt; Key, T, StoreHash, Hash, KeyEqual &gt;::<a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_hash_table_1_1_forward_iterator.php">ForwardIterator</a>&lt; K &gt;::<a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_hash_table_1_1_forward_iterator.php">ForwardIterator</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_bucket_entry.php">BucketEntry</a>&lt; <a class="el" href="class_n_r_e_1_1_utility_1_1_pair.php">ValueType</a>, STORE_HASH &gt; *&#160;</td>
          <td class="paramname"><em>bucket</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Construct the iterator with the given node </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">bucket</td><td>the iterator bucket </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a184e34bb170247f6276293f738011cab"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class Key, class T, bool StoreHash = false, class Hash = std::hash&lt;Key&gt;, class KeyEqual = std::equal_to&lt;Key&gt;&gt; </div>
<div class="memtemplate">
template&lt;class K &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_hash_table.php">NRE::Utility::Detail::HashTable</a>&lt; Key, T, StoreHash, Hash, KeyEqual &gt;::<a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_hash_table_1_1_forward_iterator.php">ForwardIterator</a>&lt; K &gt;::<a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_hash_table_1_1_forward_iterator.php">ForwardIterator</a> </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_bucket_entry.php">BucketEntry</a>&lt; <a class="el" href="class_n_r_e_1_1_utility_1_1_pair.php">ValueType</a>, STORE_HASH &gt; *&#160;</td>
          <td class="paramname"><em>bucket</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Construct the iterator with the given node </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">bucket</td><td>the iterator bucket </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a071e75c57ae5ec22d337e68fb5ea2648"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class Key, class T, bool StoreHash = false, class Hash = std::hash&lt;Key&gt;, class KeyEqual = std::equal_to&lt;Key&gt;&gt; </div>
<div class="memtemplate">
template&lt;class K &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_hash_table.php">NRE::Utility::Detail::HashTable</a>&lt; Key, T, StoreHash, Hash, KeyEqual &gt;::<a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_hash_table_1_1_forward_iterator.php">ForwardIterator</a>&lt; K &gt;::<a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_hash_table_1_1_forward_iterator.php">ForwardIterator</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_hash_table_1_1_forward_iterator.php">ForwardIterator</a>&lt; K &gt; const &amp;&#160;</td>
          <td class="paramname"><em>it</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Copy it into this </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">it</td><td>the iterator to copy </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a47f37804a81012f21e3d0d2b8ac05cd2"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class Key, class T, bool StoreHash = false, class Hash = std::hash&lt;Key&gt;, class KeyEqual = std::equal_to&lt;Key&gt;&gt; </div>
<div class="memtemplate">
template&lt;class K &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_hash_table.php">NRE::Utility::Detail::HashTable</a>&lt; Key, T, StoreHash, Hash, KeyEqual &gt;::<a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_hash_table_1_1_forward_iterator.php">ForwardIterator</a>&lt; K &gt;::~<a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_hash_table_1_1_forward_iterator.php">ForwardIterator</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_hash_table_1_1_forward_iterator.php" title="Hash table forward iterator. ">ForwardIterator</a> Deconstructor </p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a class="anchor" id="a36d9c2ac5d0990f15a2652c75ebf94bb"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class Key, class T, bool StoreHash = false, class Hash = std::hash&lt;Key&gt;, class KeyEqual = std::equal_to&lt;Key&gt;&gt; </div>
<div class="memtemplate">
template&lt;class K &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">bool <a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_hash_table.php">NRE::Utility::Detail::HashTable</a>&lt; Key, T, StoreHash, Hash, KeyEqual &gt;::<a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_hash_table_1_1_forward_iterator.php">ForwardIterator</a>&lt; K &gt;::operator!= </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_hash_table_1_1_forward_iterator.php">ForwardIterator</a>&lt; K &gt; const &amp;&#160;</td>
          <td class="paramname"><em>it</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Inequality test between this and it </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">it</td><td>the other iterator </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the test result </dd></dl>

</div>
</div>
<a class="anchor" id="a14b5fb1e6e91670e47b179ccfedad92d"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class Key, class T, bool StoreHash = false, class Hash = std::hash&lt;Key&gt;, class KeyEqual = std::equal_to&lt;Key&gt;&gt; </div>
<div class="memtemplate">
template&lt;class K &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">K&amp; <a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_hash_table.php">NRE::Utility::Detail::HashTable</a>&lt; Key, T, StoreHash, Hash, KeyEqual &gt;::<a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_hash_table_1_1_forward_iterator.php">ForwardIterator</a>&lt; K &gt;::operator* </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Dereference operator, allow access to the data </p><dl class="section return"><dt>Returns</dt><dd>the iterator data </dd></dl>

</div>
</div>
<a class="anchor" id="a47c6aaed43aacea1aa0a4ce3e84c20d6"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class Key, class T, bool StoreHash = false, class Hash = std::hash&lt;Key&gt;, class KeyEqual = std::equal_to&lt;Key&gt;&gt; </div>
<div class="memtemplate">
template&lt;class K &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_hash_table_1_1_forward_iterator.php">ForwardIterator</a>&amp; <a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_hash_table.php">NRE::Utility::Detail::HashTable</a>&lt; Key, T, StoreHash, Hash, KeyEqual &gt;::<a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_hash_table_1_1_forward_iterator.php">ForwardIterator</a>&lt; K &gt;::operator++ </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Pre increment operator, access the next element </p><dl class="section return"><dt>Returns</dt><dd>the reference of himself </dd></dl>

</div>
</div>
<a class="anchor" id="a7b50f330bd6b330e080d89c3dd3e4d84"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class Key, class T, bool StoreHash = false, class Hash = std::hash&lt;Key&gt;, class KeyEqual = std::equal_to&lt;Key&gt;&gt; </div>
<div class="memtemplate">
template&lt;class K &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_hash_table_1_1_forward_iterator.php">ForwardIterator</a> <a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_hash_table.php">NRE::Utility::Detail::HashTable</a>&lt; Key, T, StoreHash, Hash, KeyEqual &gt;::<a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_hash_table_1_1_forward_iterator.php">ForwardIterator</a>&lt; K &gt;::operator++ </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Post increment operator, access the next element </p><dl class="section return"><dt>Returns</dt><dd>the iterator on the current element </dd></dl>

</div>
</div>
<a class="anchor" id="a5c24bcb7954fe6d5d313cf63be34114c"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class Key, class T, bool StoreHash = false, class Hash = std::hash&lt;Key&gt;, class KeyEqual = std::equal_to&lt;Key&gt;&gt; </div>
<div class="memtemplate">
template&lt;class K &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">K* <a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_hash_table.php">NRE::Utility::Detail::HashTable</a>&lt; Key, T, StoreHash, Hash, KeyEqual &gt;::<a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_hash_table_1_1_forward_iterator.php">ForwardIterator</a>&lt; K &gt;::operator-&gt; </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Arrow dereference operator, allow access to the data </p><dl class="section return"><dt>Returns</dt><dd>the iterator data pointer </dd></dl>

</div>
</div>
<a class="anchor" id="a424515c1614e1b2e45812cb82181c497"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class Key, class T, bool StoreHash = false, class Hash = std::hash&lt;Key&gt;, class KeyEqual = std::equal_to&lt;Key&gt;&gt; </div>
<div class="memtemplate">
template&lt;class K &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_hash_table_1_1_forward_iterator.php">ForwardIterator</a>&amp; <a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_hash_table.php">NRE::Utility::Detail::HashTable</a>&lt; Key, T, StoreHash, Hash, KeyEqual &gt;::<a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_hash_table_1_1_forward_iterator.php">ForwardIterator</a>&lt; K &gt;::operator= </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_hash_table_1_1_forward_iterator.php">ForwardIterator</a>&lt; K &gt; const &amp;&#160;</td>
          <td class="paramname"><em>it</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Copy assignment of it into this </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">it</td><td>the iterator to copy into this </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the reference of himself </dd></dl>

</div>
</div>
<a class="anchor" id="a592ad0ebb870db3c29b5ef0c8bc18acc"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class Key, class T, bool StoreHash = false, class Hash = std::hash&lt;Key&gt;, class KeyEqual = std::equal_to&lt;Key&gt;&gt; </div>
<div class="memtemplate">
template&lt;class K &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">bool <a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_hash_table.php">NRE::Utility::Detail::HashTable</a>&lt; Key, T, StoreHash, Hash, KeyEqual &gt;::<a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_hash_table_1_1_forward_iterator.php">ForwardIterator</a>&lt; K &gt;::operator== </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_detail_1_1_hash_table_1_1_forward_iterator.php">ForwardIterator</a>&lt; K &gt; const &amp;&#160;</td>
          <td class="paramname"><em>it</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Equality test between this and it </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">it</td><td>the other iterator </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the test result </dd></dl>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>/mnt/c/Users/abell/Documents/GitHub/NRE-Utility/src/Utility/Detail/HashTable/<a class="el" href="_n_r_e___hash_table_8hpp_source.php">NRE_HashTable.hpp</a></li>
</ul>
</div><!-- contents -->
<!-- HTML footer for doxygen 1.8.8-->
<!-- start footer part -->
</div>
</div>
</div>
</div>
</body>
</html>
