<!-- HTML header for doxygen 1.8.8-->
<!DOCTYPE html>
<html>
    <head>
        <meta http-equiv="X-UA-Compatible" content="IE=edge">
        <!-- For Mobile Devices -->
        <meta name="viewport" content="width=device-width, initial-scale=1">
        <meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
        <meta name="generator" content="Doxygen 1.8.11"/>
        <script type="text/javascript" src="../../js/jquery-2.1.1.min.js"></script>
        <title>NRE-Utility: /mnt/c/Users/abell/Documents/GitHub/NRE-Utility/src/Utility/Array/NRE_Array.hpp Source File</title>
        <!--<link href="tabs.css" rel="stylesheet" type="text/css"/>-->
        <script type="text/javascript" src="dynsections.js"></script>
        <link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
        <link href="doxygen.css" rel="stylesheet" type="text/css" />
        <link href="style.css" rel="stylesheet" type="text/css"/>
        <link href='https://fonts.googleapis.com/css?family=Roboto+Slab' rel='stylesheet' type='text/css'>
        <?php
            include '../../php/navigation.php';
            if (!isset($_COOKIE["theme"]) || $_COOKIE["theme"] == "dark") {
                echo '<link href="../../css/dark/bootstrap.css" rel="stylesheet">';
            } else {
                echo '<link href="../../css/light/bootstrap.css" rel="stylesheet">';
            }
        ?>
        <script src="../../js/bootstrap.min.js"></script>
        <script type="text/javascript" src="doxy-boot.js"></script>
    </head>
    <body>
        <div class="container-fluid">
            <header class="page-header">
                <a href="../../../index.php">
                    <img src="../../img/Logo.png" class="logo img-responsive"/>
                </a>
            </header>
            <?php addNavigationBarInl(false); ?>
            <div id="top" class="row"><!-- do not remove this div, it is closed by doxygen! -->
                <div class="col-lg-12">
                    <div class="panel panel-default">
                        <div class="panel-body">
<!-- end header part -->
<!-- Generated by Doxygen 1.8.11 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.php"><span>Main&#160;Page</span></a></li>
      <li><a href="namespaces.php"><span>Namespaces</span></a></li>
      <li><a href="annotated.php"><span>Classes</span></a></li>
      <li class="current"><a href="files.php"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.php"><span>File&#160;List</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.php">src</a></li><li class="navelem"><a class="el" href="dir_9761b53e3d9349800c0cb59b71c8cd3d.php">Utility</a></li><li class="navelem"><a class="el" href="dir_615be8853e8c96245745e9eaf70ac14c.php">Array</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">NRE_Array.hpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="_n_r_e___array_8hpp.php">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;</div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="preprocessor">     #pragma once</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;</div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="preprocessor">     #include &lt;stdexcept&gt;</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="preprocessor">     #include &lt;utility&gt;</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="preprocessor">     #include &lt;limits&gt;</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="preprocessor">     #include &lt;cstring&gt;</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;</div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="preprocessor">     #include &quot;../String/NRE_String.hpp&quot;</span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="preprocessor">     #include &quot;../Interfaces/Stringable/NRE_Stringable.hpp&quot;</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;</div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;    <span class="keyword">namespace </span><a class="code" href="namespace_n_r_e.php">NRE</a> {</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;        <span class="keyword">namespace </span><a class="code" href="namespace_utility.php">Utility</a> {</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;            <span class="keyword">template</span> &lt;<span class="keyword">class</span> T, std::<span class="keywordtype">size_t</span> Size&gt;</div><div class="line"><a name="l00036"></a><span class="lineno"><a class="line" href="class_n_r_e_1_1_utility_1_1_array.php">   36</a></span>&#160;            <span class="keyword">class </span><a class="code" href="class_n_r_e_1_1_utility_1_1_array.php">Array</a> : <span class="keyword">public</span> <a class="code" href="class_n_r_e_1_1_utility_1_1_stringable.php">Stringable</a>&lt;Array&lt;T, Size&gt;&gt; {</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;                <span class="keyword">public</span> :    <span class="comment">// Iterator</span></div><div class="line"><a name="l00039"></a><span class="lineno"><a class="line" href="class_n_r_e_1_1_utility_1_1_array.php#a7c73d4e09069f287dd826778694a320c">   39</a></span>&#160;<span class="comment"></span>                    <span class="keyword">typedef</span> T*          <a class="code" href="class_n_r_e_1_1_utility_1_1_array.php#a7c73d4e09069f287dd826778694a320c">Iterator</a>;</div><div class="line"><a name="l00041"></a><span class="lineno"><a class="line" href="class_n_r_e_1_1_utility_1_1_array.php#ad0527ef7754879228ba0c9caf90fc14c">   41</a></span>&#160;                    <span class="keyword">typedef</span> <span class="keyword">const</span> T*    <a class="code" href="class_n_r_e_1_1_utility_1_1_array.php#ad0527ef7754879228ba0c9caf90fc14c">ConstIterator</a>;</div><div class="line"><a name="l00043"></a><span class="lineno"><a class="line" href="class_n_r_e_1_1_utility_1_1_array.php#a194595bf8eda8b81742a7b3ec59d2e47">   43</a></span>&#160;                    <span class="keyword">typedef</span> std::reverse_iterator&lt;T*&gt;          <a class="code" href="class_n_r_e_1_1_utility_1_1_array.php#a194595bf8eda8b81742a7b3ec59d2e47">ReverseIterator</a>;</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;                    <span class="keyword">typedef</span> std::reverse_iterator&lt;const T*&gt;    ConstReverseIterator;</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;                <span class="keyword">private</span> :   <span class="comment">// Fields</span></div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;                    T data[Size];   </div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;                <span class="keyword">public</span> :    <span class="comment">// Methods</span></div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;                    <span class="comment">//## Constructor ##//</span></div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;<span class="comment"></span>                        <a class="code" href="class_n_r_e_1_1_utility_1_1_array.php#adca9e0bfc6bec4c47db6b4cb1ba3f693">Array</a>() = <span class="keywordflow">default</span>;</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;                        <a class="code" href="class_n_r_e_1_1_utility_1_1_array.php#adca9e0bfc6bec4c47db6b4cb1ba3f693">Array</a>(std::initializer_list&lt;T&gt; list);</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;                    <span class="comment">//## Copy Constructor ##//</span></div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;<span class="comment"></span>                        <a class="code" href="class_n_r_e_1_1_utility_1_1_array.php#adca9e0bfc6bec4c47db6b4cb1ba3f693">Array</a>(<a class="code" href="class_n_r_e_1_1_utility_1_1_array.php">Array</a> <span class="keyword">const</span>&amp; arr) = <span class="keywordflow">default</span>;</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;                    <span class="comment">//## Move Constructor ##//</span></div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;<span class="comment"></span>                        <a class="code" href="class_n_r_e_1_1_utility_1_1_array.php#adca9e0bfc6bec4c47db6b4cb1ba3f693">Array</a>(<a class="code" href="class_n_r_e_1_1_utility_1_1_array.php">Array</a> &amp;&amp; arr) = <span class="keywordflow">default</span>;</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;                    <span class="comment">//## Deconstructor ##//</span></div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;<span class="comment"></span>                        <a class="code" href="class_n_r_e_1_1_utility_1_1_array.php#a8b21cfd0a6608aefaef606d1df918a7c">~Array</a>() = <span class="keywordflow">default</span>;</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;                    <span class="comment">//## Getter ##//</span></div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;<span class="comment"></span>                        T&amp; <span class="keyword">get</span>(std::size_t index);</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;                        T <span class="keyword">const</span>&amp; <span class="keyword">get</span>(std::size_t index) <span class="keyword">const</span>;</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;                        T* <a class="code" href="class_n_r_e_1_1_utility_1_1_array.php#acaa8371bb5be3991597d4f3515e8c547">getData</a>();</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;                        <span class="keyword">const</span> T* <a class="code" href="class_n_r_e_1_1_utility_1_1_array.php#acaa8371bb5be3991597d4f3515e8c547">getData</a>() <span class="keyword">const</span>;</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;                        T&amp; <a class="code" href="class_n_r_e_1_1_utility_1_1_array.php#a1cfaee04c82c6ee4b4f225b651b11391">getFront</a>();</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;                        T <span class="keyword">const</span>&amp; <a class="code" href="class_n_r_e_1_1_utility_1_1_array.php#a1cfaee04c82c6ee4b4f225b651b11391">getFront</a>() <span class="keyword">const</span>;</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;                        T&amp; <a class="code" href="class_n_r_e_1_1_utility_1_1_array.php#a0ba2737186424d7a6330418e9a5dcfd4">getLast</a>();</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;                        T <span class="keyword">const</span>&amp; <a class="code" href="class_n_r_e_1_1_utility_1_1_array.php#a0ba2737186424d7a6330418e9a5dcfd4">getLast</a>() <span class="keyword">const</span>;</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;                        constexpr <span class="keywordtype">bool</span> <a class="code" href="class_n_r_e_1_1_utility_1_1_array.php#a014e1b208f5fda5335ea4b11e8f9c9e4">isEmpty</a>() <span class="keyword">const</span>;</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;                        constexpr std::size_t <a class="code" href="class_n_r_e_1_1_utility_1_1_array.php#a3597a22d6e54ffa1b10a7d2722028273">getSize</a>() <span class="keyword">const</span>;</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;                        constexpr std::size_t <a class="code" href="class_n_r_e_1_1_utility_1_1_array.php#a2770ed9f41c41e7063a73410b34a7b12">getMaxSize</a>() <span class="keyword">const</span>;</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;                    <span class="comment">//## Iterator Access ##//</span></div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;<span class="comment"></span>                        Iterator <a class="code" href="class_n_r_e_1_1_utility_1_1_array.php#a370a4e484cee21247a74334eef4d2b2d">begin</a>();</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;                        ConstIterator <a class="code" href="class_n_r_e_1_1_utility_1_1_array.php#a370a4e484cee21247a74334eef4d2b2d">begin</a>() <span class="keyword">const</span>;</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;                        ConstIterator <a class="code" href="class_n_r_e_1_1_utility_1_1_array.php#adcf509c9cddaf2564dc2794bb72e8819">cbegin</a>() <span class="keyword">const</span>;</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;                        Iterator <a class="code" href="class_n_r_e_1_1_utility_1_1_array.php#a0e8f848bcb413ba1ed1c2285e3a88245">end</a>();</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;                        ConstIterator <a class="code" href="class_n_r_e_1_1_utility_1_1_array.php#a0e8f848bcb413ba1ed1c2285e3a88245">end</a>() <span class="keyword">const</span>;</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;                        ConstIterator <a class="code" href="class_n_r_e_1_1_utility_1_1_array.php#aeed554b8f663e9cc267561cf43a630ad">cend</a>() <span class="keyword">const</span>;</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;                        ReverseIterator <a class="code" href="class_n_r_e_1_1_utility_1_1_array.php#a61ee3b447d3335c18bdd833a5debc3a0">rbegin</a>();</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;                        ConstReverseIterator <a class="code" href="class_n_r_e_1_1_utility_1_1_array.php#a61ee3b447d3335c18bdd833a5debc3a0">rbegin</a>() <span class="keyword">const</span>;</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;                        ConstReverseIterator <a class="code" href="class_n_r_e_1_1_utility_1_1_array.php#ab6838cd211a43b7987d4f4ef2504d36e">crbegin</a>() <span class="keyword">const</span>;</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;                        ReverseIterator <a class="code" href="class_n_r_e_1_1_utility_1_1_array.php#a0406aa5d43b160d9d733897906fcdb6d">rend</a>();</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;                        ConstReverseIterator <a class="code" href="class_n_r_e_1_1_utility_1_1_array.php#a0406aa5d43b160d9d733897906fcdb6d">rend</a>() <span class="keyword">const</span>;</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;                        ConstReverseIterator <a class="code" href="class_n_r_e_1_1_utility_1_1_array.php#ace8d0009f02de8e75038ca6802542503">crend</a>() <span class="keyword">const</span>;</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;                    <span class="comment">//## Methods ##//</span></div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;<span class="comment"></span>                        <span class="keywordtype">void</span> <a class="code" href="class_n_r_e_1_1_utility_1_1_array.php#ac9bcdd0aca1fa3c209d78ee733550987">fill</a>(T <span class="keyword">const</span>&amp; value);</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;                        <span class="keywordtype">void</span> <a class="code" href="class_n_r_e_1_1_utility_1_1_array.php#a72ed3c0b6c1ccbf335d9ef26c0e7e074">swap</a>(<a class="code" href="class_n_r_e_1_1_utility_1_1_array.php">Array</a>&amp; arr) noexcept;</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;                    <span class="comment">//## Access Operator ##//</span></div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;<span class="comment"></span>                        T&amp; <a class="code" href="class_n_r_e_1_1_utility_1_1_array.php#a039cf013fe61d56bc12c554eda5d2fc6">operator[]</a>(std::size_t index);</div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;                        T <span class="keyword">const</span>&amp; <a class="code" href="class_n_r_e_1_1_utility_1_1_array.php#a039cf013fe61d56bc12c554eda5d2fc6">operator[]</a>(std::size_t index) <span class="keyword">const</span>;</div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;</div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;                    <span class="comment">//## Assignment Operator ##//</span></div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;<span class="comment"></span>                        <a class="code" href="class_n_r_e_1_1_utility_1_1_array.php">Array</a>&amp; <a class="code" href="class_n_r_e_1_1_utility_1_1_array.php#adbd441f61e6a9784dc1e7c1055639738">operator =</a>(<a class="code" href="class_n_r_e_1_1_utility_1_1_array.php">Array</a> <span class="keyword">const</span>&amp; arr) = <span class="keywordflow">default</span>;</div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;                        <a class="code" href="class_n_r_e_1_1_utility_1_1_array.php">Array</a>&amp; <a class="code" href="class_n_r_e_1_1_utility_1_1_array.php#adbd441f61e6a9784dc1e7c1055639738">operator =</a>(<a class="code" href="class_n_r_e_1_1_utility_1_1_array.php">Array</a> &amp;&amp; arr) = <span class="keywordflow">default</span>;</div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;</div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;                    <span class="comment">//## Comparison Operator ##//</span></div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;<span class="comment"></span>                        template &lt;typename U = T, typename std::enable_if&lt;!std::is_pod&lt;U&gt;::value, <span class="keywordtype">int</span>&gt;::type = 0&gt;</div><div class="line"><a name="l00229"></a><span class="lineno"><a class="line" href="class_n_r_e_1_1_utility_1_1_array.php#ac3841ae70203b4f1d773a9fe65020970">  229</a></span>&#160;                        <span class="keywordtype">bool</span> <a class="code" href="class_n_r_e_1_1_utility_1_1_array.php#ac3841ae70203b4f1d773a9fe65020970">operator ==</a>(<a class="code" href="class_n_r_e_1_1_utility_1_1_array.php">Array</a> <span class="keyword">const</span>&amp; arr)<span class="keyword"> const </span>{</div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;                            <span class="keywordtype">bool</span> equal = <span class="keyword">true</span>;</div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;                            std::size_t current = 0;</div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;                            <span class="keywordflow">while</span> (equal &amp;&amp; current &lt; Size) {</div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;                                equal = data[current] == arr[current];</div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;                                current++;</div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;                            }</div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;                            <span class="keywordflow">return</span> equal;</div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;                        }</div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;                        template &lt;typename U = T, typename std::enable_if&lt;std::is_pod&lt;U&gt;::value, <span class="keywordtype">int</span>&gt;::type = 0&gt;</div><div class="line"><a name="l00244"></a><span class="lineno"><a class="line" href="class_n_r_e_1_1_utility_1_1_array.php#ac3841ae70203b4f1d773a9fe65020970">  244</a></span>&#160;                        <span class="keywordtype">bool</span> <a class="code" href="class_n_r_e_1_1_utility_1_1_array.php#ac3841ae70203b4f1d773a9fe65020970">operator ==</a>(<a class="code" href="class_n_r_e_1_1_utility_1_1_array.php">Array</a> <span class="keyword">const</span>&amp; arr)<span class="keyword"> const </span>{</div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;                            <span class="keywordflow">return</span> std::memcmp(data, arr.data, Size * <span class="keyword">sizeof</span>(T)) == 0;</div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;                        }</div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;                        <span class="keywordtype">bool</span> <a class="code" href="class_n_r_e_1_1_utility_1_1_array.php#acdf188605ad6e9c864aa034bd8e8b4d7">operator !=</a>(<a class="code" href="class_n_r_e_1_1_utility_1_1_array.php">Array</a> <span class="keyword">const</span>&amp; arr) <span class="keyword">const</span>;</div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;</div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;                    <span class="comment">//## Stream Operator ##//</span></div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;<span class="comment"></span>                        <a class="code" href="class_n_r_e_1_1_utility_1_1_basic_string.php">String</a> <a class="code" href="class_n_r_e_1_1_utility_1_1_array.php#ad8ecae20e4a7da25f9067f2c9011133f">toString</a>() <span class="keyword">const</span>;</div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;            };</div><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;        }</div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;    }</div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;</div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;<span class="preprocessor">    #include &quot;NRE_Array.tpp&quot;</span></div><div class="ttc" id="class_n_r_e_1_1_utility_1_1_array_php_a7c73d4e09069f287dd826778694a320c"><div class="ttname"><a href="class_n_r_e_1_1_utility_1_1_array.php#a7c73d4e09069f287dd826778694a320c">NRE::Utility::Array::Iterator</a></div><div class="ttdeci">T * Iterator</div><div class="ttdef"><b>Definition:</b> NRE_Array.hpp:39</div></div>
<div class="ttc" id="class_n_r_e_1_1_utility_1_1_array_php_adca9e0bfc6bec4c47db6b4cb1ba3f693"><div class="ttname"><a href="class_n_r_e_1_1_utility_1_1_array.php#adca9e0bfc6bec4c47db6b4cb1ba3f693">NRE::Utility::Array::Array</a></div><div class="ttdeci">Array()=default</div></div>
<div class="ttc" id="class_n_r_e_1_1_utility_1_1_array_php_a1cfaee04c82c6ee4b4f225b651b11391"><div class="ttname"><a href="class_n_r_e_1_1_utility_1_1_array.php#a1cfaee04c82c6ee4b4f225b651b11391">NRE::Utility::Array::getFront</a></div><div class="ttdeci">T &amp; getFront()</div></div>
<div class="ttc" id="class_n_r_e_1_1_utility_1_1_array_php_a370a4e484cee21247a74334eef4d2b2d"><div class="ttname"><a href="class_n_r_e_1_1_utility_1_1_array.php#a370a4e484cee21247a74334eef4d2b2d">NRE::Utility::Array::begin</a></div><div class="ttdeci">Iterator begin()</div></div>
<div class="ttc" id="class_n_r_e_1_1_utility_1_1_array_php_acdf188605ad6e9c864aa034bd8e8b4d7"><div class="ttname"><a href="class_n_r_e_1_1_utility_1_1_array.php#acdf188605ad6e9c864aa034bd8e8b4d7">NRE::Utility::Array::operator!=</a></div><div class="ttdeci">bool operator!=(Array const &amp;arr) const </div></div>
<div class="ttc" id="class_n_r_e_1_1_utility_1_1_array_php_ac9bcdd0aca1fa3c209d78ee733550987"><div class="ttname"><a href="class_n_r_e_1_1_utility_1_1_array.php#ac9bcdd0aca1fa3c209d78ee733550987">NRE::Utility::Array::fill</a></div><div class="ttdeci">void fill(T const &amp;value)</div></div>
<div class="ttc" id="class_n_r_e_1_1_utility_1_1_array_php_a0ba2737186424d7a6330418e9a5dcfd4"><div class="ttname"><a href="class_n_r_e_1_1_utility_1_1_array.php#a0ba2737186424d7a6330418e9a5dcfd4">NRE::Utility::Array::getLast</a></div><div class="ttdeci">T &amp; getLast()</div></div>
<div class="ttc" id="class_n_r_e_1_1_utility_1_1_array_php_a3597a22d6e54ffa1b10a7d2722028273"><div class="ttname"><a href="class_n_r_e_1_1_utility_1_1_array.php#a3597a22d6e54ffa1b10a7d2722028273">NRE::Utility::Array::getSize</a></div><div class="ttdeci">constexpr std::size_t getSize() const </div></div>
<div class="ttc" id="class_n_r_e_1_1_utility_1_1_array_php_acaa8371bb5be3991597d4f3515e8c547"><div class="ttname"><a href="class_n_r_e_1_1_utility_1_1_array.php#acaa8371bb5be3991597d4f3515e8c547">NRE::Utility::Array::getData</a></div><div class="ttdeci">T * getData()</div></div>
<div class="ttc" id="class_n_r_e_1_1_utility_1_1_array_php_a0e8f848bcb413ba1ed1c2285e3a88245"><div class="ttname"><a href="class_n_r_e_1_1_utility_1_1_array.php#a0e8f848bcb413ba1ed1c2285e3a88245">NRE::Utility::Array::end</a></div><div class="ttdeci">Iterator end()</div></div>
<div class="ttc" id="class_n_r_e_1_1_utility_1_1_stringable_php"><div class="ttname"><a href="class_n_r_e_1_1_utility_1_1_stringable.php">NRE::Utility::Stringable</a></div><div class="ttdoc">Describe an stringable object. </div><div class="ttdef"><b>Definition:</b> NRE_Stringable.hpp:33</div></div>
<div class="ttc" id="class_n_r_e_1_1_utility_1_1_array_php_a014e1b208f5fda5335ea4b11e8f9c9e4"><div class="ttname"><a href="class_n_r_e_1_1_utility_1_1_array.php#a014e1b208f5fda5335ea4b11e8f9c9e4">NRE::Utility::Array::isEmpty</a></div><div class="ttdeci">constexpr bool isEmpty() const </div></div>
<div class="ttc" id="class_n_r_e_1_1_utility_1_1_array_php_ac3841ae70203b4f1d773a9fe65020970"><div class="ttname"><a href="class_n_r_e_1_1_utility_1_1_array.php#ac3841ae70203b4f1d773a9fe65020970">NRE::Utility::Array::operator==</a></div><div class="ttdeci">bool operator==(Array const &amp;arr) const </div><div class="ttdef"><b>Definition:</b> NRE_Array.hpp:229</div></div>
<div class="ttc" id="class_n_r_e_1_1_utility_1_1_array_php_aeed554b8f663e9cc267561cf43a630ad"><div class="ttname"><a href="class_n_r_e_1_1_utility_1_1_array.php#aeed554b8f663e9cc267561cf43a630ad">NRE::Utility::Array::cend</a></div><div class="ttdeci">ConstIterator cend() const </div></div>
<div class="ttc" id="namespace_n_r_e_php"><div class="ttname"><a href="namespace_n_r_e.php">NRE</a></div><div class="ttdoc">The NearlyRealEngine&amp;#39;s global namespace. </div></div>
<div class="ttc" id="class_n_r_e_1_1_utility_1_1_array_php_a194595bf8eda8b81742a7b3ec59d2e47"><div class="ttname"><a href="class_n_r_e_1_1_utility_1_1_array.php#a194595bf8eda8b81742a7b3ec59d2e47">NRE::Utility::Array::ReverseIterator</a></div><div class="ttdeci">std::reverse_iterator&lt; T * &gt; ReverseIterator</div><div class="ttdef"><b>Definition:</b> NRE_Array.hpp:43</div></div>
<div class="ttc" id="class_n_r_e_1_1_utility_1_1_array_php_adbd441f61e6a9784dc1e7c1055639738"><div class="ttname"><a href="class_n_r_e_1_1_utility_1_1_array.php#adbd441f61e6a9784dc1e7c1055639738">NRE::Utility::Array::operator=</a></div><div class="ttdeci">Array &amp; operator=(Array const &amp;arr)=default</div></div>
<div class="ttc" id="class_n_r_e_1_1_utility_1_1_array_php_a61ee3b447d3335c18bdd833a5debc3a0"><div class="ttname"><a href="class_n_r_e_1_1_utility_1_1_array.php#a61ee3b447d3335c18bdd833a5debc3a0">NRE::Utility::Array::rbegin</a></div><div class="ttdeci">ReverseIterator rbegin()</div></div>
<div class="ttc" id="class_n_r_e_1_1_utility_1_1_basic_string_php"><div class="ttname"><a href="class_n_r_e_1_1_utility_1_1_basic_string.php">NRE::Utility::BasicString</a></div><div class="ttdoc">A basic template string, with dynamic size, guarantee to be in contiguous memory. ...</div><div class="ttdef"><b>Definition:</b> NRE_String.hpp:38</div></div>
<div class="ttc" id="class_n_r_e_1_1_utility_1_1_array_php_ad0527ef7754879228ba0c9caf90fc14c"><div class="ttname"><a href="class_n_r_e_1_1_utility_1_1_array.php#ad0527ef7754879228ba0c9caf90fc14c">NRE::Utility::Array::ConstIterator</a></div><div class="ttdeci">const T * ConstIterator</div><div class="ttdef"><b>Definition:</b> NRE_Array.hpp:41</div></div>
<div class="ttc" id="class_n_r_e_1_1_utility_1_1_array_php_adcf509c9cddaf2564dc2794bb72e8819"><div class="ttname"><a href="class_n_r_e_1_1_utility_1_1_array.php#adcf509c9cddaf2564dc2794bb72e8819">NRE::Utility::Array::cbegin</a></div><div class="ttdeci">ConstIterator cbegin() const </div></div>
<div class="ttc" id="class_n_r_e_1_1_utility_1_1_array_php_ace8d0009f02de8e75038ca6802542503"><div class="ttname"><a href="class_n_r_e_1_1_utility_1_1_array.php#ace8d0009f02de8e75038ca6802542503">NRE::Utility::Array::crend</a></div><div class="ttdeci">ConstReverseIterator crend() const </div></div>
<div class="ttc" id="namespace_utility_php"><div class="ttname"><a href="namespace_utility.php">Utility</a></div><div class="ttdoc">Utility&amp;#39;s API. </div></div>
<div class="ttc" id="class_n_r_e_1_1_utility_1_1_array_php_a8b21cfd0a6608aefaef606d1df918a7c"><div class="ttname"><a href="class_n_r_e_1_1_utility_1_1_array.php#a8b21cfd0a6608aefaef606d1df918a7c">NRE::Utility::Array::~Array</a></div><div class="ttdeci">~Array()=default</div></div>
<div class="ttc" id="class_n_r_e_1_1_utility_1_1_array_php"><div class="ttname"><a href="class_n_r_e_1_1_utility_1_1_array.php">NRE::Utility::Array</a></div><div class="ttdoc">A fixed size array. </div><div class="ttdef"><b>Definition:</b> NRE_Array.hpp:36</div></div>
<div class="ttc" id="class_n_r_e_1_1_utility_1_1_array_php_a72ed3c0b6c1ccbf335d9ef26c0e7e074"><div class="ttname"><a href="class_n_r_e_1_1_utility_1_1_array.php#a72ed3c0b6c1ccbf335d9ef26c0e7e074">NRE::Utility::Array::swap</a></div><div class="ttdeci">void swap(Array &amp;arr) noexcept</div></div>
<div class="ttc" id="class_n_r_e_1_1_utility_1_1_array_php_a2770ed9f41c41e7063a73410b34a7b12"><div class="ttname"><a href="class_n_r_e_1_1_utility_1_1_array.php#a2770ed9f41c41e7063a73410b34a7b12">NRE::Utility::Array::getMaxSize</a></div><div class="ttdeci">constexpr std::size_t getMaxSize() const </div></div>
<div class="ttc" id="class_n_r_e_1_1_utility_1_1_array_php_a039cf013fe61d56bc12c554eda5d2fc6"><div class="ttname"><a href="class_n_r_e_1_1_utility_1_1_array.php#a039cf013fe61d56bc12c554eda5d2fc6">NRE::Utility::Array::operator[]</a></div><div class="ttdeci">T &amp; operator[](std::size_t index)</div></div>
<div class="ttc" id="class_n_r_e_1_1_utility_1_1_array_php_ad8ecae20e4a7da25f9067f2c9011133f"><div class="ttname"><a href="class_n_r_e_1_1_utility_1_1_array.php#ad8ecae20e4a7da25f9067f2c9011133f">NRE::Utility::Array::toString</a></div><div class="ttdeci">String toString() const </div></div>
<div class="ttc" id="class_n_r_e_1_1_utility_1_1_array_php_ab6838cd211a43b7987d4f4ef2504d36e"><div class="ttname"><a href="class_n_r_e_1_1_utility_1_1_array.php#ab6838cd211a43b7987d4f4ef2504d36e">NRE::Utility::Array::crbegin</a></div><div class="ttdeci">ConstReverseIterator crbegin() const </div></div>
<div class="ttc" id="class_n_r_e_1_1_utility_1_1_array_php_a0406aa5d43b160d9d733897906fcdb6d"><div class="ttname"><a href="class_n_r_e_1_1_utility_1_1_array.php#a0406aa5d43b160d9d733897906fcdb6d">NRE::Utility::Array::rend</a></div><div class="ttdeci">ReverseIterator rend()</div></div>
</div><!-- fragment --></div><!-- contents -->
<!-- HTML footer for doxygen 1.8.8-->
<!-- start footer part -->
</div>
</div>
</div>
</div>
</body>
</html>
