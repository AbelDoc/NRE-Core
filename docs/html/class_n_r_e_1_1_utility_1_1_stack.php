<!-- HTML header for doxygen 1.8.8-->
<!DOCTYPE html>
<html>
    <head>
        <meta http-equiv="X-UA-Compatible" content="IE=edge">
        <!-- For Mobile Devices -->
        <meta name="viewport" content="width=device-width, initial-scale=1">
        <meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
        <meta name="generator" content="Doxygen 1.8.11"/>
        <script type="text/javascript" src="../../js/jquery-2.1.1.min.js"></script>
        <title>NRE-Utility: NRE::Utility::Stack&lt; T, Container &gt; Class Template Reference</title>
        <!--<link href="tabs.css" rel="stylesheet" type="text/css"/>-->
        <script type="text/javascript" src="dynsections.js"></script>
        <link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
        <link href="doxygen.css" rel="stylesheet" type="text/css" />
        <link href="style.css" rel="stylesheet" type="text/css"/>
        <link href='https://fonts.googleapis.com/css?family=Roboto+Slab' rel='stylesheet' type='text/css'>
        <?php
            include '../../php/navigation.php';
            if (!isset($_COOKIE["theme"]) || $_COOKIE["theme"] == "dark") {
                echo '<link href="../../css/dark/bootstrap.css" rel="stylesheet">';
            } else {
                echo '<link href="../../css/light/bootstrap.css" rel="stylesheet">';
            }
        ?>
        <script src="../../js/bootstrap.min.js"></script>
        <script type="text/javascript" src="doxy-boot.js"></script>
    </head>
    <body>
        <div class="container-fluid">
            <header class="page-header">
                <a href="../../../index.php">
                    <img src="../../img/Logo.png" class="logo img-responsive"/>
                </a>
            </header>
            <?php addNavigationBarInl(false); ?>
            <div id="top" class="row"><!-- do not remove this div, it is closed by doxygen! -->
                <div class="col-lg-12">
                    <div class="panel panel-default">
                        <div class="panel-body">
<!-- end header part -->
<!-- Generated by Doxygen 1.8.11 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.php"><span>Main&#160;Page</span></a></li>
      <li><a href="namespaces.php"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.php"><span>Classes</span></a></li>
      <li><a href="files.php"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.php"><span>Class&#160;List</span></a></li>
      <li><a href="classes.php"><span>Class&#160;Index</span></a></li>
      <li><a href="hierarchy.php"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.php"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespace_n_r_e.php">NRE</a></li><li class="navelem"><b>Utility</b></li><li class="navelem"><a class="el" href="class_n_r_e_1_1_utility_1_1_stack.php">Stack</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="class_n_r_e_1_1_utility_1_1_stack-members.php">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">NRE::Utility::Stack&lt; T, Container &gt; Class Template Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>A stack adapter wrapping a container class.  
 <a href="class_n_r_e_1_1_utility_1_1_stack.php#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="_n_r_e___stack_8hpp_source.php">NRE_Stack.hpp</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for NRE::Utility::Stack&lt; T, Container &gt;:</div>
<div class="dyncontent">
 <div class="center">
  <img src="class_n_r_e_1_1_utility_1_1_stack.png" usemap="#NRE::Utility::Stack_3C_20T_2C_20Container_20_3E_map" alt=""/>
  <map id="NRE::Utility::Stack_3C_20T_2C_20Container_20_3E_map" name="NRE::Utility::Stack&lt; T, Container &gt;_map">
<area href="class_n_r_e_1_1_utility_1_1_stringable.php" alt="NRE::Utility::Stringable&lt; Stack&lt; T, Container &gt; &gt;" shape="rect" coords="0,56,376,80"/>
<area href="class_n_r_e_1_1_utility_1_1_static_interface.php" title="Describe an object using CRTP to create static interface (static polymorphism) " alt="NRE::Utility::StaticInterface&lt; T, M &gt;" shape="rect" coords="0,0,376,24"/>
</map>
 </div></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a0fb9f26708174bd16ad33be23fa79b0b"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_stack.php#a0fb9f26708174bd16ad33be23fa79b0b">Stack</a> (Container &amp;&amp;container=Container())</td></tr>
<tr class="separator:a0fb9f26708174bd16ad33be23fa79b0b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa2aa3d8c8351d2b329e15771c9ed9162"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_stack.php#aa2aa3d8c8351d2b329e15771c9ed9162">Stack</a> (Container const &amp;container)</td></tr>
<tr class="separator:aa2aa3d8c8351d2b329e15771c9ed9162"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5a37323d578364e4a5848d0a83e43e76"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_stack.php#a5a37323d578364e4a5848d0a83e43e76">Stack</a> (<a class="el" href="class_n_r_e_1_1_utility_1_1_stack.php">Stack</a> const &amp;s)=default</td></tr>
<tr class="separator:a5a37323d578364e4a5848d0a83e43e76"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a814a2b791dbd4555d658e2686e51d41f"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_stack.php#a814a2b791dbd4555d658e2686e51d41f">Stack</a> (<a class="el" href="class_n_r_e_1_1_utility_1_1_stack.php">Stack</a> &amp;&amp;s)=default</td></tr>
<tr class="separator:a814a2b791dbd4555d658e2686e51d41f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abde8678c62784d73239a488e6a16f8d3"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_stack.php#abde8678c62784d73239a488e6a16f8d3">~Stack</a> ()=default</td></tr>
<tr class="separator:abde8678c62784d73239a488e6a16f8d3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abd7056182ae176012d9f55cedf427813"><td class="memItemLeft" align="right" valign="top">T &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_stack.php#abd7056182ae176012d9f55cedf427813">getTop</a> ()</td></tr>
<tr class="separator:abd7056182ae176012d9f55cedf427813"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a284ae53875efd2089e1e7ae3cdc32a5f"><td class="memItemLeft" align="right" valign="top">T const &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_stack.php#a284ae53875efd2089e1e7ae3cdc32a5f">getTop</a> () const </td></tr>
<tr class="separator:a284ae53875efd2089e1e7ae3cdc32a5f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad2c84dfbe7f88a6c0350b400b593e251"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_stack.php#ad2c84dfbe7f88a6c0350b400b593e251">isEmpty</a> () const </td></tr>
<tr class="separator:ad2c84dfbe7f88a6c0350b400b593e251"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a41619ddba878602b48c277facb3e2e11"><td class="memItemLeft" align="right" valign="top">std::size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_stack.php#a41619ddba878602b48c277facb3e2e11">getSize</a> () const </td></tr>
<tr class="separator:a41619ddba878602b48c277facb3e2e11"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4cf97be0bf934c70ead58c5fef7853aa"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_stack.php#a4cf97be0bf934c70ead58c5fef7853aa">push</a> (T const &amp;value)</td></tr>
<tr class="separator:a4cf97be0bf934c70ead58c5fef7853aa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acc50e85f466cc273d80552bd03b1a2db"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_stack.php#acc50e85f466cc273d80552bd03b1a2db">push</a> (T &amp;&amp;value)</td></tr>
<tr class="separator:acc50e85f466cc273d80552bd03b1a2db"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7056eedccf0985dfc6b83811373765ae"><td class="memTemplParams" colspan="2">template&lt;class... Args&gt; </td></tr>
<tr class="memitem:a7056eedccf0985dfc6b83811373765ae"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_stack.php#a7056eedccf0985dfc6b83811373765ae">emplace</a> (Args &amp;&amp;...args)</td></tr>
<tr class="separator:a7056eedccf0985dfc6b83811373765ae"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a27f8d9c497e05251326a49655bd9da48"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_stack.php#a27f8d9c497e05251326a49655bd9da48">pop</a> ()</td></tr>
<tr class="separator:a27f8d9c497e05251326a49655bd9da48"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa7846ea11319d74378c03278fa5ac7b0"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_stack.php#aa7846ea11319d74378c03278fa5ac7b0">swap</a> (<a class="el" href="class_n_r_e_1_1_utility_1_1_stack.php">Stack</a> &amp;s)</td></tr>
<tr class="separator:aa7846ea11319d74378c03278fa5ac7b0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa0591770d9d6ffd0b3d20b91b7632030"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_utility_1_1_stack.php">Stack</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_stack.php#aa0591770d9d6ffd0b3d20b91b7632030">operator=</a> (<a class="el" href="class_n_r_e_1_1_utility_1_1_stack.php">Stack</a> const &amp;s)=default</td></tr>
<tr class="separator:aa0591770d9d6ffd0b3d20b91b7632030"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a09de02457ac5adbf31da634b357ab9ae"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_utility_1_1_stack.php">Stack</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_stack.php#a09de02457ac5adbf31da634b357ab9ae">operator=</a> (<a class="el" href="class_n_r_e_1_1_utility_1_1_stack.php">Stack</a> &amp;&amp;s)=default</td></tr>
<tr class="separator:a09de02457ac5adbf31da634b357ab9ae"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a39f4b130a39d707e1f26a6e1ae7911ea"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_stack.php#a39f4b130a39d707e1f26a6e1ae7911ea">operator==</a> (<a class="el" href="class_n_r_e_1_1_utility_1_1_stack.php">Stack</a> const &amp;s) const </td></tr>
<tr class="separator:a39f4b130a39d707e1f26a6e1ae7911ea"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac3cd88146c5182ab3e876440c329ab31"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_stack.php#ac3cd88146c5182ab3e876440c329ab31">operator!=</a> (<a class="el" href="class_n_r_e_1_1_utility_1_1_stack.php">Stack</a> const &amp;s) const </td></tr>
<tr class="separator:ac3cd88146c5182ab3e876440c329ab31"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9259e7119a6d5a7c50770431379098b1"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">String</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_stack.php#a9259e7119a6d5a7c50770431379098b1">toString</a> () const </td></tr>
<tr class="separator:a9259e7119a6d5a7c50770431379098b1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_class_n_r_e_1_1_utility_1_1_stringable"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_class_n_r_e_1_1_utility_1_1_stringable')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="class_n_r_e_1_1_utility_1_1_stringable.php">NRE::Utility::Stringable&lt; Stack&lt; T, Container &gt; &gt;</a></td></tr>
<tr class="memitem:a858907f8126e9c210854ddb659dd17ee inherit pub_methods_class_n_r_e_1_1_utility_1_1_stringable"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">String</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_stringable.php#a858907f8126e9c210854ddb659dd17ee">toString</a> () const</td></tr>
<tr class="separator:a858907f8126e9c210854ddb659dd17ee inherit pub_methods_class_n_r_e_1_1_utility_1_1_stringable"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_class_n_r_e_1_1_utility_1_1_static_interface"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_class_n_r_e_1_1_utility_1_1_static_interface')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="class_n_r_e_1_1_utility_1_1_static_interface.php">NRE::Utility::StaticInterface&lt; T, M &gt;</a></td></tr>
<tr class="memitem:a72fd5f7816f2a8309328186e1bf2b2f5 inherit pub_methods_class_n_r_e_1_1_utility_1_1_static_interface"><td class="memItemLeft" align="right" valign="top">T &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_static_interface.php#a72fd5f7816f2a8309328186e1bf2b2f5">impl</a> ()</td></tr>
<tr class="separator:a72fd5f7816f2a8309328186e1bf2b2f5 inherit pub_methods_class_n_r_e_1_1_utility_1_1_static_interface"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1fcc521ea437ea9edceae7f0c03ab6b1 inherit pub_methods_class_n_r_e_1_1_utility_1_1_static_interface"><td class="memItemLeft" align="right" valign="top">T const &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_utility_1_1_static_interface.php#a1fcc521ea437ea9edceae7f0c03ab6b1">impl</a> () const </td></tr>
<tr class="separator:a1fcc521ea437ea9edceae7f0c03ab6b1 inherit pub_methods_class_n_r_e_1_1_utility_1_1_static_interface"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><h3>template&lt;class T, class Container = Vector&lt;T&gt;&gt;<br />
class NRE::Utility::Stack&lt; T, Container &gt;</h3>

<p>A stack adapter wrapping a container class. </p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="a0fb9f26708174bd16ad33be23fa79b0b"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T , class Container  = Vector&lt;T&gt;&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_stack.php">NRE::Utility::Stack</a>&lt; T, Container &gt;::<a class="el" href="class_n_r_e_1_1_utility_1_1_stack.php">Stack</a> </td>
          <td>(</td>
          <td class="paramtype">Container &amp;&amp;&#160;</td>
          <td class="paramname"><em>container</em> = <code>Container()</code></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Construct a stack from a moved container </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">container</td><td>the container to move </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="aa2aa3d8c8351d2b329e15771c9ed9162"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T , class Container  = Vector&lt;T&gt;&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_stack.php">NRE::Utility::Stack</a>&lt; T, Container &gt;::<a class="el" href="class_n_r_e_1_1_utility_1_1_stack.php">Stack</a> </td>
          <td>(</td>
          <td class="paramtype">Container const &amp;&#160;</td>
          <td class="paramname"><em>container</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Construct a stack from a container to copy </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">container</td><td>the container to copy </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a5a37323d578364e4a5848d0a83e43e76"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T , class Container  = Vector&lt;T&gt;&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_stack.php">NRE::Utility::Stack</a>&lt; T, Container &gt;::<a class="el" href="class_n_r_e_1_1_utility_1_1_stack.php">Stack</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_stack.php">Stack</a>&lt; T, Container &gt; const &amp;&#160;</td>
          <td class="paramname"><em>s</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Copy s into this </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">s</td><td>the stack to copy </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a814a2b791dbd4555d658e2686e51d41f"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T , class Container  = Vector&lt;T&gt;&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_stack.php">NRE::Utility::Stack</a>&lt; T, Container &gt;::<a class="el" href="class_n_r_e_1_1_utility_1_1_stack.php">Stack</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_stack.php">Stack</a>&lt; T, Container &gt; &amp;&amp;&#160;</td>
          <td class="paramname"><em>s</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Move s into this </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">s</td><td>the stack to move </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="abde8678c62784d73239a488e6a16f8d3"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T , class Container  = Vector&lt;T&gt;&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_stack.php">NRE::Utility::Stack</a>&lt; T, Container &gt;::~<a class="el" href="class_n_r_e_1_1_utility_1_1_stack.php">Stack</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p><a class="el" href="class_n_r_e_1_1_utility_1_1_stack.php" title="A stack adapter wrapping a container class. ">Stack</a> Deconstructor </p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a class="anchor" id="a7056eedccf0985dfc6b83811373765ae"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T , class Container  = Vector&lt;T&gt;&gt; </div>
<div class="memtemplate">
template&lt;class... Args&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="class_n_r_e_1_1_utility_1_1_stack.php">NRE::Utility::Stack</a>&lt; T, Container &gt;::emplace </td>
          <td>(</td>
          <td class="paramtype">Args &amp;&amp;...&#160;</td>
          <td class="paramname"><em>args</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Emplace a value at the top of the stack </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">args</td><td>the arguments for the value construction </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a41619ddba878602b48c277facb3e2e11"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T , class Container  = Vector&lt;T&gt;&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">std::size_t <a class="el" href="class_n_r_e_1_1_utility_1_1_stack.php">NRE::Utility::Stack</a>&lt; T, Container &gt;::getSize </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>the stack effective size </dd></dl>

</div>
</div>
<a class="anchor" id="abd7056182ae176012d9f55cedf427813"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T , class Container  = Vector&lt;T&gt;&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">T&amp; <a class="el" href="class_n_r_e_1_1_utility_1_1_stack.php">NRE::Utility::Stack</a>&lt; T, Container &gt;::getTop </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>the top element </dd></dl>

</div>
</div>
<a class="anchor" id="a284ae53875efd2089e1e7ae3cdc32a5f"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T , class Container  = Vector&lt;T&gt;&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">T const&amp; <a class="el" href="class_n_r_e_1_1_utility_1_1_stack.php">NRE::Utility::Stack</a>&lt; T, Container &gt;::getTop </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>the top element </dd></dl>

</div>
</div>
<a class="anchor" id="ad2c84dfbe7f88a6c0350b400b593e251"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T , class Container  = Vector&lt;T&gt;&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">bool <a class="el" href="class_n_r_e_1_1_utility_1_1_stack.php">NRE::Utility::Stack</a>&lt; T, Container &gt;::isEmpty </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>if the stack is empty </dd></dl>

</div>
</div>
<a class="anchor" id="ac3cd88146c5182ab3e876440c329ab31"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T , class Container  = Vector&lt;T&gt;&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">bool <a class="el" href="class_n_r_e_1_1_utility_1_1_stack.php">NRE::Utility::Stack</a>&lt; T, Container &gt;::operator!= </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_stack.php">Stack</a>&lt; T, Container &gt; const &amp;&#160;</td>
          <td class="paramname"><em>s</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Inequality test between this and s </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">s</td><td>the other stack </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the test result </dd></dl>

</div>
</div>
<a class="anchor" id="aa0591770d9d6ffd0b3d20b91b7632030"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T , class Container  = Vector&lt;T&gt;&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_stack.php">Stack</a>&amp; <a class="el" href="class_n_r_e_1_1_utility_1_1_stack.php">NRE::Utility::Stack</a>&lt; T, Container &gt;::operator= </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_stack.php">Stack</a>&lt; T, Container &gt; const &amp;&#160;</td>
          <td class="paramname"><em>s</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Copy s into this </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">s</td><td>the stack to copy into this </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the reference of himself </dd></dl>

</div>
</div>
<a class="anchor" id="a09de02457ac5adbf31da634b357ab9ae"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T , class Container  = Vector&lt;T&gt;&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_stack.php">Stack</a>&amp; <a class="el" href="class_n_r_e_1_1_utility_1_1_stack.php">NRE::Utility::Stack</a>&lt; T, Container &gt;::operator= </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_stack.php">Stack</a>&lt; T, Container &gt; &amp;&amp;&#160;</td>
          <td class="paramname"><em>s</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Move s into this </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">s</td><td>the stack to move into this </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the reference of himself </dd></dl>

</div>
</div>
<a class="anchor" id="a39f4b130a39d707e1f26a6e1ae7911ea"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T , class Container  = Vector&lt;T&gt;&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">bool <a class="el" href="class_n_r_e_1_1_utility_1_1_stack.php">NRE::Utility::Stack</a>&lt; T, Container &gt;::operator== </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_stack.php">Stack</a>&lt; T, Container &gt; const &amp;&#160;</td>
          <td class="paramname"><em>s</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Equality test between this and s </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">s</td><td>the other stack </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the test result </dd></dl>

</div>
</div>
<a class="anchor" id="a27f8d9c497e05251326a49655bd9da48"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T , class Container  = Vector&lt;T&gt;&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="class_n_r_e_1_1_utility_1_1_stack.php">NRE::Utility::Stack</a>&lt; T, Container &gt;::pop </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Pop the top element in the stack </p>

</div>
</div>
<a class="anchor" id="a4cf97be0bf934c70ead58c5fef7853aa"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T , class Container  = Vector&lt;T&gt;&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="class_n_r_e_1_1_utility_1_1_stack.php">NRE::Utility::Stack</a>&lt; T, Container &gt;::push </td>
          <td>(</td>
          <td class="paramtype">T const &amp;&#160;</td>
          <td class="paramname"><em>value</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Insert a copy of value at the top of the stack </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">value</td><td>the value to insert </td></tr>
  </table>
  </dd>
</dl>
<dl class="section pre"><dt>Precondition</dt><dd>value don't reference a stack item </dd></dl>

</div>
</div>
<a class="anchor" id="acc50e85f466cc273d80552bd03b1a2db"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T , class Container  = Vector&lt;T&gt;&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="class_n_r_e_1_1_utility_1_1_stack.php">NRE::Utility::Stack</a>&lt; T, Container &gt;::push </td>
          <td>(</td>
          <td class="paramtype">T &amp;&amp;&#160;</td>
          <td class="paramname"><em>value</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Emplace a value at the top of the stack </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">value</td><td>the value to insert </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="aa7846ea11319d74378c03278fa5ac7b0"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T , class Container  = Vector&lt;T&gt;&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="class_n_r_e_1_1_utility_1_1_stack.php">NRE::Utility::Stack</a>&lt; T, Container &gt;::swap </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_utility_1_1_stack.php">Stack</a>&lt; T, Container &gt; &amp;&#160;</td>
          <td class="paramname"><em>s</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Swap the stack with another stack </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">s</td><td>the other stack </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a9259e7119a6d5a7c50770431379098b1"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T , class Container  = Vector&lt;T&gt;&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_utility_1_1_basic_string.php">String</a> <a class="el" href="class_n_r_e_1_1_utility_1_1_stack.php">NRE::Utility::Stack</a>&lt; T, Container &gt;::toString </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Convert the object into a string representation </p><dl class="section return"><dt>Returns</dt><dd>the converted object </dd></dl>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>/mnt/c/Users/abell/Documents/GitHub/NRE-Utility/src/Utility/Stack/<a class="el" href="_n_r_e___stack_8hpp_source.php">NRE_Stack.hpp</a></li>
</ul>
</div><!-- contents -->
<!-- HTML footer for doxygen 1.8.8-->
<!-- start footer part -->
</div>
</div>
</div>
</div>
</body>
</html>
